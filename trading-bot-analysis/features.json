{
  "metadata": {
    "topic": "cryptocurrency trading bot",
    "generated_at": "2025-10-29T15:53:39.516618",
    "repositories_analyzed": 20,
    "total_features": 586,
    "unique_features": 461,
    "deduplication_rate": 0.2133105802047781
  },
  "repositories": [
    {
      "name": "freqtrade/freqtrade",
      "url": "https://github.com/freqtrade/freqtrade",
      "stars": 44088,
      "language": "Python",
      "features": [
        {
          "text": "[x] Based on Python 3.11+: For botting on any operating system - Windows, macOS and Linux.",
          "source_url": "https://github.com/freqtrade/freqtrade#L68",
          "evidence": "- [x] **Based on Python 3.11+**: For botting on any operating system - Windows, macOS and Linux."
        },
        {
          "text": "[x] Persistence: Persistence is achieved through sqlite.",
          "source_url": "https://github.com/freqtrade/freqtrade#L69",
          "evidence": "- [x] **Persistence**: Persistence is achieved through sqlite."
        },
        {
          "text": "[x] Dry-run: Run the bot without paying money.",
          "source_url": "https://github.com/freqtrade/freqtrade#L70",
          "evidence": "- [x] **Dry-run**: Run the bot without paying money."
        },
        {
          "text": "[x] Backtesting: Run a simulation of your buy/sell strategy.",
          "source_url": "https://github.com/freqtrade/freqtrade#L71",
          "evidence": "- [x] **Backtesting**: Run a simulation of your buy/sell strategy."
        },
        {
          "text": "[x] Strategy Optimization by machine learning: Use machine learning to optimize your buy/sell strategy parameters with real exchange data.",
          "source_url": "https://github.com/freqtrade/freqtrade#L72",
          "evidence": "- [x] **Strategy Optimization by machine learning**: Use machine learning to optimize your buy/sell strategy parameters with real exchange data."
        },
        {
          "text": "[X] Adaptive prediction modeling: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. Learn more",
          "source_url": "https://github.com/freqtrade/freqtrade#L73",
          "evidence": "- [X] **Adaptive prediction modeling**: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. [Learn more](https://www.freqtrade.io/en/stable/freqai/)"
        },
        {
          "text": "[x] Whitelist crypto-currencies: Select which crypto-currency you want to trade or use dynamic whitelists.",
          "source_url": "https://github.com/freqtrade/freqtrade#L74",
          "evidence": "- [x] **Whitelist crypto-currencies**: Select which crypto-currency you want to trade or use dynamic whitelists."
        },
        {
          "text": "[x] Blacklist crypto-currencies: Select which crypto-currency you want to avoid.",
          "source_url": "https://github.com/freqtrade/freqtrade#L75",
          "evidence": "- [x] **Blacklist crypto-currencies**: Select which crypto-currency you want to avoid."
        },
        {
          "text": "[x] Builtin WebUI: Builtin web UI to manage your bot.",
          "source_url": "https://github.com/freqtrade/freqtrade#L76",
          "evidence": "- [x] **Builtin WebUI**: Builtin web UI to manage your bot."
        },
        {
          "text": "[x] Manageable via Telegram: Manage the bot with Telegram.",
          "source_url": "https://github.com/freqtrade/freqtrade#L77",
          "evidence": "- [x] **Manageable via Telegram**: Manage the bot with Telegram."
        },
        {
          "text": "[x] Display profit/loss in fiat: Display your profit/loss in fiat currency.",
          "source_url": "https://github.com/freqtrade/freqtrade#L78",
          "evidence": "- [x] **Display profit/loss in fiat**: Display your profit/loss in fiat currency."
        },
        {
          "text": "[x] Performance status report: Provide a performance status of your current trades.",
          "source_url": "https://github.com/freqtrade/freqtrade#L79",
          "evidence": "- [x] **Performance status report**: Provide a performance status of your current trades."
        },
        {
          "text": "support all major exchanges and be controlled via telegram or webui",
          "source_url": "https://github.com/freqtrade/freqtrade#L8",
          "evidence": "Freqtrade is a free and open source crypto trading bot written in Python. It is designed to support all major exchanges and be controlled via Telegram or webUI. It contains backtesting, plotting and money management tools as well as strategy optimization by machine learning."
        },
        {
          "text": "run and do not engage money",
          "source_url": "https://github.com/freqtrade/freqtrade#L18",
          "evidence": "Always start by running a trading bot in Dry-run and do not engage money"
        },
        {
          "text": "run the bot without paying money",
          "source_url": "https://github.com/freqtrade/freqtrade#L70",
          "evidence": "- [x] **Dry-run**: Run the bot without paying money."
        },
        {
          "text": "run a simulation of your buy/sell strategy",
          "source_url": "https://github.com/freqtrade/freqtrade#L71",
          "evidence": "- [x] **Backtesting**: Run a simulation of your buy/sell strategy."
        },
        {
          "text": "build a smart strategy with freqai that self-trains to the market via adaptive machine learning methods",
          "source_url": "https://github.com/freqtrade/freqtrade#L73",
          "evidence": "- [X] **Adaptive prediction modeling**: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. [Learn more](https://www.freqtrade.io/en/stable/freqai/)"
        },
        {
          "text": "manage the bot with telegram",
          "source_url": "https://github.com/freqtrade/freqtrade#L77",
          "evidence": "- [x] **Manageable via Telegram**: Manage the bot with Telegram."
        },
        {
          "text": "provide a performance status of your current trades",
          "source_url": "https://github.com/freqtrade/freqtrade#L79",
          "evidence": "- [x] **Performance status report**: Provide a performance status of your current trades."
        },
        {
          "text": "create user-data directory",
          "source_url": "https://github.com/freqtrade/freqtrade#L101",
          "evidence": "create-userdir      Create user-data directory."
        },
        {
          "text": "create new config",
          "source_url": "https://github.com/freqtrade/freqtrade#L102",
          "evidence": "new-config          Create new config"
        },
        {
          "text": "create new strategy",
          "source_url": "https://github.com/freqtrade/freqtrade#L104",
          "evidence": "new-strategy        Create new strategy"
        },
        {
          "text": "generate plot showing profits",
          "source_url": "https://github.com/freqtrade/freqtrade#L130",
          "evidence": "plot-profit         Generate plot showing profits."
        },
        {
          "text": "create a new issue](https://github",
          "source_url": "https://github.com/freqtrade/freqtrade#L180",
          "evidence": "[create a new issue](https://github.com/freqtrade/freqtrade/issues/new/choose) and"
        },
        {
          "text": "create a new request](https://github",
          "source_url": "https://github.com/freqtrade/freqtrade#L193",
          "evidence": "[create a new request](https://github.com/freqtrade/freqtrade/issues/new/choose)"
        },
        {
          "text": "create your pr against the `develop` branch, not `stable`",
          "source_url": "https://github.com/freqtrade/freqtrade#L210",
          "evidence": "**Important:** Always create your PR against the `develop` branch, not `stable`."
        },
        {
          "text": "run this bot we recommend you a cloud instance with a minimum of:",
          "source_url": "https://github.com/freqtrade/freqtrade#L220",
          "evidence": "To run this bot we recommend you a cloud instance with a minimum of:"
        },
        {
          "text": "[x] Dry-run: Run the bot without paying money.",
          "source_url": "https://github.com/freqtrade/freqtrade#L70",
          "evidence": "- [x] **Dry-run**: Run the bot without paying money."
        },
        {
          "text": "[x] Backtesting: Run a simulation of your buy/sell strategy.",
          "source_url": "https://github.com/freqtrade/freqtrade#L71",
          "evidence": "- [x] **Backtesting**: Run a simulation of your buy/sell strategy."
        },
        {
          "text": "[X] Adaptive prediction modeling: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. Learn more",
          "source_url": "https://github.com/freqtrade/freqtrade#L73",
          "evidence": "- [X] **Adaptive prediction modeling**: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. [Learn more](https://www.freqtrade.io/en/stable/freqai/)"
        },
        {
          "text": "[x] Builtin WebUI: Builtin web UI to manage your bot.",
          "source_url": "https://github.com/freqtrade/freqtrade#L76",
          "evidence": "- [x] **Builtin WebUI**: Builtin web UI to manage your bot."
        },
        {
          "text": "[x] Manageable via Telegram: Manage the bot with Telegram.",
          "source_url": "https://github.com/freqtrade/freqtrade#L77",
          "evidence": "- [x] **Manageable via Telegram**: Manage the bot with Telegram."
        },
        {
          "text": "[x] Performance status report: Provide a performance status of your current trades.",
          "source_url": "https://github.com/freqtrade/freqtrade#L79",
          "evidence": "- [x] **Performance status report**: Provide a performance status of your current trades."
        },
        {
          "text": "`/performance`: Show performance of each finished trade grouped by pair",
          "source_url": "https://github.com/freqtrade/freqtrade#L154",
          "evidence": "- `/performance`: Show performance of each finished trade grouped by pair"
        },
        {
          "text": "*Important:** Always create your PR against the `develop` branch, not `stable`.",
          "source_url": "https://github.com/freqtrade/freqtrade#L210",
          "evidence": "**Important:** Always create your PR against the `develop` branch, not `stable`."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "ccxt/ccxt",
      "url": "https://github.com/ccxt/ccxt",
      "stars": 39572,
      "language": "Python",
      "features": [
        {
          "text": "provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering",
          "source_url": "https://github.com/ccxt/ccxt#L9",
          "evidence": "The **CCXT** library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering."
        },
        {
          "text": "processing services worldwide",
          "source_url": "https://github.com/ccxt/ccxt#L9",
          "evidence": "The **CCXT** library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering."
        },
        {
          "text": "building trading algorithms",
          "source_url": "https://github.com/ccxt/ccxt#L11",
          "evidence": "It is intended to be used by **coders, developers, technically-skilled traders, data-scientists and financial analysts** for building trading algorithms."
        },
        {
          "text": "support for many cryptocurrency exchanges \u2014 more coming soon",
          "source_url": "https://github.com/ccxt/ccxt#L15",
          "evidence": "- support for many cryptocurrency exchanges \u2014 more coming soon"
        },
        {
          "text": "supports the following 103 cryptocurrency exchange markets and trading apis:",
          "source_url": "https://github.com/ccxt/ccxt#L55",
          "evidence": "<!--- init list -->The CCXT library currently supports the following 103 cryptocurrency exchange markets and trading APIs:"
        },
        {
          "text": "build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is",
          "source_url": "https://github.com/ccxt/ccxt#L166",
          "evidence": "The library is under [MIT license](https://github.com/ccxt/ccxt/blob/master/LICENSE.txt), that means it's absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is."
        },
        {
          "text": "import {version, exchanges} from 'ccxt';",
          "source_url": "https://github.com/ccxt/ccxt#L215",
          "evidence": "import {version, exchanges} from 'ccxt';"
        },
        {
          "text": "creates a global `ccxt` object:",
          "source_url": "https://github.com/ccxt/ccxt#L232",
          "evidence": "Creates a global `ccxt` object:"
        },
        {
          "text": "supports concurrent asynchronous mode with asyncio and async/await in python 3",
          "source_url": "https://github.com/ccxt/ccxt#L251",
          "evidence": "The library supports concurrent asynchronous mode with asyncio and async/await in Python 3.7.0+"
        },
        {
          "text": "supports `orjson` for parsing json since it is much faster than the builtin library",
          "source_url": "https://github.com/ccxt/ccxt#L259",
          "evidence": "CCXT also supports `orjson` for parsing JSON since it is much faster than the builtin library. This is especially important when using websockets because some exchanges return big messages that need to be parsed and dispatched as quickly as possible."
        },
        {
          "text": "supports concurrent asynchronous mode using tools from [reactphp](https://reactphp",
          "source_url": "https://github.com/ccxt/ccxt#L280",
          "evidence": "The library supports concurrent asynchronous mode using tools from [ReactPHP](https://reactphp.org/) in PHP 8.1+. Read the [Manual](https://github.com/ccxt/ccxt/wiki/) for more details."
        },
        {
          "text": "build scripts and tests \u2014 please see the [contributing](https://github",
          "source_url": "https://github.com/ccxt/ccxt#L305",
          "evidence": "You can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests \u2014 please see the [Contributing](https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md) document for the details on that)."
        },
        {
          "text": "run the build scripts and tests \u2014 please see the [contributing](https://github",
          "source_url": "https://github.com/ccxt/ccxt#L305",
          "evidence": "You can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests \u2014 please see the [Contributing](https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md) document for the details on that)."
        },
        {
          "text": "provide unrestricted access to public information for all exchange markets without the need to register a user account or have an api key",
          "source_url": "https://github.com/ccxt/ccxt#L321",
          "evidence": "The CCXT library consists of a public part and a private part. Anyone can use the public part immediately after installation. Public APIs provide unrestricted access to public information for all exchange markets without the need to register a user account or have an API key."
        },
        {
          "text": "include the following:",
          "source_url": "https://github.com/ccxt/ccxt#L323",
          "evidence": "Public APIs include the following:"
        },
        {
          "text": "create accounts or api keys for you",
          "source_url": "https://github.com/ccxt/ccxt#L334",
          "evidence": "In order to trade with private APIs you need to obtain API keys from an exchange's website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don't. You will have to sign up and create API keys on their websites."
        },
        {
          "text": "create api keys on their websites",
          "source_url": "https://github.com/ccxt/ccxt#L334",
          "evidence": "In order to trade with private APIs you need to obtain API keys from an exchange's website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don't. You will have to sign up and create API keys on their websites."
        },
        {
          "text": "allow the following:",
          "source_url": "https://github.com/ccxt/ccxt#L336",
          "evidence": "Private APIs allow the following:"
        },
        {
          "text": "manage personal account info",
          "source_url": "https://github.com/ccxt/ccxt#L338",
          "evidence": "- manage personal account info"
        },
        {
          "text": "implements full public and private rest and websocket apis for all exchanges in typescript, javascript, php and python",
          "source_url": "https://github.com/ccxt/ccxt#L347",
          "evidence": "This library implements full public and private REST and WebSocket APIs for all exchanges in TypeScript, JavaScript, PHP and Python."
        },
        {
          "text": "supports both camelcase notation (preferred in typescript and javascript) and underscore notation (preferred in python and php), therefore all methods can be called in either notation or coding style in any language",
          "source_url": "https://github.com/ccxt/ccxt#L349",
          "evidence": "The CCXT library supports both camelcase notation (preferred in TypeScript and JavaScript) and underscore notation (preferred in Python and PHP), therefore all methods can be called in either notation or coding style in any language."
        },
        {
          "text": "supports esm and cjs modules**",
          "source_url": "https://github.com/ccxt/ccxt#L361",
          "evidence": "**CCXT now supports ESM and CJS modules**"
        },
        {
          "text": "import {version, binance} from 'ccxt';",
          "source_url": "https://github.com/ccxt/ccxt#L412",
          "evidence": "import {version, binance} from 'ccxt';"
        },
        {
          "text": "support \"traditional\" optional parameters like `function a(optional = false)`",
          "source_url": "https://github.com/ccxt/ccxt#L579",
          "evidence": "Unlike Javascript/Python/PHP/C# Go does not support \"traditional\" optional parameters like `function a(optional = false)`. However, the CCXT language and structure have some methods with optional params, and since the Go language is transpiled from the Typescript source, we had to find a way of representing them."
        },
        {
          "text": "supports 4 different \"optional\" parameters, symbol, since, limit, and params",
          "source_url": "https://github.com/ccxt/ccxt#L583",
          "evidence": "For example, this function `FetchMyTrades` supports 4 different \"optional\" parameters, symbol, since, limit, and params."
        },
        {
          "text": "provide them by doing",
          "source_url": "https://github.com/ccxt/ccxt#L589",
          "evidence": "And we can provide them by doing"
        },
        {
          "text": "provide it to avoid getting a `symbolrequired` error",
          "source_url": "https://github.com/ccxt/ccxt#L595",
          "evidence": "Lastly, just because the signature dictates that some argument like `symbol` is optional, it will depend from exchange to exchange and you might need to provide it to avoid getting a `SymbolRequired` error."
        },
        {
          "text": "enables direct interaction with any supported exchange from the terminal",
          "source_url": "https://github.com/ccxt/ccxt#L603",
          "evidence": "CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data\u2014without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don\u2019t warrant the overhead of building a full application."
        },
        {
          "text": "provides a command-line interface (cli) that enables direct interaction with any supported exchange from the terminal",
          "source_url": "https://github.com/ccxt/ccxt#L603",
          "evidence": "CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data\u2014without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don\u2019t warrant the overhead of building a full application."
        },
        {
          "text": "building a full application",
          "source_url": "https://github.com/ccxt/ccxt#L603",
          "evidence": "CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data\u2014without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don\u2019t warrant the overhead of building a full application."
        },
        {
          "text": "execute custom code",
          "source_url": "https://github.com/ccxt/ccxt#L603",
          "evidence": "CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data\u2014without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don\u2019t warrant the overhead of building a full application."
        },
        {
          "text": "allows you to invoke any ccxt method by specifying the exchange id, the methodname, and any required arguments",
          "source_url": "https://github.com/ccxt/ccxt#L615",
          "evidence": "You can use the `--help` option to view a general overview of how the CLI works. The tool allows you to invoke any CCXT method by specifying the exchange id, the methodName, and any required arguments."
        },
        {
          "text": "provide api keys by setting them as environment varibales eg: `binance_apikey=\"xxxx\"` or adding them to the config file located at `$cache/config",
          "source_url": "https://github.com/ccxt/ccxt#L644",
          "evidence": "You can easily provide API keys by setting them as environment varibales eg: `BINANCE_APIKEY=\"XXXX\"` or adding them to the config file located at `$CACHE/config.json`"
        },
        {
          "text": "support developer team",
          "source_url": "https://github.com/ccxt/ccxt#L650",
          "evidence": "## Support Developer Team"
        },
        {
          "text": "support us with a tip",
          "source_url": "https://github.com/ccxt/ccxt#L652",
          "evidence": "We are investing a significant amount of time into the development of this library. If CCXT made your life easier and you want to help us improve it further, or if you want to speed up development of new features and exchanges, please support us with a tip. We appreciate all contributions!"
        },
        {
          "text": "support this project by becoming a sponsor",
          "source_url": "https://github.com/ccxt/ccxt#L656",
          "evidence": "Support this project by becoming a sponsor."
        },
        {
          "text": "support this project by becoming a supporter",
          "source_url": "https://github.com/ccxt/ccxt#L673",
          "evidence": "Support this project by becoming a supporter. Your avatar will show up here with a link to your website."
        },
        {
          "text": "support for many cryptocurrency exchanges \u2014 more coming soon",
          "source_url": "https://github.com/ccxt/ccxt#L15",
          "evidence": "- support for many cryptocurrency exchanges \u2014 more coming soon"
        },
        {
          "text": "fully implemented public and private APIs",
          "source_url": "https://github.com/ccxt/ccxt#L16",
          "evidence": "- fully implemented public and private APIs"
        },
        {
          "text": "an out of the box unified API that is extremely easy to integrate",
          "source_url": "https://github.com/ccxt/ccxt#L18",
          "evidence": "- an out of the box unified API that is extremely easy to integrate"
        },
        {
          "text": "python/ in Python (generated from TS)",
          "source_url": "https://github.com/ccxt/ccxt#L183",
          "evidence": "- [python/](https://github.com/ccxt/ccxt/blob/master/python/) in Python (generated from TS)"
        },
        {
          "text": "php/ in PHP (generated from TS)",
          "source_url": "https://github.com/ccxt/ccxt#L184",
          "evidence": "- [php/](https://github.com/ccxt/ccxt/blob/master/php/) in PHP (generated from TS)"
        },
        {
          "text": "cs/  in C# (generated from TS)",
          "source_url": "https://github.com/ccxt/ccxt#L185",
          "evidence": "- [cs/](https://github.com/ccxt/ccxt/blob/master/cs/)  in C# (generated from TS)"
        },
        {
          "text": "go/  in Go (generated from TS)",
          "source_url": "https://github.com/ccxt/ccxt#L186",
          "evidence": "- [go/](https://github.com/ccxt/ccxt/blob/master/go/)  in Go (generated from TS)"
        },
        {
          "text": "manage personal account info",
          "source_url": "https://github.com/ccxt/ccxt#L338",
          "evidence": "- manage personal account info"
        },
        {
          "text": "*CCXT now supports ESM and CJS modules**",
          "source_url": "https://github.com/ccxt/ccxt#L361",
          "evidence": "**CCXT now supports ESM and CJS modules**"
        },
        {
          "text": "<sub>![Telegram Announcements](https://t.me/ccxt_announcements)</sub> CCXT Channel on Telegram (important announcements)",
          "source_url": "https://github.com/ccxt/ccxt#L701",
          "evidence": "- <sub>[![Telegram Announcements](https://img.shields.io/badge/CCXT-Channel-blue?logo=telegram)](https://t.me/ccxt_announcements)</sub> CCXT Channel on Telegram (important announcements)"
        },
        {
          "text": "<sub>![Telegram Chat](https://t.me/ccxt_chat)</sub> CCXT Chat on Telegram (technical support)",
          "source_url": "https://github.com/ccxt/ccxt#L702",
          "evidence": "- <sub>[![Telegram Chat](https://img.shields.io/badge/CCXT-Chat-blue?logo=telegram)](https://t.me/ccxt_chat)</sub> CCXT Chat on Telegram (technical support)"
        },
        {
          "text": "API broker means CCXT is funded with rebates from exchanges' API broker programs and it is an official API broker with many exchanges, all rebates and related fees are handled by the exchanges solely in accordance with exchanges' respective terms and conditions established by each partner exchange.",
          "source_url": "https://github.com/ccxt/ccxt#L714",
          "evidence": "- **API broker** means CCXT is funded with rebates from exchanges' API broker programs and it is an official API broker with many exchanges, all rebates and related fees are handled by the exchanges solely in accordance with exchanges' respective terms and conditions established by each partner exchange."
        },
        {
          "text": "Open source means anyone is allowed to use it, to look inside the code and to change everything, including other brokers.",
          "source_url": "https://github.com/ccxt/ccxt#L716",
          "evidence": "- **Open source** means anyone is allowed to use it, to look inside the code and to change everything, including other brokers."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "hummingbot/hummingbot",
      "url": "https://github.com/hummingbot/hummingbot",
      "stars": 14927,
      "language": "Python",
      "features": [
        {
          "text": "run on many centralized or decentralized exchanges",
          "source_url": "https://github.com/hummingbot/hummingbot#L9",
          "evidence": "Hummingbot is an open-source framework that helps you design and deploy automated trading strategies, or **bots**, that can run on many centralized or decentralized exchanges. Over the past year, Hummingbot users have generated over $34 billion in trading volume across 140+ unique trading venues."
        },
        {
          "text": "building new connectors/strategies or adding custom code, see the [install from source](https://hummingbot",
          "source_url": "https://github.com/hummingbot/hummingbot#L31",
          "evidence": "Alternatively, if you are building new connectors/strategies or adding custom code, see the [Install from Source](https://hummingbot.org/installation/source/) section in the documentation."
        },
        {
          "text": "provides standardized connectors for interacting with automatic market maker (amm) decentralized exchanges (dexs) across different blockchain networks",
          "source_url": "https://github.com/hummingbot/hummingbot#L53",
          "evidence": "Gateway provides standardized connectors for interacting with automatic market maker (AMM) decentralized exchanges (DEXs) across different blockchain networks."
        },
        {
          "text": "run hummingbot with gateway, clone the repo and uncomment the gateway service lines in `docker-compose",
          "source_url": "https://github.com/hummingbot/hummingbot#L55",
          "evidence": "To run Hummingbot with Gateway, clone the repo and uncomment the Gateway service lines in `docker-compose.yml`:"
        },
        {
          "text": "generate the certificates needed",
          "source_url": "https://github.com/hummingbot/hummingbot#L87",
          "evidence": "By default, Gateway will start in development mode with unencrypted HTTP endpoints. To run in production model wth encrypted HTTPS, use the `DEV=false` flag and run `gateway generate-certs` in Hummingbot to generate the certificates needed. See [Development vs Production Modes](http://hummingbot.org/gateway/installation/#development-vs-production-modes) for more information."
        },
        {
          "text": "run in production model wth encrypted https, use the `dev=false` flag and run `gateway generate-certs` in hummingbot to generate the certificates needed",
          "source_url": "https://github.com/hummingbot/hummingbot#L87",
          "evidence": "By default, Gateway will start in development mode with unencrypted HTTP endpoints. To run in production model wth encrypted HTTPS, use the `DEV=false` flag and run `gateway generate-certs` in Hummingbot to generate the certificates needed. See [Development vs Production Modes](http://hummingbot.org/gateway/installation/#development-vs-production-modes) for more information."
        },
        {
          "text": "provide us for trading purposes nor share them with third parties",
          "source_url": "https://github.com/hummingbot/hummingbot#L101",
          "evidence": "We pledge that we will not use the information/data you provide us for trading purposes nor share them with third parties."
        },
        {
          "text": "build sophisticated trading strategies that can be deployed across many exchanges with minimal changes",
          "source_url": "https://github.com/hummingbot/hummingbot#L105",
          "evidence": "Hummingbot connectors standardize REST and WebSocket API interfaces to different types of exchanges, enabling you to build sophisticated trading strategies that can be deployed across many exchanges with minimal changes."
        },
        {
          "text": "support the development and maintenance of hummingbot via broker partnerships and sponsorships",
          "source_url": "https://github.com/hummingbot/hummingbot#L126",
          "evidence": "We are grateful for the following exchanges that support the development and maintenance of Hummingbot via broker partnerships and sponsorships."
        },
        {
          "text": "includes the following exchange connectors, which are maintained and updated through the hummingbot foundation governance process",
          "source_url": "https://github.com/hummingbot/hummingbot#L143",
          "evidence": "Currently, the master branch of Hummingbot also includes the following exchange connectors, which are maintained and updated through the Hummingbot Foundation governance process. See [Governance](https://hummingbot.org/governance/) for more information."
        },
        {
          "text": "manage hummingbot instances",
          "source_url": "https://github.com/hummingbot/hummingbot#L176",
          "evidence": "* [Dashboard](https://github.com/hummingbot/dashboard): Web app that helps you create, backtest, deploy, and manage Hummingbot instances"
        },
        {
          "text": "enable you to fetch data and perform research using hummingbot",
          "source_url": "https://github.com/hummingbot/hummingbot#L177",
          "evidence": "* [Quants Lab](https://github.com/hummingbot/quants-lab): Jupyter notebooks that enable you to fetch data and perform research using Hummingbot"
        },
        {
          "text": "perform research using hummingbot",
          "source_url": "https://github.com/hummingbot/hummingbot#L177",
          "evidence": "* [Quants Lab](https://github.com/hummingbot/quants-lab): Jupyter notebooks that enable you to fetch data and perform research using Hummingbot"
        },
        {
          "text": "Join our Discord community and ask questions in the #support channel",
          "source_url": "https://github.com/hummingbot/hummingbot#L99",
          "evidence": "* Join our [Discord community](https://discord.gg/hummingbot) and ask questions in the #support channel"
        },
        {
          "text": "AMM DEX: Decentralized exchanges using Automated Market Maker protocols. Non-custodial, connect via Gateway middleware.",
          "source_url": "https://github.com/hummingbot/hummingbot#L119",
          "evidence": "* **AMM DEX**: Decentralized exchanges using Automated Market Maker protocols. Non-custodial, connect via Gateway middleware."
        },
        {
          "text": "Dashboard: Web app that helps you create, backtest, deploy, and manage Hummingbot instances",
          "source_url": "https://github.com/hummingbot/hummingbot#L176",
          "evidence": "* [Dashboard](https://github.com/hummingbot/dashboard): Web app that helps you create, backtest, deploy, and manage Hummingbot instances"
        },
        {
          "text": "Quants Lab: Jupyter notebooks that enable you to fetch data and perform research using Hummingbot",
          "source_url": "https://github.com/hummingbot/hummingbot#L177",
          "evidence": "* [Quants Lab](https://github.com/hummingbot/quants-lab): Jupyter notebooks that enable you to fetch data and perform research using Hummingbot"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "ccxt/binance-trade-bot",
      "url": "https://github.com/ccxt/binance-trade-bot",
      "stars": 8535,
      "language": "Python",
      "features": [
        {
          "text": "includes my referral link, i'll be super grateful if you use it)",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L53",
          "evidence": "-   Create a [Binance account](https://accounts.binance.com/register?ref=PGDFCE46) (Includes my referral link, I'll be super grateful if you use it)."
        },
        {
          "text": "create a [binance account](https://accounts",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L53",
          "evidence": "-   Create a [Binance account](https://accounts.binance.com/register?ref=PGDFCE46) (Includes my referral link, I'll be super grateful if you use it)."
        },
        {
          "text": "enable two-factor authentication",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L54",
          "evidence": "-   Enable Two-factor Authentication."
        },
        {
          "text": "create a new api key",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L55",
          "evidence": "-   Create a new API key."
        },
        {
          "text": "run the following line in the terminal: `pip install -r requirements",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L62",
          "evidence": "Run the following line in the terminal: `pip install -r requirements.txt`."
        },
        {
          "text": "create user configuration",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L64",
          "evidence": "### Create user configuration"
        },
        {
          "text": "allow different sets of supported coins",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L74",
          "evidence": "-   **bridge** - Your bridge currency of choice. Notice that different bridges will allow different sets of supported coins. For example, there may be a Binance particular-coin/USDT pair but no particular-coin/BUSD pair."
        },
        {
          "text": "support this benefit, the bot will always perform the following operations:",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L104",
          "evidence": "You can [use BNB to pay for any fees on the Binance platform](https://www.binance.com/en/support/faq/115000583311-Using-BNB-to-Pay-for-Fees), which will reduce all fees by 25%. In order to support this benefit, the bot will always perform the following operations:"
        },
        {
          "text": "perform the following operations:",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L104",
          "evidence": "You can [use BNB to pay for any fees on the Binance platform](https://www.binance.com/en/support/faq/115000583311-Using-BNB-to-Pay-for-Fees), which will reduce all fees by 25%. In order to support this benefit, the bot will always perform the following operations:"
        },
        {
          "text": "allows the bot to send notifications to all of the most popular notification services available such as: telegram, discord, slack, amazon sns, gotify, etc",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L111",
          "evidence": "Apprise allows the bot to send notifications to all of the most popular notification services available such as: Telegram, Discord, Slack, Amazon SNS, Gotify, etc."
        },
        {
          "text": "create a apprise",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L113",
          "evidence": "To set this up you need to create a apprise.yml file in the config directory."
        },
        {
          "text": "run the server that returns the information",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L125",
          "evidence": "### Run the server that returns the information"
        },
        {
          "text": "support the project",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L173",
          "evidence": "## Support the Project"
        },
        {
          "text": "build a bot from scratch",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L189",
          "evidence": "## Want to build a bot from scratch?"
        },
        {
          "text": "offer by me or any third party service provider to buy or sell",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L200",
          "evidence": "endorsement, or offer by me or any third party service provider to buy or sell"
        },
        {
          "text": "offer would be unlawful under the",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L202",
          "evidence": "jurisdiction in which such solicitation or offer would be unlawful under the"
        },
        {
          "text": "Create a Binance account (Includes my referral link, I'll be super grateful if you use it).",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L53",
          "evidence": "-   Create a [Binance account](https://accounts.binance.com/register?ref=PGDFCE46) (Includes my referral link, I'll be super grateful if you use it)."
        },
        {
          "text": "Enable Two-factor Authentication.",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L54",
          "evidence": "-   Enable Two-factor Authentication."
        },
        {
          "text": "Create a new API key.",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L55",
          "evidence": "-   Create a new API key."
        },
        {
          "text": "api_key - Binance API key generated in the Binance account setup stage.",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L70",
          "evidence": "-   **api_key** - Binance API key generated in the Binance account setup stage."
        },
        {
          "text": "api_secret_key - Binance secret key generated in the Binance account setup stage.",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L71",
          "evidence": "-   **api_secret_key** - Binance secret key generated in the Binance account setup stage."
        },
        {
          "text": "current_coin - This is your starting coin of choice. This should be one of the coins from your supported coin list. If you want to start from your bridge currency, leave this field empty - the bot will select a random coin from your supported coin list and buy it.",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L73",
          "evidence": "-   **current_coin** - This is your starting coin of choice. This should be one of the coins from your supported coin list. If you want to start from your bridge currency, leave this field empty - the bot will select a random coin from your supported coin list and buy it."
        },
        {
          "text": "bridge - Your bridge currency of choice. Notice that different bridges will allow different sets of supported coins. For example, there may be a Binance particular-coin/USDT pair but no particular-coin/BUSD pair.",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L74",
          "evidence": "-   **bridge** - Your bridge currency of choice. Notice that different bridges will allow different sets of supported coins. For example, there may be a Binance particular-coin/USDT pair but no particular-coin/BUSD pair."
        },
        {
          "text": "Automatically detect that you have BNB fee payment enabled.",
          "source_url": "https://github.com/ccxt/binance-trade-bot#L105",
          "evidence": "-   Automatically detect that you have BNB fee payment enabled."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "DeviaVir/zenbot",
      "url": "https://github.com/DeviaVir/zenbot",
      "stars": 8284,
      "language": "HTML",
      "features": [
        {
          "text": "support for [binance](https://www",
          "source_url": "https://github.com/DeviaVir/zenbot#L15",
          "evidence": "- Full support for [Binance](https://www.binance.com/), [Bitfinex](https://www.bitfinex.com/), [Bitstamp](https://www.bitstamp.net/), [Bittrex](https://bittrex.com/), [CEX.IO](https://cex.io/), [GDAX](https://gdax.com/), [Gemini](https://gemini.com/), [HitBTC](https://hitbtc.com/), [Kraken](https://www.kraken.com/), [Poloniex](https://poloniex.com/)and [TheRockTrading](https://www.therocktrading.com/), work on further exchange support is ongoing."
        },
        {
          "text": "support is ongoing",
          "source_url": "https://github.com/DeviaVir/zenbot#L15",
          "evidence": "- Full support for [Binance](https://www.binance.com/), [Bitfinex](https://www.bitfinex.com/), [Bitstamp](https://www.bitstamp.net/), [Bittrex](https://bittrex.com/), [CEX.IO](https://cex.io/), [GDAX](https://gdax.com/), [Gemini](https://gemini.com/), [HitBTC](https://hitbtc.com/), [Kraken](https://www.kraken.com/), [Poloniex](https://poloniex.com/)and [TheRockTrading](https://www.therocktrading.com/), work on further exchange support is ongoing."
        },
        {
          "text": "implementing exchange support, or writing new strategies",
          "source_url": "https://github.com/DeviaVir/zenbot#L16",
          "evidence": "- Plugin architecture for implementing exchange support, or writing new strategies"
        },
        {
          "text": "plugin architecture for implementing exchange support, or writing new strategies",
          "source_url": "https://github.com/DeviaVir/zenbot#L16",
          "evidence": "- Plugin architecture for implementing exchange support, or writing new strategies"
        },
        {
          "text": "run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\"",
          "source_url": "https://github.com/DeviaVir/zenbot#L28",
          "evidence": "- Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\"."
        },
        {
          "text": "Fully-automated technical-analysis-based trading approach",
          "source_url": "https://github.com/DeviaVir/zenbot#L14",
          "evidence": "- Fully-automated [technical-analysis](https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:introduction_to_technical_indicators_and_oscillators)-based trading approach"
        },
        {
          "text": "Full support for Binance, Bitfinex, Bitstamp, Bittrex, CEX.IO, GDAX, Gemini, HitBTC, Kraken, Poloniexand TheRockTrading, work on further exchange support is ongoing.",
          "source_url": "https://github.com/DeviaVir/zenbot#L15",
          "evidence": "- Full support for [Binance](https://www.binance.com/), [Bitfinex](https://www.bitfinex.com/), [Bitstamp](https://www.bitstamp.net/), [Bittrex](https://bittrex.com/), [CEX.IO](https://cex.io/), [GDAX](https://gdax.com/), [Gemini](https://gemini.com/), [HitBTC](https://hitbtc.com/), [Kraken](https://www.kraken.com/), [Poloniex](https://poloniex.com/)and [TheRockTrading](https://www.therocktrading.com/), work on further exchange support is ongoing."
        },
        {
          "text": "Plugin architecture for implementing exchange support, or writing new strategies",
          "source_url": "https://github.com/DeviaVir/zenbot#L16",
          "evidence": "- Plugin architecture for implementing exchange support, or writing new strategies"
        },
        {
          "text": "Running a bot, and trading in general requires careful study of the risks and parameters involved. A wrong setting can cause you a major loss.",
          "source_url": "https://github.com/DeviaVir/zenbot#L26",
          "evidence": "- Running a bot, and trading in general requires careful study of the risks and parameters involved. A wrong setting can cause you a major loss."
        },
        {
          "text": "Never leave the bot un-monitored for long periods of time. Zenbot doesn't know when to stop, so be prepared to stop it if too much loss occurs.",
          "source_url": "https://github.com/DeviaVir/zenbot#L27",
          "evidence": "- Never leave the bot un-monitored for long periods of time. Zenbot doesn't know when to stop, so be prepared to stop it if too much loss occurs."
        },
        {
          "text": "Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\".",
          "source_url": "https://github.com/DeviaVir/zenbot#L28",
          "evidence": "- Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\"."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "jesse-ai/jesse",
      "url": "https://github.com/jesse-ai/jesse",
      "stars": 7000,
      "language": "JavaScript",
      "features": [
        {
          "text": "\ud83d\udcdd Simple Syntax: Define both simple and advanced trading strategies with the simplest syntax in the fastest time.",
          "source_url": "https://github.com/jesse-ai/jesse#L34",
          "evidence": "- \ud83d\udcdd **Simple Syntax**: Define both simple and advanced trading strategies with the simplest syntax in the fastest time."
        },
        {
          "text": "\ud83d\udcca Comprehensive Indicator Library: Access a complete library of technical indicators with easy-to-use syntax.",
          "source_url": "https://github.com/jesse-ai/jesse#L35",
          "evidence": "- \ud83d\udcca **Comprehensive Indicator Library**: Access a complete library of technical indicators with easy-to-use syntax."
        },
        {
          "text": "\ud83d\udcc8 Smart Ordering: Supports market, limit, and stop orders, automatically choosing the best one for you.",
          "source_url": "https://github.com/jesse-ai/jesse#L36",
          "evidence": "- \ud83d\udcc8 **Smart Ordering**: Supports market, limit, and stop orders, automatically choosing the best one for you."
        },
        {
          "text": "\u23f0 Multiple Timeframes and Symbols: Backtest and livetrade multiple timeframes and symbols simultaneously without look-ahead bias.",
          "source_url": "https://github.com/jesse-ai/jesse#L37",
          "evidence": "- \u23f0 **Multiple Timeframes and Symbols**: Backtest and livetrade multiple timeframes and symbols simultaneously without look-ahead bias."
        },
        {
          "text": "\ud83d\udd12 Self-Hosted and Privacy-First: Designed with your privacy in mind, fully self-hosted to ensure your trading strategies and data remain secure.",
          "source_url": "https://github.com/jesse-ai/jesse#L38",
          "evidence": "- \ud83d\udd12 **Self-Hosted and Privacy-First**: Designed with your privacy in mind, fully self-hosted to ensure your trading strategies and data remain secure."
        },
        {
          "text": "\ud83d\udee1\ufe0f Risk Management: Built-in helper functions for robust risk management.",
          "source_url": "https://github.com/jesse-ai/jesse#L39",
          "evidence": "- \ud83d\udee1\ufe0f **Risk Management**: Built-in helper functions for robust risk management."
        },
        {
          "text": "\ud83d\udccb Metrics System: A comprehensive metrics system to evaluate your trading strategy's performance.",
          "source_url": "https://github.com/jesse-ai/jesse#L40",
          "evidence": "- \ud83d\udccb **Metrics System**: A comprehensive metrics system to evaluate your trading strategy's performance."
        },
        {
          "text": "\ud83d\udd0d Debug Mode: Observe your strategy in action with a detailed debug mode.",
          "source_url": "https://github.com/jesse-ai/jesse#L41",
          "evidence": "- \ud83d\udd0d **Debug Mode**: Observe your strategy in action with a detailed debug mode."
        },
        {
          "text": "\ud83d\udd27 Optimize Mode: Fine-tune your strategies using AI, without needing a technical background.",
          "source_url": "https://github.com/jesse-ai/jesse#L42",
          "evidence": "- \ud83d\udd27 **Optimize Mode**: Fine-tune your strategies using AI, without needing a technical background."
        },
        {
          "text": "\ud83d\udcc8 Leveraged and Short-Selling: First-class support for leveraged trading and short-selling.",
          "source_url": "https://github.com/jesse-ai/jesse#L43",
          "evidence": "- \ud83d\udcc8 **Leveraged and Short-Selling**: First-class support for leveraged trading and short-selling."
        },
        {
          "text": "\ud83d\udd00 Partial Fills: Supports entering and exiting positions in multiple orders, allowing for greater flexibility.",
          "source_url": "https://github.com/jesse-ai/jesse#L44",
          "evidence": "- \ud83d\udd00 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility."
        },
        {
          "text": "\ud83d\udd14 Advanced Alerts: Create real-time alerts within your strategies for effective monitoring.",
          "source_url": "https://github.com/jesse-ai/jesse#L45",
          "evidence": "- \ud83d\udd14 **Advanced Alerts**: Create real-time alerts within your strategies for effective monitoring."
        },
        {
          "text": "\ud83e\udd16 JesseGPT: Jesse has its own GPT, JesseGPT, that can help you write strategies, optimize them, debug them, and much more.",
          "source_url": "https://github.com/jesse-ai/jesse#L46",
          "evidence": "- \ud83e\udd16 **JesseGPT**: Jesse has its own GPT, JesseGPT, that can help you write strategies, optimize them, debug them, and much more."
        },
        {
          "text": "\ud83d\udd27 Built-in Code Editor: Write, edit, and debug your strategies with a built-in code editor.",
          "source_url": "https://github.com/jesse-ai/jesse#L47",
          "evidence": "- \ud83d\udd27 **Built-in Code Editor**: Write, edit, and debug your strategies with a built-in code editor."
        },
        {
          "text": "\ud83d\udcfa Youtube Channel: Jesse has a Youtube channel with screencast tutorials that go through example strategies step by step.",
          "source_url": "https://github.com/jesse-ai/jesse#L48",
          "evidence": "- \ud83d\udcfa **Youtube Channel**: Jesse has a Youtube channel with screencast tutorials that go through example strategies step by step."
        },
        {
          "text": "supports market, limit, and stop orders, automatically choosing the best one for you",
          "source_url": "https://github.com/jesse-ai/jesse#L36",
          "evidence": "- \ud83d\udcc8 **Smart Ordering**: Supports market, limit, and stop orders, automatically choosing the best one for you."
        },
        {
          "text": "support for leveraged trading and short-selling",
          "source_url": "https://github.com/jesse-ai/jesse#L43",
          "evidence": "- \ud83d\udcc8 **Leveraged and Short-Selling**: First-class support for leveraged trading and short-selling."
        },
        {
          "text": "supports entering and exiting positions in multiple orders, allowing for greater flexibility",
          "source_url": "https://github.com/jesse-ai/jesse#L44",
          "evidence": "- \ud83d\udd00 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility."
        },
        {
          "text": "allowing for greater flexibility",
          "source_url": "https://github.com/jesse-ai/jesse#L44",
          "evidence": "- \ud83d\udd00 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility."
        },
        {
          "text": "create real-time alerts within your strategies for effective monitoring",
          "source_url": "https://github.com/jesse-ai/jesse#L45",
          "evidence": "- \ud83d\udd14 **Advanced Alerts**: Create real-time alerts within your strategies for effective monitoring."
        },
        {
          "text": "execute highly accurate and fast backtests without look-ahead bias",
          "source_url": "https://github.com/jesse-ai/jesse#L72",
          "evidence": "Execute highly accurate and fast backtests without look-ahead bias. Utilize debugging logs, interactive charts with indicator support, and detailed performance metrics to validate your strategies thoroughly."
        },
        {
          "text": "supports paper trading, multiple accounts, real-time logs & notifications (telegram, slack, discord), interactive charts, spot/futures, dex, and a built-in code editor",
          "source_url": "https://github.com/jesse-ai/jesse#L77",
          "evidence": "Deploy strategies live with robust monitoring tools. Supports paper trading, multiple accounts, real-time logs & notifications (Telegram, Slack, Discord), interactive charts, spot/futures, DEX, and a built-in code editor."
        },
        {
          "text": "monitoring tools",
          "source_url": "https://github.com/jesse-ai/jesse#L77",
          "evidence": "Deploy strategies live with robust monitoring tools. Supports paper trading, multiple accounts, real-time logs & notifications (Telegram, Slack, Discord), interactive charts, spot/futures, DEX, and a built-in code editor."
        },
        {
          "text": "run batch backtests, compare across timeframes, symbols, and strategies",
          "source_url": "https://github.com/jesse-ai/jesse#L82",
          "evidence": "Accelerate research using the benchmark feature. Run batch backtests, compare across timeframes, symbols, and strategies. Filter and sort results by key performance metrics for efficient analysis."
        },
        {
          "text": "implementing ideas, debugging, optimizing, and understanding code",
          "source_url": "https://github.com/jesse-ai/jesse#L87",
          "evidence": "Leverage our AI assistant even with limited Python knowledge. Get help writing and improving strategies, implementing ideas, debugging, optimizing, and understanding code. Your personal AI quant."
        },
        {
          "text": "\ud83d\udcc8 Smart Ordering: Supports market, limit, and stop orders, automatically choosing the best one for you.",
          "source_url": "https://github.com/jesse-ai/jesse#L36",
          "evidence": "- \ud83d\udcc8 **Smart Ordering**: Supports market, limit, and stop orders, automatically choosing the best one for you."
        },
        {
          "text": "\ud83d\udee1\ufe0f Risk Management: Built-in helper functions for robust risk management.",
          "source_url": "https://github.com/jesse-ai/jesse#L39",
          "evidence": "- \ud83d\udee1\ufe0f **Risk Management**: Built-in helper functions for robust risk management."
        },
        {
          "text": "\ud83d\udccb Metrics System: A comprehensive metrics system to evaluate your trading strategy's performance.",
          "source_url": "https://github.com/jesse-ai/jesse#L40",
          "evidence": "- \ud83d\udccb **Metrics System**: A comprehensive metrics system to evaluate your trading strategy's performance."
        },
        {
          "text": "\ud83d\udcc8 Leveraged and Short-Selling: First-class support for leveraged trading and short-selling.",
          "source_url": "https://github.com/jesse-ai/jesse#L43",
          "evidence": "- \ud83d\udcc8 **Leveraged and Short-Selling**: First-class support for leveraged trading and short-selling."
        },
        {
          "text": "\ud83d\udd00 Partial Fills: Supports entering and exiting positions in multiple orders, allowing for greater flexibility.",
          "source_url": "https://github.com/jesse-ai/jesse#L44",
          "evidence": "- \ud83d\udd00 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility."
        },
        {
          "text": "\ud83d\udd14 Advanced Alerts: Create real-time alerts within your strategies for effective monitoring.",
          "source_url": "https://github.com/jesse-ai/jesse#L45",
          "evidence": "- \ud83d\udd14 **Advanced Alerts**: Create real-time alerts within your strategies for effective monitoring."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "chrisleekr/binance-trading-bot",
      "url": "https://github.com/chrisleekr/binance-trading-bot",
      "stars": 5415,
      "language": "JavaScript",
      "features": [
        {
          "text": "Manual trade",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L250",
          "evidence": "- Manual trade"
        },
        {
          "text": "Convert small balances to BNB",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L251",
          "evidence": "- Convert small balances to BNB"
        },
        {
          "text": "Trade all symbols",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L252",
          "evidence": "- Trade all symbols"
        },
        {
          "text": "Monitoring multiple coins simultaneously",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L253",
          "evidence": "- Monitoring multiple coins simultaneously"
        },
        {
          "text": "Restrict buying with ATH price",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L255",
          "evidence": "- Restrict buying with ATH price"
        },
        {
          "text": "Grid Trade for buy/sell",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L256",
          "evidence": "- Grid Trade for buy/sell"
        },
        {
          "text": "Integrated with TradingView Technical Analysis",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L257",
          "evidence": "- Integrated with TradingView Technical Analysis"
        },
        {
          "text": "allows following the price fall/rise",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L36",
          "evidence": "This bot is using the concept of trailing buy/sell order which allows following the price fall/rise."
        },
        {
          "text": "supports multiple buy/sell orders based on the configuration",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L44",
          "evidence": "- The bot supports multiple buy/sell orders based on the configuration."
        },
        {
          "text": "monitor multiple symbols",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L45",
          "evidence": "- The bot can monitor multiple symbols. All symbols will be monitored per second."
        },
        {
          "text": "support raspberry pi 32bit",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L46",
          "evidence": "- The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version"
        },
        {
          "text": "provide a persistence database",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L46",
          "evidence": "- The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version"
        },
        {
          "text": "monitor the coin based on the grid trade configuration",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L52",
          "evidence": "The bot will continuously monitor the coin based on the grid trade configuration."
        },
        {
          "text": "monitor the coin based on the last buy price",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L56",
          "evidence": "After grid trade #1, the bot will monitor the COIN based on the last buy price."
        },
        {
          "text": "execute 1st purchase for the coin",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L108",
          "evidence": "Then the bot will execute 1st purchase for the coin. The last buy price will be recorded as `$99.845`. The purchased quantity will be `0.5`."
        },
        {
          "text": "monitor the next grid trading for buying",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L110",
          "evidence": "Once the coin is purchased, the bot will start monitoring the sell signal and at the same time, monitor the next grid trading for buying."
        },
        {
          "text": "monitoring the sell signal and at the same time, monitor the next grid trading for buying",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L110",
          "evidence": "Once the coin is purchased, the bot will start monitoring the sell signal and at the same time, monitor the next grid trading for buying."
        },
        {
          "text": "execute 2nd purchase for the coin",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L137",
          "evidence": "Then the bot will execute 2nd purchase for the coin. The last buy price will be automatically re-calculated as below:"
        },
        {
          "text": "monitoring the sell signal of the grid trade #1",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L149",
          "evidence": "If there is enough balance for selling and the last buy price is recorded in the bot, then the bot will start monitoring the sell signal of the grid trade #1. Once the current price reaches the trigger price of the grid trade #1, then the bot will place a STOP-LOSS-LIMIT order to sell. If the current price continuously rises, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price."
        },
        {
          "text": "configure it as `1` (100%)",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L166",
          "evidence": "Unlike buy, the sell configuration will use the percentage of a quantity. If you want to sell all of your coin quantity, then simply configure it as `1` (100%)."
        },
        {
          "text": "execute 1st sell for the coin",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L205",
          "evidence": "Then the bot will execute 1st sell for the coin. Then the bot will now wait for 2nd selling trigger price ($83.80 * 1.08 = $90.504)."
        },
        {
          "text": "execute 2nd sell for the coin",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L234",
          "evidence": "Then the bot will execute 2nd sell for the coin."
        },
        {
          "text": "monitoring multiple coins simultaneously",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L253",
          "evidence": "- Monitoring multiple coins simultaneously"
        },
        {
          "text": "monitoring coins with buy/sell signals/open orders",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L263",
          "evidence": "- List monitoring coins with buy/sell signals/open orders"
        },
        {
          "text": "manage global/symbol settings",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L266",
          "evidence": "- Manage global/symbol settings"
        },
        {
          "text": "support add to home screen",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L269",
          "evidence": "- Support Add to Home Screen"
        },
        {
          "text": "build image from dockerhub:",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L309",
          "evidence": "If want production/live mode, then use the latest build image from DockerHub:"
        },
        {
          "text": "run below commands:",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L316",
          "evidence": "Or if want development/test mode, then run below commands:"
        },
        {
          "text": "create new stack",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L329",
          "evidence": "1. In [Portainer](https://www.portainer.io/) create new Stack"
        },
        {
          "text": "allow to execute stop-loss before buy action - [#299](https://github",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L364",
          "evidence": "- [ ] Allow to execute stop-loss before buy action - [#299](https://github.com/chrisleekr/binance-trading-bot/issues/299)"
        },
        {
          "text": "execute stop-loss before buy action - [#299](https://github",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L364",
          "evidence": "- [ ] Allow to execute stop-loss before buy action - [#299](https://github.com/chrisleekr/binance-trading-bot/issues/299)"
        },
        {
          "text": "manage setting profiles (save/change/load",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L367",
          "evidence": "- [ ] Manage setting profiles (save/change/load?/export?) - [#151](https://github.com/chrisleekr/binance-trading-bot/issues/151)"
        },
        {
          "text": "supporting apprise - [#106](https://github",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L368",
          "evidence": "- [ ] Improve notifications by supporting Apprise - [#106](https://github.com/chrisleekr/binance-trading-bot/issues/106)"
        },
        {
          "text": "support cool time after hitting the lowest price before buy - [#105](https://github",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L369",
          "evidence": "- [ ] Support cool time after hitting the lowest price before buy - [#105](https://github.com/chrisleekr/binance-trading-bot/issues/105)"
        },
        {
          "text": "support multilingual frontend - [#56](https://github",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L371",
          "evidence": "- [ ] Support multilingual frontend - [#56](https://github.com/chrisleekr/binance-trading-bot/issues/56)"
        },
        {
          "text": "support stop-loss configuration per grid trade for selling - [#261](https://github",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L373",
          "evidence": "- [ ] Support STOP-LOSS configuration per grid trade for selling - [#261](https://github.com/chrisleekr/binance-trading-bot/issues/261)"
        },
        {
          "text": "The bot supports multiple buy/sell orders based on the configuration.",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L44",
          "evidence": "- The bot supports multiple buy/sell orders based on the configuration."
        },
        {
          "text": "The bot can monitor multiple symbols. All symbols will be monitored per second.",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L45",
          "evidence": "- The bot can monitor multiple symbols. All symbols will be monitored per second."
        },
        {
          "text": "The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L46",
          "evidence": "- The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version"
        },
        {
          "text": "Monitoring multiple coins simultaneously",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L253",
          "evidence": "- Monitoring multiple coins simultaneously"
        },
        {
          "text": "Integrated with TradingView Technical Analysis",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L257",
          "evidence": "- Integrated with TradingView Technical Analysis"
        },
        {
          "text": "List monitoring coins with buy/sell signals/open orders",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L263",
          "evidence": "- List monitoring coins with buy/sell signals/open orders"
        },
        {
          "text": "Manage global/symbol settings",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L266",
          "evidence": "- Manage global/symbol settings"
        },
        {
          "text": "Delete caches that are not monitored",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L267",
          "evidence": "- Delete caches that are not monitored"
        },
        {
          "text": "Support Add to Home Screen",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L269",
          "evidence": "- Support Add to Home Screen"
        },
        {
          "text": "*You must change the authentication password; otherwise, it will be configured as the default password.*",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L299",
          "evidence": "*You must change the authentication password; otherwise, it will be configured as the default password.*"
        },
        {
          "text": "[ ] Allow to execute stop-loss before buy action - #299",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L364",
          "evidence": "- [ ] Allow to execute stop-loss before buy action - [#299](https://github.com/chrisleekr/binance-trading-bot/issues/299)"
        },
        {
          "text": "[ ] Manage setting profiles (save/change/load?/export?) - #151",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L367",
          "evidence": "- [ ] Manage setting profiles (save/change/load?/export?) - [#151](https://github.com/chrisleekr/binance-trading-bot/issues/151)"
        },
        {
          "text": "[ ] Improve notifications by supporting Apprise - #106",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L368",
          "evidence": "- [ ] Improve notifications by supporting Apprise - [#106](https://github.com/chrisleekr/binance-trading-bot/issues/106)"
        },
        {
          "text": "[ ] Support cool time after hitting the lowest price before buy - #105",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L369",
          "evidence": "- [ ] Support cool time after hitting the lowest price before buy - [#105](https://github.com/chrisleekr/binance-trading-bot/issues/105)"
        },
        {
          "text": "[ ] Support multilingual frontend - #56",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L371",
          "evidence": "- [ ] Support multilingual frontend - [#56](https://github.com/chrisleekr/binance-trading-bot/issues/56)"
        },
        {
          "text": "[ ] Support STOP-LOSS configuration per grid trade for selling - #261",
          "source_url": "https://github.com/chrisleekr/binance-trading-bot#L373",
          "evidence": "- [ ] Support STOP-LOSS configuration per grid trade for selling - [#261](https://github.com/chrisleekr/binance-trading-bot/issues/261)"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "Superalgos/Superalgos",
      "url": "https://github.com/Superalgos/Superalgos",
      "stars": 5082,
      "language": "JavaScript",
      "features": [
        {
          "text": "run the platform on different settings",
          "source_url": "https://github.com/Superalgos/Superalgos#L52",
          "evidence": "* System requirements | Learn about the [minimum hardware](https://superalgos.org/crypto-trading-bots-system-requirements.shtml) required to run the platform on different settings."
        },
        {
          "text": "run a live trading session",
          "source_url": "https://github.com/Superalgos/Superalgos#L70",
          "evidence": "Once you install and launch the app, a series of interactive tutorials take you by the hand and walk you around the system while you learn the basic skills required to use the interface, mine data, backtest strategies, and even run a live trading session. It is highly recommended to do all tutorials, as they are carefully crafted to make your onboarding as easy as possible."
        },
        {
          "text": "offers the ability to install the platform in a clean and isolated environment",
          "source_url": "https://github.com/Superalgos/Superalgos#L86",
          "evidence": "2. [Docker deployments](README_Docker.md) | Docker offers the ability to install the platform in a clean and isolated environment. The standard Docker installation is not optimized for development or contributions, but some workarounds are offered."
        },
        {
          "text": "run live trading sessions in the cloud",
          "source_url": "https://github.com/Superalgos/Superalgos#L90",
          "evidence": "4. [Public Cloud](README_PublicCloud.md) | This is a great option for those who wish to run live trading sessions in the cloud. You will need to be comfortable with option 3 above to proceed here."
        },
        {
          "text": "support telegram group](https://t",
          "source_url": "https://github.com/Superalgos/Superalgos#L94",
          "evidence": "> :white_check_mark: **EXPERIENCING ISSUES INSTALLING SUPERALGOS?** If you're having trouble installing or running the app for the first time, do not open an issue. Instead, join the [Support Telegram Group](https://t.me/superalgossupport) and follow the instructions on the pinned message to ask for help. You may also join the [new Discord Server](https://discord.gg/CGeKC6WQQb), but bear in mind that the response time tends to be longer. Online support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time."
        },
        {
          "text": "support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time",
          "source_url": "https://github.com/Superalgos/Superalgos#L94",
          "evidence": "> :white_check_mark: **EXPERIENCING ISSUES INSTALLING SUPERALGOS?** If you're having trouble installing or running the app for the first time, do not open an issue. Instead, join the [Support Telegram Group](https://t.me/superalgossupport) and follow the instructions on the pinned message to ask for help. You may also join the [new Discord Server](https://discord.gg/CGeKC6WQQb), but bear in mind that the response time tends to be longer. Online support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time."
        },
        {
          "text": "provide clear information and sufficient context about the issue you are facing, and be mindful of people's time",
          "source_url": "https://github.com/Superalgos/Superalgos#L94",
          "evidence": "> :white_check_mark: **EXPERIENCING ISSUES INSTALLING SUPERALGOS?** If you're having trouble installing or running the app for the first time, do not open an issue. Instead, join the [Support Telegram Group](https://t.me/superalgossupport) and follow the instructions on the pinned message to ask for help. You may also join the [new Discord Server](https://discord.gg/CGeKC6WQQb), but bear in mind that the response time tends to be longer. Online support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time."
        },
        {
          "text": "monitor attached) then you do not need to install a web browser and you can follow the tutorial for information on connecting remotely to the server",
          "source_url": "https://github.com/Superalgos/Superalgos#L118",
          "evidence": "If you are running headless (i.e. as a server without a monitor attached) then you do not need to install a web browser and you can follow the tutorial for information on connecting remotely to the server."
        },
        {
          "text": "create a new token",
          "source_url": "https://github.com/Superalgos/Superalgos#L128",
          "evidence": "If you don't have a Github.com account, please open one! Once you are logged in, go to the [New Github Personal Access Token Page](https://github.com/settings/tokens/new) and create a new token."
        },
        {
          "text": "process and from time to time also when using superalgos",
          "source_url": "https://github.com/Superalgos/Superalgos#L134",
          "evidence": "Once you get the token, copy it and save it somewhere on your local machine. You will need it for later steps of the installation process and from time to time also when using Superalgos."
        },
        {
          "text": "create your fork/copy of this repository",
          "source_url": "https://github.com/Superalgos/Superalgos#L154",
          "evidence": "Scroll this page to the top. Find and click the **Fork** button to create your fork/copy of this repository."
        },
        {
          "text": "build the app from multiple repositories, and also for your contributions to the project",
          "source_url": "https://github.com/Superalgos/Superalgos#L162",
          "evidence": "> :white_check_mark: **NOTE**: A Fork is required so that the setup scripts may build the app from multiple repositories, and also for your contributions to the project. The reason why Superalgos is free and open-source is that the project has set up a collective business in which all users may participate. The way to participate is to [contribute](https://superalgos.org/community-contribute.shtml) to making Superalgos better. The project's [native SA token](https://superalgos.org/token-overview.shtml) is distributed among contributors as rewards for the value each adds to the project."
        },
        {
          "text": "creates the `superalgos` folder in the current directory, which contains the whole installation",
          "source_url": "https://github.com/Superalgos/Superalgos#L188",
          "evidence": "This creates the `Superalgos` folder in the current directory, which contains the whole installation."
        },
        {
          "text": "create desktop shortcuts",
          "source_url": "https://github.com/Superalgos/Superalgos#L212",
          "evidence": "| `shortcuts` | Use this option to create desktop shortcuts. Otherwise, you will launch the app from the command line/terminal. |"
        },
        {
          "text": "include the tensorflow dependencies, only if you intend to test the (partial and incomplete) tensorflow integration",
          "source_url": "https://github.com/Superalgos/Superalgos#L213",
          "evidence": "| `tensorflow` | Use this option to include the TensorFlow dependencies, only if you intend to test the (partial and incomplete) TensorFlow integration. |"
        },
        {
          "text": "run this command from the superalgos main folder:",
          "source_url": "https://github.com/Superalgos/Superalgos#L219",
          "evidence": "Before using the software, you will need to install the plugins built by the community. To do so, just run this command from the Superalgos main folder:"
        },
        {
          "text": "plugins built by the community",
          "source_url": "https://github.com/Superalgos/Superalgos#L219",
          "evidence": "Before using the software, you will need to install the plugins built by the community. To do so, just run this command from the Superalgos main folder:"
        },
        {
          "text": "process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it",
          "source_url": "https://github.com/Superalgos/Superalgos#L233",
          "evidence": "This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good."
        },
        {
          "text": "run this command again and it will fork the new repo and clone it",
          "source_url": "https://github.com/Superalgos/Superalgos#L233",
          "evidence": "This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good."
        },
        {
          "text": "plugins repositories into your own github account, and then it will clone each of these repositories into your local `superalgos/plugins` folder",
          "source_url": "https://github.com/Superalgos/Superalgos#L233",
          "evidence": "This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good."
        },
        {
          "text": "plugin is added, you just need to run this command again and it will fork the new repo and clone it",
          "source_url": "https://github.com/Superalgos/Superalgos#L233",
          "evidence": "This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good."
        },
        {
          "text": "run this script to fix the problems for you",
          "source_url": "https://github.com/Superalgos/Superalgos#L235",
          "evidence": "> :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem."
        },
        {
          "text": "run this script again to fix the problem",
          "source_url": "https://github.com/Superalgos/Superalgos#L235",
          "evidence": "> :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem."
        },
        {
          "text": "plugins repos, you can delete individual folders inside `superalgos/plugins` and run this script to fix the problems for you",
          "source_url": "https://github.com/Superalgos/Superalgos#L235",
          "evidence": "> :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem."
        },
        {
          "text": "plugin forks in your github account, you can delete the offending fork and run this script again to fix the problem",
          "source_url": "https://github.com/Superalgos/Superalgos#L235",
          "evidence": "> :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem."
        },
        {
          "text": "run the app for the first time",
          "source_url": "https://github.com/Superalgos/Superalgos#L237",
          "evidence": "**Congratulations! Your setup is complete. Now you may finally run the app for the first time. Please, follow the usage instructions below!**"
        },
        {
          "text": "run the client and gui",
          "source_url": "https://github.com/Superalgos/Superalgos#L252",
          "evidence": "## Run the Client and GUI"
        },
        {
          "text": "run superalgos, go to the superalgos directory/folder and run this command:",
          "source_url": "https://github.com/Superalgos/Superalgos#L260",
          "evidence": "To run Superalgos, go to the Superalgos directory/folder and run this command:"
        },
        {
          "text": "run with minimal memory footprint",
          "source_url": "https://github.com/Superalgos/Superalgos#L274",
          "evidence": "| `minMemo` | Run with minimal memory footprint. This is critical for running on platforms with 8GB of RAM or less, like a Raspberry Pi. |"
        },
        {
          "text": "run on your terminal and the gui will launch on your default browser",
          "source_url": "https://github.com/Superalgos/Superalgos#L283",
          "evidence": "The Client will run on your terminal and the GUI will launch on your default browser. If Chrome/Safari is not your default browser, copy the URL, close the browser, open Chrome/Safari, and paste the URL. Be patient... it takes a few seconds to fully load the GUI."
        },
        {
          "text": "run the system with minimal ram requirements",
          "source_url": "https://github.com/Superalgos/Superalgos#L289",
          "evidence": "> :white_check_mark: **TIP**: If your computer has 8 GB of RAM or less, use `node platform minMemo` to run the system with minimal RAM requirements."
        },
        {
          "text": "support and the community](https://discord",
          "source_url": "https://github.com/Superalgos/Superalgos#L311",
          "evidence": "We just opened a brand new [Discord server for Support and the Community](https://discord.gg/CGeKC6WQQb)."
        },
        {
          "text": "support questions tend to get faster responses in the [support telegram group](https://t",
          "source_url": "https://github.com/Superalgos/Superalgos#L313",
          "evidence": "That said, support questions tend to get faster responses in the [Support Telegram Group](https://t.me/superalgossupport)."
        },
        {
          "text": "manage git conflicts and issues",
          "source_url": "https://github.com/Superalgos/Superalgos#L371",
          "evidence": "Github Desktop is a helpful tool to manage Git conflicts and issues. You can install it using the following link."
        },
        {
          "text": "run this command in the same directory where the `brewfile` resides:",
          "source_url": "https://github.com/Superalgos/Superalgos#L385",
          "evidence": "The second is to use the `Brewfile` included in the code repository. After downloading, run this command in the same directory where the `Brewfile` resides:"
        },
        {
          "text": "run into a bug in safari, you will be asked to reproduce it in chrome as the development team uses chrome",
          "source_url": "https://github.com/Superalgos/Superalgos#L391",
          "evidence": "> :white_check_mark: **NOTE**: You can use Safari or Google Chrome as your default browser. If you run into a bug in Safari, you will be asked to reproduce it in Chrome as the development team uses Chrome."
        },
        {
          "text": "run the following command to install required dependencies:",
          "source_url": "https://github.com/Superalgos/Superalgos#L402",
          "evidence": "For Debian-based distributions (e.g. Debian, Ubuntu), run the following command to install required dependencies:"
        },
        {
          "text": "run the following command to install required dependencies:",
          "source_url": "https://github.com/Superalgos/Superalgos#L408",
          "evidence": "When using RHEL-oriented distributions (e.g. Fedora, CentOS, Rocky Linux, AlmaLinux), run the following command to install required dependencies:"
        },
        {
          "text": "execute successfully and return a version number",
          "source_url": "https://github.com/Superalgos/Superalgos#L430",
          "evidence": "All three commands should execute successfully and return a version number. If the version number of node is < 16, please proceed with the below instructions for [setting up a newer version of Node.js](#installing-newer-versions-of-nodejs). At the time of writing, particularly **Ubuntu users** will need to do these additional steps as the node version shipped with Ubuntu is outdated."
        },
        {
          "text": "run superalgos on a machine different from a standard pc with x86 chipset, such as on arm-based machines, please ensure to install the additional prerequisites for non-standard chipsets",
          "source_url": "https://github.com/Superalgos/Superalgos#L432",
          "evidence": "If you want to run Superalgos on a machine different from a standard PC with x86 chipset, such as on ARM-based machines, please ensure to install the [additional prerequisites for non-standard chipsets](#additional-prerequisites-for-non-standard-chipsets)."
        },
        {
          "text": "execute one of these commands (depending on the availability of curl or wget on your system):",
          "source_url": "https://github.com/Superalgos/Superalgos#L437",
          "evidence": "Users of Linux distributions shipping outdated versions of Node.js (e.g. Ubuntu) will need to install a newer version of Node.js manually. We recommend using the Node Version Manager (nvm) to do this. For installing nvm, execute one of these commands (depending on the availability of curl or wget on your system):"
        },
        {
          "text": "run the getting started tutorials, but over time (into 2023) this may significantly slow and could even stop",
          "source_url": "https://github.com/Superalgos/Superalgos#L485",
          "evidence": "> :white_check_mark: **NOTE FOR USERS INSTALLING ON COMPUTERS WITH 1GB OF RAM** Superalgos has just about outgrown computers with only 1GB of RAM. For Instance a Raspberry Pi 3 does run the Getting Started Tutorials, but over time (Into 2023) this may significantly slow and could even stop. If still wish to use a computer with only 1GB of RAM (you have been warned), you will need to use version 16.x of Node.js as version 18.x needs well over 1 GB of RAM during setup."
        },
        {
          "text": "enable the desktop shortcut",
          "source_url": "https://github.com/Superalgos/Superalgos#L521",
          "evidence": "Finally, you will need to enable the desktop shortcut. Right-click Superalgos.desktop and select Allow Launching."
        },
        {
          "text": "run notebooks for ml/ai algos and turn vscode and windows into a development bench for working with superalgos",
          "source_url": "https://github.com/Superalgos/Superalgos#L531",
          "evidence": "There are a few things that need to be configured to obtain full functionality from VSCode. These configurations will make it possible to run notebooks for ML/AI algos and turn VSCode and Windows into a development bench for working with Superalgos."
        },
        {
          "text": "allow for dockerizing and rapidly deploying as well as editing and managing test/usage cases of superalgos edit and forks you create and contribute",
          "source_url": "https://github.com/Superalgos/Superalgos#L543",
          "evidence": "To make managing these WSL instances a lot easier, we will now move to installing VSCode + Tools to allow for Dockerizing and rapidly deploying as well as editing and managing test/usage cases of Superalgos edit and forks you create and contribute."
        },
        {
          "text": "create and contribute",
          "source_url": "https://github.com/Superalgos/Superalgos#L543",
          "evidence": "To make managing these WSL instances a lot easier, we will now move to installing VSCode + Tools to allow for Dockerizing and rapidly deploying as well as editing and managing test/usage cases of Superalgos edit and forks you create and contribute."
        },
        {
          "text": "run dockers for working with superalgos, and more",
          "source_url": "https://github.com/Superalgos/Superalgos#L558",
          "evidence": "Once the install finishes you can now use VSCode as an interactive IDE/Shell to access SuperAlgos, run Dockers for working with Superalgos, and more."
        },
        {
          "text": "run it as a daemon so it isn't attached to your current login session",
          "source_url": "https://github.com/Superalgos/Superalgos#L562",
          "evidence": "If you're running Superalgos on a headless Linux server like a Raspberry Pi, you might want to run it as a daemon so it isn't attached to your current login session. The easiest, most standard way to go about this is probably using `systemd`. Most Linux distributions use it as the default init system/service manager."
        },
        {
          "text": "create a `superalgos",
          "source_url": "https://github.com/Superalgos/Superalgos#L564",
          "evidence": "Create a `superalgos.service` file looking like this (change `<user>` to your user name and `/path/to/Superalgos` to your Superalgos folder, for instance `/home/John/Superalgos`):"
        },
        {
          "text": "enable and start the service",
          "source_url": "https://github.com/Superalgos/Superalgos#L580",
          "evidence": "There is no need to run Superalgos as root so we're running it as a user. The `minMemo` option assumes you're running on a small machine like a Raspberry Pi, while `noBrowser` makes sense for running daemonized. Now, you'll need to move the file to `/etc/systemd/system/` for it to be recognized. You'll need then to enable and start the service."
        },
        {
          "text": "run superalgos as root so we're running it as a user",
          "source_url": "https://github.com/Superalgos/Superalgos#L580",
          "evidence": "There is no need to run Superalgos as root so we're running it as a user. The `minMemo` option assumes you're running on a small machine like a Raspberry Pi, while `noBrowser` makes sense for running daemonized. Now, you'll need to move the file to `/etc/systemd/system/` for it to be recognized. You'll need then to enable and start the service."
        },
        {
          "text": "enable superalgos",
          "source_url": "https://github.com/Superalgos/Superalgos#L585",
          "evidence": "sudo systemctl enable superalgos"
        },
        {
          "text": "Running Superalgos on a Headless Linux Server as a Daemon",
          "source_url": "https://github.com/Superalgos/Superalgos#L31",
          "evidence": "- [Running Superalgos on a Headless Linux Server as a Daemon](#small_orange_diamond-running-superalgos-on-a-headless-linux-server-as-a-daemon)"
        },
        {
          "text": "System requirements | Learn about the minimum hardware required to run the platform on different settings.",
          "source_url": "https://github.com/Superalgos/Superalgos#L52",
          "evidence": "* System requirements | Learn about the [minimum hardware](https://superalgos.org/crypto-trading-bots-system-requirements.shtml) required to run the platform on different settings."
        },
        {
          "text": "*Congratulations! Your setup is complete. Now you may finally run the app for the first time. Please, follow the usage instructions below!**",
          "source_url": "https://github.com/Superalgos/Superalgos#L237",
          "evidence": "**Congratulations! Your setup is complete. Now you may finally run the app for the first time. Please, follow the usage instructions below!**"
        },
        {
          "text": "- Install the remote container and remote docker plugins/extensions for Visual Studio Code https://code.visualstudio.com/docs/remote/containers#_installation",
          "source_url": "https://github.com/Superalgos/Superalgos#L547",
          "evidence": "- Install the remote container and remote docker plugins/extensions for Visual Studio Code [https://code.visualstudio.com/docs/remote/containers#_installation](https://code.visualstudio.com/docs/remote/containers#_installation)"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "Drakkar-Software/OctoBot",
      "url": "https://github.com/Drakkar-Software/OctoBot",
      "stars": 4877,
      "language": "Python",
      "features": [
        {
          "text": "build your own bot using the infinite [configuration](https://www",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L31",
          "evidence": "You can build your own bot using the infinite [configuration](https://www.octobot.cloud/en/guides/octobot-configuration/profile-configuration?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=configuration) possibilities such as  **technical analysis**, **social media processing** or even **external statistics management** like google trends."
        },
        {
          "text": "automate your strategies",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L35",
          "evidence": "- Use Technical indicator (TA), artificial intelligence, [ChatGPT predictions](https://www.octobot.cloud/en/blog/trading-using-chat-gpt?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=chatgpt), [TradingView automations](https://www.octobot.cloud/en/guides/octobot-interfaces/tradingview?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=trading-view) or [crypto baskets](https://octobot.cloud/features/crypto-basket?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=crypto-baskets) to automate your strategies."
        },
        {
          "text": "build your ideal cryptocurrency trading robot",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L37",
          "evidence": "- [Install](https://www.octobot.cloud/en/guides/octobot-advanced-usage/tentacle-manager?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=install_tentacles), [modify](https://www.octobot.cloud/en/guides/octobot-tentacles-development/create-a-tentacle?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=modify_tentacles) and even [create](https://www.octobot.cloud/en/guides/octobot-tentacles-development/create-a-tentacle?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=create_tentacles) new tentacles to build your ideal cryptocurrency trading robot."
        },
        {
          "text": "integrate machine-learning libraries such as [tensorflow](https://github",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L40",
          "evidence": "[OctoBot is AI ready](https://www.octobot.cloud/features/ai-trading-bot?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=ai-ready): Python being the main language for OctoBot, it's easy to integrate machine-learning libraries such as [Tensorflow](https://github.com/tensorflow/tensorflow) or any other libraries and take advantage of all the available data and create a very powerful trading strategy."
        },
        {
          "text": "create a very powerful trading strategy",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L40",
          "evidence": "[OctoBot is AI ready](https://www.octobot.cloud/features/ai-trading-bot?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=ai-ready): Python being the main language for OctoBot, it's easy to integrate machine-learning libraries such as [Tensorflow](https://github.com/tensorflow/tensorflow) or any other libraries and take advantage of all the available data and create a very powerful trading strategy."
        },
        {
          "text": "run -itd --name octobot -p 80:5001 -v $(pwd)/user:/octobot/user -v $(pwd)/tentacles:/octobot/tentacles -v $(pwd)/logs:/octobot/logs drakkarsoftware/octobot:stable",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L57",
          "evidence": "docker run -itd --name OctoBot -p 80:5001 -v $(pwd)/user:/octobot/user -v $(pwd)/tentacles:/octobot/tentacles -v $(pwd)/logs:/octobot/logs drakkarsoftware/octobot:stable"
        },
        {
          "text": "supports many [exchanges](https://www",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L64",
          "evidence": "Octobot supports many [exchanges](https://www.octobot.cloud/en/guides/exchanges?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=exchanges) thanks to the [ccxt library](https://github.com/ccxt/ccxt)."
        },
        {
          "text": "configure octobot with your api keys as described [on the exchange setup guides](https://www",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L65",
          "evidence": "To activate trading on an exchange, just configure OctoBot with your API keys as described [on the exchange setup guides](https://www.octobot.cloud/en/guides/octobot-configuration/exchanges?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=exchanges_setup_guides)."
        },
        {
          "text": "enables you to trade with [simulated money](https://www",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L69",
          "evidence": "To trade on any exchange, just activate the exchange in your OctoBot. This enables you to trade with [simulated money](https://www.octobot.cloud/en/guides/octobot-usage/simulator?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=paper-trading) on this exchange."
        },
        {
          "text": "enables you to trade with simulated money using historical exchange data",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L97",
          "evidence": "OctoBot comes with its [built-in backtesting engine](https://www.octobot.cloud/en/guides/octobot-usage/backtesting?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=backtesting) which enables you to trade with simulated money using historical exchange data."
        },
        {
          "text": "allowing us to develop the new features of octobot under the best conditions",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L135",
          "evidence": "<td>Thank you <a href=\"https://www.jetbrains.com\" target=\"_blank\">JetBrains</a> with PyCharm Pro for allowing us to develop the new features of OctoBot under the best conditions.</td>"
        },
        {
          "text": "Create, backtest and optimize your unique trading strategy from scratch or using the existing strategy bases.",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L34",
          "evidence": "- Create, backtest and optimize your unique trading strategy from scratch or using the existing [strategy bases](https://www.octobot.cloud/en/guides/octobot-trading-modes/trading-modes?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=strategy-bases)."
        },
        {
          "text": "Use Technical indicator (TA), artificial intelligence, ChatGPT predictions, TradingView automations or crypto baskets to automate your strategies.",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L35",
          "evidence": "- Use Technical indicator (TA), artificial intelligence, [ChatGPT predictions](https://www.octobot.cloud/en/blog/trading-using-chat-gpt?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=chatgpt), [TradingView automations](https://www.octobot.cloud/en/guides/octobot-interfaces/tradingview?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=trading-view) or [crypto baskets](https://octobot.cloud/features/crypto-basket?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=crypto-baskets) to automate your strategies."
        },
        {
          "text": "Trade any crypto on SPOT and Futures markets on more than 15 supported exchanges.",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L36",
          "evidence": "- Trade any crypto on SPOT and Futures markets on more than [15 supported exchanges](https://www.octobot.cloud/en/guides/exchanges?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=exchanges)."
        },
        {
          "text": "Install, modify and even create new tentacles to build your ideal cryptocurrency trading robot.",
          "source_url": "https://github.com/Drakkar-Software/OctoBot#L37",
          "evidence": "- [Install](https://www.octobot.cloud/en/guides/octobot-advanced-usage/tentacle-manager?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=install_tentacles), [modify](https://www.octobot.cloud/en/guides/octobot-tentacles-development/create-a-tentacle?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=modify_tentacles) and even [create](https://www.octobot.cloud/en/guides/octobot-tentacles-development/create-a-tentacle?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=create_tentacles) new tentacles to build your ideal cryptocurrency trading robot."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "freqtrade/freqtrade-strategies",
      "url": "https://github.com/freqtrade/freqtrade-strategies",
      "stars": 4569,
      "language": "Python",
      "features": [
        {
          "text": "includes these strategies",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L28",
          "evidence": "- [What includes these strategies?](#what-includes-these-strategies)"
        },
        {
          "text": "run your own backtests that mirror your usecase, to evaluate each strategy for yourself",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L52",
          "evidence": "Please keep in mind, results will heavily depend on the pairs, timeframe and timerange used to backtest - so please run your own backtests that mirror your usecase, to evaluate each strategy for yourself."
        },
        {
          "text": "support all major exchanges and be controlled via telegram",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L66",
          "evidence": "It is designed to support all major exchanges and be controlled via Telegram. It contains backtesting, plotting and money management tools as well as strategy optimization by machine learning."
        },
        {
          "text": "includes these strategies",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L68",
          "evidence": "### What includes these strategies?"
        },
        {
          "text": "includes the indicators required to run the strategy",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L76",
          "evidence": "- [x] **Indicators**: Includes the indicators required to run the strategy."
        },
        {
          "text": "run the strategy",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L76",
          "evidence": "- [x] **Indicators**: Includes the indicators required to run the strategy."
        },
        {
          "text": "run the bot with the parameter `--strategy <strategy class name>` (ex: `freqtrade trade --strategy strategy001`)",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L90",
          "evidence": "4. Run the bot with the parameter `--strategy <STRATEGY CLASS NAME>` (ex: `freqtrade trade --strategy Strategy001`)"
        },
        {
          "text": "- What includes these strategies?",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L28",
          "evidence": "- [What includes these strategies?](#what-includes-these-strategies)"
        },
        {
          "text": "- How to create/optimize a strategy?",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L31",
          "evidence": "- [How to create/optimize a strategy?](https://www.freqtrade.io/en/latest/strategy-customization/)"
        },
        {
          "text": "[x] Indicators: Includes the indicators required to run the strategy.",
          "source_url": "https://github.com/freqtrade/freqtrade-strategies#L76",
          "evidence": "- [x] **Indicators**: Includes the indicators required to run the strategy."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "ctubio/Krypto-trading-bot",
      "url": "https://github.com/ctubio/Krypto-trading-bot",
      "stars": 3616,
      "language": "C++",
      "features": [
        {
          "text": "configure or hardcode your own trading strategies in your own machine,<br />",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L13",
          "evidence": "If you don't want to configure or hardcode your own trading strategies in your own machine,<br />"
        },
        {
          "text": "build status](https://github",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L20",
          "evidence": "[![Build Status](https://github.com/ctubio/Krypto-trading-bot/workflows/test/badge.svg)](https://github.com/ctubio/Krypto-trading-bot/actions)"
        },
        {
          "text": "run on unix-like systems",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L27",
          "evidence": "Our bots run on unix-like systems. Persistence is achieved through a built-in server-less SQLite C++ interface.<br>Data transfers are directly done from your machine to the exchange using the latest CURL and OpenSSL versions.<br>Installation in a dedicated [Debian](https://cdimage.debian.org/cdimage/release/current/), [Raspberry](https://www.raspberrypi.com/software/), [Red Hat](https://developers.redhat.com/products/rhel/download), [CentOS](https://www.centos.org/download/) or macOS instance without Docker is recommended."
        },
        {
          "text": "build notes](#build-notes)",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L94",
          "evidence": "- [Build notes](#build-notes)"
        },
        {
          "text": "execute the installer:",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L120",
          "evidence": "2. Download it wherever you want (feel free to customize the suggested folder name K) and execute the installer:"
        },
        {
          "text": "customize the suggested folder name k) and execute the installer:",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L120",
          "evidence": "2. Download it wherever you want (feel free to customize the suggested folder name K) and execute the installer:"
        },
        {
          "text": "execute the installer:",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L140",
          "evidence": "2. Download it wherever you want (feel free to customize the suggested folder name K) and execute the installer:"
        },
        {
          "text": "customize the suggested folder name k) and execute the installer:",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L140",
          "evidence": "2. Download it wherever you want (feel free to customize the suggested folder name K) and execute the installer:"
        },
        {
          "text": "run `make reinstall`",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L153",
          "evidence": "To upgrade anytime to the latest release just run `make reinstall`."
        },
        {
          "text": "execute it to start the bot:",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L161",
          "evidence": "Once your config file is ready, you can execute it to start the bot:"
        },
        {
          "text": "run all at once with `make start screen`])",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L166",
          "evidence": "Alternatively use `make start` to run `K.sh` in the background using [screen](https://kb.iu.edu/d/acuy) (to see the output, attach the screen with `make screen` [or run all at once with `make start screen`])."
        },
        {
          "text": "run `make stop` or `make restart` anytime, and don't forget to [read the fucking manual](https://github",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L168",
          "evidence": "Feel free to run `make stop` or `make restart` anytime, and don't forget to [read the fucking manual](https://github.com/ctubio/Krypto-trading-bot/blob/master/doc/MANUAL.md)."
        },
        {
          "text": "generate your own certificate see [ssl for internal usage](https://www",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L180",
          "evidence": "* Use your own SSL certificate with `--ssl-crt` and `--ssl-key` arguments.<br>Otherwise, the insecure built-in certificate is fully featured, but you may need to authorise it in your browser.<br>If you want to generate your own certificate see [SSL for internal usage](https://www.akadia.com/services/ssh_test_certificate.html).<br>In case you really want to use plain HTTP, use `--without-ssl` argument."
        },
        {
          "text": "run `make reinstall` to download the upgraded source and executable files",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L188",
          "evidence": "Please run `make reinstall` to download the upgraded source and executable files."
        },
        {
          "text": "execute `make upgrade` (or directly `make reinstall` to skip the validation of new commits)",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L194",
          "evidence": "Once you decide that it is time to upgrade, execute `make upgrade` (or directly `make reinstall` to skip the validation of new commits)."
        },
        {
          "text": "build notes](#build-notes))",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L198",
          "evidence": "To not upgrade but instead recompile your own modified source files, use `make lib K` or just `make` (see [Build notes](#build-notes))."
        },
        {
          "text": "run as many instances as `*",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L202",
          "evidence": "Please note, an \"instance\" is in fact a `*.sh` config file; using a single machine with a single installation, you can run as many instances as `*.sh` files you have (limited by the available free RAM)."
        },
        {
          "text": "run multiple instances using a collection of config files:",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L208",
          "evidence": "To run multiple instances using a collection of config files:"
        },
        {
          "text": "create a new config file with `cp etc/k",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L210",
          "evidence": "1. Create a new config file with `cp etc/K.sh.dist X.sh && chmod +x X.sh` (use `X.sh` or any name but keep `.sh` extension)."
        },
        {
          "text": "run the new instance with `",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L214",
          "evidence": "3. Run the new instance with `./X.sh` or to run in the background, use `K=X.sh make start`. To attach to the new instance's screen, use `K=X.sh make screen`. To stop the new instance, use `K=X.sh make stop` and to restart it, use `K=X.sh make restart`. The environment variable `K` specifies the filename of the config file that you want to use."
        },
        {
          "text": "run in the background, use `k=x",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L214",
          "evidence": "3. Run the new instance with `./X.sh` or to run in the background, use `K=X.sh make start`. To attach to the new instance's screen, use `K=X.sh make screen`. To stop the new instance, use `K=X.sh make stop` and to restart it, use `K=X.sh make restart`. The environment variable `K` specifies the filename of the config file that you want to use."
        },
        {
          "text": "create it on boot; otherwise, it will use the existing one",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L240",
          "evidence": "If a database does not exist, the application will create it on boot; otherwise, it will use the existing one."
        },
        {
          "text": "support team, awesome servers)",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L266",
          "evidence": "If you ask me, [<img height=\"20px\" src=\"https://user-images.githubusercontent.com/1634027/29756933-3e64c62e-8ba8-11e7-916a-3b0ae1481a52.png\">](https://www.dreamhost.com/r.cgi?475987/cloud/) is a very nice web hosting company (awesome support team, awesome servers). Feel free to use this referral link to get a discount subtracted from my referral earnings (i'm a user since 2008)."
        },
        {
          "text": "provides all dependencies without errors",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L270",
          "evidence": "Make sure your build machine has [node](https://nodejs.org/en/download/package-manager/) installed, also ensure `make lib` provides all dependencies without errors."
        },
        {
          "text": "build machine has [node](https://nodejs",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L270",
          "evidence": "Make sure your build machine has [node](https://nodejs.org/en/download/package-manager/) installed, also ensure `make lib` provides all dependencies without errors."
        },
        {
          "text": "execute the application in the foreground with `--naked` argument",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L280",
          "evidence": "To pipe the output to stdout, execute the application in the foreground with `--naked` argument."
        },
        {
          "text": "build chain for win32",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L324",
          "evidence": "Added build chain for win32."
        },
        {
          "text": "build chain for osx v10",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L328",
          "evidence": "Added build chain for OSX v10.13."
        },
        {
          "text": "support for multiple instances/config files with nested matryoshka ui",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L364",
          "evidence": "Added support for multiple instances/config files with nested matryoshka UI."
        },
        {
          "text": "support further development by ctubio, just keep running some old commit and do not upgrade (any commit prior to v0",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L406",
          "evidence": "Otherwise if you choose to not support further development by ctubio, just keep running some old commit and do not upgrade (any commit prior to v0.3.0 was completely unlocked)."
        },
        {
          "text": "generates with `--free-version`; it is relative to your trading strategy, the market conditions, and the bot's performance",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L408",
          "evidence": "Please don't open issues asking how much % less the bot generates with `--free-version`; it is relative to your trading strategy, the market conditions, and the bot's performance."
        },
        {
          "text": "create a [new discussion](https://github",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L424",
          "evidence": "Otherwise, here on GitHub, just create a [new discussion](https://github.com/ctubio/Krypto-trading-bot/discussions) permanently readable by everybody."
        },
        {
          "text": "create a [new discussion](https://github",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L443",
          "evidence": "If you need installation or usage support, please create a [new discussion](https://github.com/ctubio/Krypto-trading-bot/discussions/new)."
        },
        {
          "text": "* Use your own SSL certificate with `--ssl-crt` and `--ssl-key` arguments.<br>Otherwise, the insecure built-in certificate is fully featured, but you may need to authorise it in your browser.<br>If you want to generate your own certificate see SSL for internal usage.<br>In case you really want to use plain HTTP, use `--without-ssl` argument.",
          "source_url": "https://github.com/ctubio/Krypto-trading-bot#L180",
          "evidence": "* Use your own SSL certificate with `--ssl-crt` and `--ssl-key` arguments.<br>Otherwise, the insecure built-in certificate is fully featured, but you may need to authorise it in your browser.<br>If you want to generate your own certificate see [SSL for internal usage](https://www.akadia.com/services/ssh_test_certificate.html).<br>In case you really want to use plain HTTP, use `--without-ssl` argument."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "Haehnchen/crypto-trading-bot",
      "url": "https://github.com/Haehnchen/crypto-trading-bot",
      "stars": 3390,
      "language": "JavaScript",
      "features": [
        {
          "text": "Fully use Websocket for exchange communication to react as fast as possible on market",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L12",
          "evidence": "- Fully use Websocket for exchange communication to react as fast as possible on market"
        },
        {
          "text": "Multi pair support in one instance",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L13",
          "evidence": "- Multi pair support in one instance"
        },
        {
          "text": "sqlite3 storage for candles, tickers, ...",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L14",
          "evidence": "- sqlite3 storage for candles, tickers, ..."
        },
        {
          "text": "Webserver UI",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L15",
          "evidence": "- Webserver UI"
        },
        {
          "text": "Support for going \"Short\" and \"Long\"",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L16",
          "evidence": "- Support for going \"Short\" and \"Long\""
        },
        {
          "text": "Signal browser dashboard for pairs",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L17",
          "evidence": "- Signal browser dashboard for pairs"
        },
        {
          "text": "Slack and email notification",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L18",
          "evidence": "- Slack and email notification"
        },
        {
          "text": "Join foreign exchange candles (eg. Trade on Bitmex with the faster moving Binance trades / candles)",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L19",
          "evidence": "- Join foreign exchange candles (eg. Trade on Bitmex with the faster moving Binance trades / candles)"
        },
        {
          "text": "build status](https://github",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L3",
          "evidence": "[![Build Status](https://github.com/Haehnchen/crypto-trading-bot/actions/workflows/node.js.yml/badge.svg)](https://github.com/Haehnchen/crypto-trading-bot/actions/workflows/node.js.yml)"
        },
        {
          "text": "provide basic buy and sell signals they provide many stuff to get profitable eg exchange orders like stop-losses or stop-limits are not supported by main bots",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L6",
          "evidence": "As most trading bots just provide basic buy and sell signals they provide many stuff to get profitable eg exchange orders like stop-losses or stop-limits are not supported by main bots. Also the limitation of fixed timeframe and technical indicators must be broken"
        },
        {
          "text": "support in one instance",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L13",
          "evidence": "- Multi pair support in one instance"
        },
        {
          "text": "support for going \"short\" and \"long\"",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L16",
          "evidence": "- Support for going \"Short\" and \"Long\""
        },
        {
          "text": "supporting all nodejs version",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L64",
          "evidence": "Also the build from source is not supporting all nodejs version. It looks like versions <= 10 are working. You can use nodejs 12 if you compiled it once via older version."
        },
        {
          "text": "build from source is not supporting all nodejs version",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L64",
          "evidence": "Also the build from source is not supporting all nodejs version. It looks like versions <= 10 are working. You can use nodejs 12 if you compiled it once via older version."
        },
        {
          "text": "create instance file for pairs and changes",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L73",
          "evidence": "Create instance file for pairs and changes"
        },
        {
          "text": "provide a configuration with your exchange credentials",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L79",
          "evidence": "Provide a configuration with your exchange credentials"
        },
        {
          "text": "create a new sqlite database use bot",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L85",
          "evidence": "Create a new sqlite database use bot.sql scheme to create the tables"
        },
        {
          "text": "create the tables",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L85",
          "evidence": "Create a new sqlite database use bot.sql scheme to create the tables"
        },
        {
          "text": "create a bot for telegram",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L111",
          "evidence": "First, you'll need to create a bot for Telegram. Just talk to [BotFather](https://telegram.me/botfather) and follow simple steps until it gives you a token for it."
        },
        {
          "text": "create a telegram group, the place where you and crypto-trading-bot will communicate",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L112",
          "evidence": "You'll also need to create a Telegram group, the place where you and crypto-trading-bot will communicate. After creating it, add the bot as administrator (make sure to uncheck \"All Members Are Admins\")."
        },
        {
          "text": "provides just basic auth for access you should combine some with eh a https for public server",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L153",
          "evidence": "As the webserver provides just basic auth for access you should combine some with eh a https for public server. Here s simple `proxy_pass` for nginx."
        },
        {
          "text": "include /etc/letsencrypt/options-ssl-nginx",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L167",
          "evidence": "include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot"
        },
        {
          "text": "build in strategies",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L201",
          "evidence": "## Build In Strategies"
        },
        {
          "text": "provide general stoploss order in percent of entry price (exchange order)",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L229",
          "evidence": "- `stoploss` provide general stoploss order in percent of entry price (Exchange Order)"
        },
        {
          "text": "creates risk reward order for take profit and stoploss (exchange order limit+stop)",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L230",
          "evidence": "- `risk_reward_ratio` Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)"
        },
        {
          "text": "support stop_loss order liek binance",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L231",
          "evidence": "- `stoploss_watch` Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance"
        },
        {
          "text": "allow the bot to trade you need to give some \"playing capital\"",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L286",
          "evidence": "To allow the bot to trade you need to give some \"playing capital\". You can allow to by via asset or currency amount, see examples below."
        },
        {
          "text": "allow to by via asset or currency amount, see examples below",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L286",
          "evidence": "To allow the bot to trade you need to give some \"playing capital\". You can allow to by via asset or currency amount, see examples below."
        },
        {
          "text": "provide one of them, first wins",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L287",
          "evidence": "You should only provide one of them, first wins."
        },
        {
          "text": "process after the application started",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L321",
          "evidence": "Inside logs, visible via browser ui, you can double check the strategies init process after the application started."
        },
        {
          "text": "run \"dip_catcher\" now every 15",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L326",
          "evidence": "[info] \"binance_futures\" - \"BTCUSDT\" - \"trade\" first strategy run \"dip_catcher\" now every 15.00 minutes"
        },
        {
          "text": "Multi pair support in one instance",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L13",
          "evidence": "- Multi pair support in one instance"
        },
        {
          "text": "Support for going \"Short\" and \"Long\"",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L16",
          "evidence": "- Support for going \"Short\" and \"Long\""
        },
        {
          "text": "Order & Pair Management: http://127.0.0.1:8080/pairs",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L149",
          "evidence": "- Order & Pair Management: http://127.0.0.1:8080/pairs"
        },
        {
          "text": "`stoploss` provide general stoploss order in percent of entry price (Exchange Order)",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L229",
          "evidence": "- `stoploss` provide general stoploss order in percent of entry price (Exchange Order)"
        },
        {
          "text": "`risk_reward_ratio` Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L230",
          "evidence": "- `risk_reward_ratio` Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)"
        },
        {
          "text": "`stoploss_watch` Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L231",
          "evidence": "- `stoploss_watch` Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance"
        },
        {
          "text": "`trailing_stop` Use native exchange trailing stop; if supported by exchange eg `Bitfinex`",
          "source_url": "https://github.com/Haehnchen/crypto-trading-bot#L232",
          "evidence": "- `trailing_stop` Use native exchange trailing stop; if supported by exchange eg `Bitfinex`"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "thrasher-corp/gocryptotrader",
      "url": "https://github.com/thrasher-corp/gocryptotrader",
      "stars": 3323,
      "language": "Go",
      "features": [
        {
          "text": "Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L53",
          "evidence": "+ Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off."
        },
        {
          "text": "AES256 encrypted config file.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L54",
          "evidence": "+ AES256 encrypted config file."
        },
        {
          "text": "REST API support for all exchanges.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L55",
          "evidence": "+ REST API support for all exchanges."
        },
        {
          "text": "Websocket support for applicable exchanges.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L56",
          "evidence": "+ Websocket support for applicable exchanges."
        },
        {
          "text": "Ability to turn off/on certain exchanges.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L57",
          "evidence": "+ Ability to turn off/on certain exchanges."
        },
        {
          "text": "Communication packages (Slack, SMS via SMSGlobal, Telegram and SMTP).",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L58",
          "evidence": "+ Communication packages (Slack, SMS via SMSGlobal, Telegram and SMTP)."
        },
        {
          "text": "HTTP rate limiter package.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L59",
          "evidence": "+ HTTP rate limiter package."
        },
        {
          "text": "Unified API for exchange usage.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L60",
          "evidence": "+ Unified API for exchange usage."
        },
        {
          "text": "Customisation of HTTP client features including setting a proxy, user agent and adjusting transport settings.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L61",
          "evidence": "+ Customisation of HTTP client features including setting a proxy, user agent and adjusting transport settings."
        },
        {
          "text": "NTP client package.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L62",
          "evidence": "+ NTP client package."
        },
        {
          "text": "Database support (Postgres and SQLite3). See database.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L63",
          "evidence": "+ Database support (Postgres and SQLite3). See [database](/database/README.md)."
        },
        {
          "text": "OTP generation tool. See gen otp.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L64",
          "evidence": "+ OTP generation tool. See [gen otp](/cmd/gen_otp)."
        },
        {
          "text": "Connection monitor package.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L65",
          "evidence": "+ Connection monitor package."
        },
        {
          "text": "gRPC service and JSON RPC proxy. See gRPC service.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L66",
          "evidence": "+ gRPC service and JSON RPC proxy. See [gRPC service](/gctrpc/README.md)."
        },
        {
          "text": "gRPC client. See gctcli.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L67",
          "evidence": "+ gRPC client. See [gctcli](/cmd/gctcli/README.md)."
        },
        {
          "text": "Forex currency converter packages (CurrencyConverterAPI, CurrencyLayer, Exchange Rates, Fixer.io, OpenExchangeRates, Exchange Rate Host).",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L68",
          "evidence": "+ Forex currency converter packages (CurrencyConverterAPI, CurrencyLayer, Exchange Rates, Fixer.io, OpenExchangeRates, Exchange Rate Host)."
        },
        {
          "text": "Packages for handling currency pairs, tickers and orderbooks.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L69",
          "evidence": "+ Packages for handling currency pairs, tickers and orderbooks."
        },
        {
          "text": "Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L70",
          "evidence": "+ Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking."
        },
        {
          "text": "Basic event trigger system.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L71",
          "evidence": "+ Basic event trigger system."
        },
        {
          "text": "OHLCV/Candle retrieval support. See OHLCV.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L72",
          "evidence": "+ OHLCV/Candle retrieval support. See [OHLCV](/docs/OHLCV.md)."
        },
        {
          "text": "Scripting support. See gctscript.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L73",
          "evidence": "+ Scripting support. See [gctscript](/gctscript/README.md)."
        },
        {
          "text": "Recent and historic trade processing. See trades.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L74",
          "evidence": "+ Recent and historic trade processing. See [trades](/exchanges/trade/README.md)."
        },
        {
          "text": "Backtesting application. An event-driven backtesting tool to test and iterate trading strategies using historical or custom data. See backtester.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L75",
          "evidence": "+ Backtesting application. An event-driven backtesting tool to test and iterate trading strategies using historical or custom data. See [backtester](/backtester/README.md)."
        },
        {
          "text": "Exchange HTTP mock testing. See mock.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L76",
          "evidence": "+ Exchange HTTP mock testing. See [mock](/exchanges/mock/README.md)."
        },
        {
          "text": "Exchange multichain deposits and withdrawals for specific exchanges. See multichain transfer support.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L77",
          "evidence": "+ Exchange multichain deposits and withdrawals for specific exchanges. See [multichain transfer support](/docs/MULTICHAIN_TRANSFER_SUPPORT.md)."
        },
        {
          "text": "build status](https://github",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L3",
          "evidence": "[![Build Status](https://github.com/thrasher-corp/gocryptotrader/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/thrasher-corp/gocryptotrader/actions/workflows/tests.yml)"
        },
        {
          "text": "supporting multiple exchanges written in golang",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L9",
          "evidence": "A cryptocurrency trading bot supporting multiple exchanges written in Golang."
        },
        {
          "text": "support the top 30 exchanges sorted by average liquidity as [ranked by coinmarketcap](https://coinmarketcap",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L46",
          "evidence": "We are aiming to support the top 30 exchanges sorted by average liquidity as [ranked by CoinMarketCap](https://coinmarketcap.com/rankings/exchanges/)."
        },
        {
          "text": "support the feature",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L49",
          "evidence": "** NA means not applicable as the exchange does not support the feature."
        },
        {
          "text": "support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L53",
          "evidence": "+ Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off."
        },
        {
          "text": "support for all exchanges",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L55",
          "evidence": "+ REST API support for all exchanges."
        },
        {
          "text": "support for applicable exchanges",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L56",
          "evidence": "+ Websocket support for applicable exchanges."
        },
        {
          "text": "support (postgres and sqlite3)",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L63",
          "evidence": "+ Database support (Postgres and SQLite3). See [database](/database/README.md)."
        },
        {
          "text": "allows for custom address tracking",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L70",
          "evidence": "+ Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking."
        },
        {
          "text": "provides updates on:",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L81",
          "evidence": "Our [Kanban board](https://github.com/orgs/thrasher-corp/projects/3) provides updates on:"
        },
        {
          "text": "run the `gocryptotrader` binary file",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L121",
          "evidence": "+ Run the `gocryptotrader` binary file."
        },
        {
          "text": "enable sonic, build with the sonic_on tag:",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L128",
          "evidence": "To enable sonic, build with the sonic_on tag:"
        },
        {
          "text": "build with the sonic_on tag:",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L128",
          "evidence": "To enable sonic, build with the sonic_on tag:"
        },
        {
          "text": "build -tags=sonic_on",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L131",
          "evidence": "go build -tags=sonic_on"
        },
        {
          "text": "support the developers working on it, please donate bitcoin to:",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L138",
          "evidence": "If this framework helped you in any way, or you would like to support the developers working on it, please donate Bitcoin to:"
        },
        {
          "text": "* NA means not applicable as the exchange does not support the feature.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L49",
          "evidence": "** NA means not applicable as the exchange does not support the feature."
        },
        {
          "text": "Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L53",
          "evidence": "+ Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off."
        },
        {
          "text": "REST API support for all exchanges.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L55",
          "evidence": "+ REST API support for all exchanges."
        },
        {
          "text": "Websocket support for applicable exchanges.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L56",
          "evidence": "+ Websocket support for applicable exchanges."
        },
        {
          "text": "Database support (Postgres and SQLite3). See database.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L63",
          "evidence": "+ Database support (Postgres and SQLite3). See [database](/database/README.md)."
        },
        {
          "text": "Connection monitor package.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L65",
          "evidence": "+ Connection monitor package."
        },
        {
          "text": "Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L70",
          "evidence": "+ Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking."
        },
        {
          "text": "OHLCV/Candle retrieval support. See OHLCV.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L72",
          "evidence": "+ OHLCV/Candle retrieval support. See [OHLCV](/docs/OHLCV.md)."
        },
        {
          "text": "Scripting support. See gctscript.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L73",
          "evidence": "+ Scripting support. See [gctscript](/gctscript/README.md)."
        },
        {
          "text": "Recent and historic trade processing. See trades.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L74",
          "evidence": "+ Recent and historic trade processing. See [trades](/exchanges/trade/README.md)."
        },
        {
          "text": "Exchange multichain deposits and withdrawals for specific exchanges. See multichain transfer support.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L77",
          "evidence": "+ Exchange multichain deposits and withdrawals for specific exchanges. See [multichain transfer support](/docs/MULTICHAIN_TRANSFER_SUPPORT.md)."
        },
        {
          "text": "Run the `gocryptotrader` binary file.",
          "source_url": "https://github.com/thrasher-corp/gocryptotrader#L121",
          "evidence": "+ Run the `gocryptotrader` binary file."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "yasinkuyu/binance-trader",
      "url": "https://github.com/yasinkuyu/binance-trader",
      "stars": 2653,
      "language": "Python",
      "features": [
        {
          "text": "enable two-factor authentication",
          "source_url": "https://github.com/yasinkuyu/binance-trader#L10",
          "evidence": "2. Enable Two-factor Authentication"
        },
        {
          "text": "create new](https://www",
          "source_url": "https://github.com/yasinkuyu/binance-trader#L11",
          "evidence": "3. Go API Center, [Create New](https://www.binance.com/en/my/settings/api-management?ref=10701111) Api Key"
        },
        {
          "text": "enable trading [x] enable withdrawals",
          "source_url": "https://github.com/yasinkuyu/binance-trader#L13",
          "evidence": "[\u2713] Read Info [\u2713] Enable Trading [X] Enable Withdrawals"
        },
        {
          "text": "run as an excutable application in docker containers",
          "source_url": "https://github.com/yasinkuyu/binance-trader#L27",
          "evidence": "7. Optional: run as an excutable application in Docker containers"
        },
        {
          "text": "import threading",
          "source_url": "https://github.com/yasinkuyu/binance-trader#L43",
          "evidence": "import threading"
        },
        {
          "text": "run in a docker container",
          "source_url": "https://github.com/yasinkuyu/binance-trader#L102",
          "evidence": "## Run in a Docker container"
        },
        {
          "text": "create a new pull request",
          "source_url": "https://github.com/yasinkuyu/binance-trader#L120",
          "evidence": "Create a new Pull Request"
        },
        {
          "text": "- Stop-Loss implementation",
          "source_url": "https://github.com/yasinkuyu/binance-trader#L144",
          "evidence": "- Stop-Loss implementation"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "blankly-finance/blankly",
      "url": "https://github.com/blankly-finance/blankly",
      "stars": 2382,
      "language": "Python",
      "features": [
        {
          "text": "build and deploy quantitative models for stocks, crypto, and forex  \ud83d\ude80</b>",
          "source_url": "https://github.com/blankly-finance/blankly#L11",
          "evidence": "<b>\ud83d\udca8  Rapidly build and deploy quantitative models for stocks, crypto, and forex  \ud83d\ude80</b>"
        },
        {
          "text": "run live by simply changing a single line",
          "source_url": "https://github.com/blankly-finance/blankly#L39",
          "evidence": "Blankly is an ecosystem for algotraders enabling anyone to build, monetize and scale their trading algorithms for stocks, crypto, futures or forex. The same code can be backtested, paper traded, sandbox tested and run live by simply changing a single line. Develop locally then deploy, iterate and share using the blankly platform."
        },
        {
          "text": "import alpaca, coinbasepro",
          "source_url": "https://github.com/blankly-finance/blankly#L56",
          "evidence": "from blankly import Alpaca, CoinbasePro"
        },
        {
          "text": "perform the same actions across exchanges & asset types",
          "source_url": "https://github.com/blankly-finance/blankly#L62",
          "evidence": "# Easily perform the same actions across exchanges & asset types"
        },
        {
          "text": "run your model live",
          "source_url": "https://github.com/blankly-finance/blankly#L115",
          "evidence": "Seamlessly run your model live!"
        },
        {
          "text": "create the files `keys",
          "source_url": "https://github.com/blankly-finance/blankly#L142",
          "evidence": "The command will create the files `keys.json`, `settings.json`, `backtest.json`, `blankly.json` and an example script called `bot.py`."
        },
        {
          "text": "implement strategies such as rsi, macd, and the golden cross found in our [examples](https://docs",
          "source_url": "https://github.com/blankly-finance/blankly#L199",
          "evidence": "We have a pre-built cookbook examples that implement strategies such as RSI, MACD, and the Golden Cross found in our [examples](https://docs.blankly.finance/examples/golden-cross)."
        },
        {
          "text": "support the project, pull requests are welcome",
          "source_url": "https://github.com/blankly-finance/blankly#L217",
          "evidence": "If you would like to support the project, pull requests are welcome."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "whittlem/pycryptobot",
      "url": "https://github.com/whittlem/pycryptobot",
      "stars": 2049,
      "language": "Python",
      "features": [
        {
          "text": "run your bots for you",
          "source_url": "https://github.com/whittlem/pycryptobot#L12",
          "evidence": "2. Don't let anyone run your bots for you."
        },
        {
          "text": "support in the discussions",
          "source_url": "https://github.com/whittlem/pycryptobot#L17",
          "evidence": "## Ask your questions and get support in the discussions"
        },
        {
          "text": "supporting the project",
          "source_url": "https://github.com/whittlem/pycryptobot#L21",
          "evidence": "## Supporting The Project"
        },
        {
          "text": "support my efforts is to follow me on medium and chap my articles",
          "source_url": "https://github.com/whittlem/pycryptobot#L23",
          "evidence": "I get paid to write on Medium. Readers following me, applauding and commenting on my articles, all helps with my earnings. I provided this bot to all of you for free and actively develop it. One way you can support my efforts is to follow me on Medium and chap my articles. The Medium subscription is $5 a month (roughly \u00a33) so basically nothing in terms of the value you are getting from the bot. Your efforts there would be greatly appreciated!"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "Open-Trader/opentrader",
      "url": "https://github.com/Open-Trader/opentrader",
      "stars": 1994,
      "language": "TypeScript",
      "features": [
        {
          "text": "support for 100+ exchanges via ccxt",
          "source_url": "https://github.com/Open-Trader/opentrader#L15",
          "evidence": "[OpenTrader](https://github.com/bludnic/opentrader) is a self-hosted cryptocurrency trading bot, featuring built-in and highly customizable strategies, integration with technical indicators, high-frequency trading, and cross-exchange trading with support for 100+ exchanges via CCXT."
        },
        {
          "text": "build your own strategy in just a few lines of code",
          "source_url": "https://github.com/Open-Trader/opentrader#L30",
          "evidence": "- \ud83d\udee0\ufe0f [CUSTOM](https://github.com/Open-Trader/custom-strategy): Build your own strategy in just a few lines of code."
        },
        {
          "text": "support means a lot and motivates me to keep improving the bot",
          "source_url": "https://github.com/Open-Trader/opentrader#L34",
          "evidence": "This project is a personal passion, developed in my free time. If you find it useful, please give it a \u2b50\ufe0f. Your support means a lot and motivates me to keep improving the bot. If you'd like to make a [donation](#Donate), see the options below. \ud83d\udc96"
        },
        {
          "text": "support its development, consider making a donation",
          "source_url": "https://github.com/Open-Trader/opentrader#L38",
          "evidence": "If you find OpenTrader useful and would like to support its development, consider making a donation. Your contributions will help cover the costs of maintaining and improving this project."
        },
        {
          "text": "run your crypto trading bot",
          "source_url": "https://github.com/Open-Trader/opentrader#L62",
          "evidence": "Get started with OpenTrader in just a few steps. Follow this quick guide to install, configure, and run your crypto trading bot."
        },
        {
          "text": "run `opentrader down`",
          "source_url": "https://github.com/Open-Trader/opentrader#L89",
          "evidence": "> **Tip**: Use `opentrader up -d` to start the app as a daemon. To stop it, run `opentrader down`."
        },
        {
          "text": "allows managing multiple bots and strategies, viewing backtest results, and monitoring live trading",
          "source_url": "https://github.com/Open-Trader/opentrader#L95",
          "evidence": "The user interface allows managing multiple bots and strategies, viewing backtest results, and monitoring live trading."
        },
        {
          "text": "monitoring live trading",
          "source_url": "https://github.com/Open-Trader/opentrader#L95",
          "evidence": "The user interface allows managing multiple bots and strategies, viewing backtest results, and monitoring live trading."
        },
        {
          "text": "create the strategy configuration file `config",
          "source_url": "https://github.com/Open-Trader/opentrader#L111",
          "evidence": "Create the strategy configuration file `config.json5`. We will use the `grid` strategy as an example."
        },
        {
          "text": "run `opentrader stop`",
          "source_url": "https://github.com/Open-Trader/opentrader#L151",
          "evidence": "> To stop the live trading, run `opentrader stop`"
        },
        {
          "text": "\ud83d\udee0\ufe0f CUSTOM: Build your own strategy in just a few lines of code.",
          "source_url": "https://github.com/Open-Trader/opentrader#L30",
          "evidence": "- \ud83d\udee0\ufe0f [CUSTOM](https://github.com/Open-Trader/custom-strategy): Build your own strategy in just a few lines of code."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "CyberPunkMetalHead/Binance-News-Sentiment-Bot",
      "url": "https://github.com/CyberPunkMetalHead/Binance-News-Sentiment-Bot",
      "stars": 1639,
      "language": "Python",
      "features": [
        {
          "text": "provide an overview on the most mentioned coin across all the headlines",
          "source_url": "https://github.com/CyberPunkMetalHead/Binance-News-Sentiment-Bot#L6",
          "evidence": "Provide an overview on the most mentioned coin across all the headlines"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "rodrigo-brito/ninjabot",
      "url": "https://github.com/rodrigo-brito/ninjabot",
      "stars": 1575,
      "language": "Go",
      "features": [
        {
          "text": "[x] Backtesting",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L101",
          "evidence": "- [x] Backtesting"
        },
        {
          "text": "- [x] Paper Wallet (Live Trading with fake wallet)",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L102",
          "evidence": "- [x] Paper Wallet (Live Trading with fake wallet)"
        },
        {
          "text": "- [x] Load Feed from CSV",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L103",
          "evidence": "- [x] Load Feed from CSV"
        },
        {
          "text": "- [x] Order Limit, Market, Stop Limit, OCO",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L104",
          "evidence": "- [x] Order Limit, Market, Stop Limit, OCO"
        },
        {
          "text": "[x] Bot Utilities",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L106",
          "evidence": "- [x] Bot Utilities"
        },
        {
          "text": "- [x] CLI to download historical data",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L107",
          "evidence": "- [x] CLI to download historical data"
        },
        {
          "text": "- [x] Plot (Candles + Sell / Buy orders, Indicators)",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L108",
          "evidence": "- [x] Plot (Candles + Sell / Buy orders, Indicators)"
        },
        {
          "text": "- [x] Telegram Controller (Status, Buy, Sell, and Notification)",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L109",
          "evidence": "- [x] Telegram Controller (Status, Buy, Sell, and Notification)"
        },
        {
          "text": "- [x] Heikin Ashi candle type support",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L110",
          "evidence": "- [x] Heikin Ashi candle type support"
        },
        {
          "text": "- [x] Trailing stop tool",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L111",
          "evidence": "- [x] Trailing stop tool"
        },
        {
          "text": "- [x] In app order scheduler",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L112",
          "evidence": "- [x] In app order scheduler"
        },
        {
          "text": "create and test custom strategies for spot and futures market",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L9",
          "evidence": "A fast cryptocurrency trading bot framework implemented in Go. Ninjabot permits users to create and test custom strategies for spot and futures market."
        },
        {
          "text": "build binaries in [release page](https://github",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L33",
          "evidence": "- Pre-build binaries in [release page](https://github.com/rodrigo-brito/ninjabot/releases)"
        },
        {
          "text": "run examples/backtesting/main",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L46",
          "evidence": "go run examples/backtesting/main.go"
        },
        {
          "text": "include web ui controller",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L115",
          "evidence": "- [ ] Include Web UI Controller"
        },
        {
          "text": "include more chart indicators - [details](https://github",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L116",
          "evidence": "- [ ] Include more chart indicators - [Details](https://github.com/rodrigo-brito/ninjabot/issues/110)"
        },
        {
          "text": "support [binance](https://www",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L120",
          "evidence": "Currently, we only support [Binance](https://www.binance.com/en?ref=35723227) exchange. If you want to include support for other exchanges, you need to implement a new `struct` that implements the interface `Exchange`. You can check some examples in [exchange](exchange) directory."
        },
        {
          "text": "support for other exchanges, you need to implement a new `struct` that implements the interface `exchange`",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L120",
          "evidence": "Currently, we only support [Binance](https://www.binance.com/en?ref=35723227) exchange. If you want to include support for other exchanges, you need to implement a new `struct` that implements the interface `Exchange`. You can check some examples in [exchange](exchange) directory."
        },
        {
          "text": "include support for other exchanges, you need to implement a new `struct` that implements the interface `exchange`",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L120",
          "evidence": "Currently, we only support [Binance](https://www.binance.com/en?ref=35723227) exchange. If you want to include support for other exchanges, you need to implement a new `struct` that implements the interface `Exchange`. You can check some examples in [exchange](exchange) directory."
        },
        {
          "text": "implement a new `struct` that implements the interface `exchange`",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L120",
          "evidence": "Currently, we only support [Binance](https://www.binance.com/en?ref=35723227) exchange. If you want to include support for other exchanges, you need to implement a new `struct` that implements the interface `Exchange`. You can check some examples in [exchange](exchange) directory."
        },
        {
          "text": "support the project",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L122",
          "evidence": "### Support the project"
        },
        {
          "text": "Pre-build binaries in release page",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L33",
          "evidence": "- Pre-build binaries in [release page](https://github.com/rodrigo-brito/ninjabot/releases)"
        },
        {
          "text": "- [x] Heikin Ashi candle type support",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L110",
          "evidence": "- [x] Heikin Ashi candle type support"
        },
        {
          "text": "- [ ] Include Web UI Controller",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L115",
          "evidence": "- [ ] Include Web UI Controller"
        },
        {
          "text": "- [ ] Include more chart indicators - Details",
          "source_url": "https://github.com/rodrigo-brito/ninjabot#L116",
          "evidence": "- [ ] Include more chart indicators - [Details](https://github.com/rodrigo-brito/ninjabot/issues/110)"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "c9s/bbgo",
      "url": "https://github.com/c9s/bbgo",
      "stars": 1555,
      "language": "Go",
      "features": [
        {
          "text": "Exchange abstraction interface.",
          "source_url": "https://github.com/c9s/bbgo#L41",
          "evidence": "- Exchange abstraction interface."
        },
        {
          "text": "Stream integration (user data web socket, market data web socket).",
          "source_url": "https://github.com/c9s/bbgo#L42",
          "evidence": "- Stream integration (user data web socket, market data web socket)."
        },
        {
          "text": "Real-time orderBook integration through a web socket.",
          "source_url": "https://github.com/c9s/bbgo#L43",
          "evidence": "- Real-time orderBook integration through a web socket."
        },
        {
          "text": "TWAP order execution support. See TWAP Order Execution",
          "source_url": "https://github.com/c9s/bbgo#L44",
          "evidence": "- TWAP order execution support. See [TWAP Order Execution](./doc/topics/twap.md)"
        },
        {
          "text": "PnL calculation.",
          "source_url": "https://github.com/c9s/bbgo#L45",
          "evidence": "- PnL calculation."
        },
        {
          "text": "Slack/Telegram notification.",
          "source_url": "https://github.com/c9s/bbgo#L46",
          "evidence": "- Slack/Telegram notification."
        },
        {
          "text": "Back-testing: KLine-based back-testing engine. See Back-testing",
          "source_url": "https://github.com/c9s/bbgo#L47",
          "evidence": "- Back-testing: KLine-based back-testing engine. See [Back-testing](./doc/topics/back-testing.md)"
        },
        {
          "text": "Built-in parameter optimization tool.",
          "source_url": "https://github.com/c9s/bbgo#L48",
          "evidence": "- Built-in parameter optimization tool."
        },
        {
          "text": "Built-in Grid strategy and many other built-in strategies.",
          "source_url": "https://github.com/c9s/bbgo#L49",
          "evidence": "- Built-in Grid strategy and many other built-in strategies."
        },
        {
          "text": "Multi-exchange session support: you can connect to more than 2 exchanges with different accounts or subaccounts.",
          "source_url": "https://github.com/c9s/bbgo#L50",
          "evidence": "- Multi-exchange session support: you can connect to more than 2 exchanges with different accounts or subaccounts."
        },
        {
          "text": "Indicators with interface similar",
          "source_url": "https://github.com/c9s/bbgo#L51",
          "evidence": "- Indicators with interface similar"
        },
        {
          "text": "- Accumulation/Distribution Indicator",
          "source_url": "https://github.com/c9s/bbgo#L53",
          "evidence": "- [Accumulation/Distribution Indicator](./pkg/indicator/ad.go)"
        },
        {
          "text": "- Arnaud Legoux Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L54",
          "evidence": "- [Arnaud Legoux Moving Average](./pkg/indicator/alma.go)"
        },
        {
          "text": "- Average True Range",
          "source_url": "https://github.com/c9s/bbgo#L55",
          "evidence": "- [Average True Range](./pkg/indicator/atr.go)"
        },
        {
          "text": "- Bollinger Bands",
          "source_url": "https://github.com/c9s/bbgo#L56",
          "evidence": "- [Bollinger Bands](./pkg/indicator/boll.go)"
        },
        {
          "text": "- Commodity Channel Index",
          "source_url": "https://github.com/c9s/bbgo#L57",
          "evidence": "- [Commodity Channel Index](./pkg/indicator/cci.go)"
        },
        {
          "text": "- Cumulative Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L58",
          "evidence": "- [Cumulative Moving Average](./pkg/indicator/cma.go)"
        },
        {
          "text": "- Double Exponential Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L59",
          "evidence": "- [Double Exponential Moving Average](./pkg/indicator/dema.go)"
        },
        {
          "text": "- Directional Movement Index",
          "source_url": "https://github.com/c9s/bbgo#L60",
          "evidence": "- [Directional Movement Index](./pkg/indicator/dmi.go)"
        },
        {
          "text": "- Brownian Motion's Drift Factor",
          "source_url": "https://github.com/c9s/bbgo#L61",
          "evidence": "- [Brownian Motion's Drift Factor](./pkg/indicator/drift.go)"
        },
        {
          "text": "- Ease of Movement",
          "source_url": "https://github.com/c9s/bbgo#L62",
          "evidence": "- [Ease of Movement](./pkg/indicator/emv.go)"
        },
        {
          "text": "- Exponentially Weighted Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L63",
          "evidence": "- [Exponentially Weighted Moving Average](./pkg/indicator/ewma.go)"
        },
        {
          "text": "- Hull Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L64",
          "evidence": "- [Hull Moving Average](./pkg/indicator/hull.go)"
        },
        {
          "text": "- Trend Line (Tool)",
          "source_url": "https://github.com/c9s/bbgo#L65",
          "evidence": "- [Trend Line (Tool)](./pkg/indicator/line.go)"
        },
        {
          "text": "- Moving Average Convergence Divergence Indicator",
          "source_url": "https://github.com/c9s/bbgo#L66",
          "evidence": "- [Moving Average Convergence Divergence Indicator](./pkg/indicator/macd.go)"
        },
        {
          "text": "- On-Balance Volume",
          "source_url": "https://github.com/c9s/bbgo#L67",
          "evidence": "- [On-Balance Volume](./pkg/indicator/obv.go)"
        },
        {
          "text": "- Running Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L69",
          "evidence": "- [Running Moving Average](./pkg/indicator/rma.go)"
        },
        {
          "text": "- Relative Strength Index",
          "source_url": "https://github.com/c9s/bbgo#L70",
          "evidence": "- [Relative Strength Index](./pkg/indicator/rsi.go)"
        },
        {
          "text": "- Simple Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L71",
          "evidence": "- [Simple Moving Average](./pkg/indicator/sma.go)"
        },
        {
          "text": "- Ehler's Super Smoother Filter",
          "source_url": "https://github.com/c9s/bbgo#L72",
          "evidence": "- [Ehler's Super Smoother Filter](./pkg/indicator/ssf.go)"
        },
        {
          "text": "- Stochastic Oscillator",
          "source_url": "https://github.com/c9s/bbgo#L73",
          "evidence": "- [Stochastic Oscillator](./pkg/indicator/stoch.go)"
        },
        {
          "text": "- SuperTrend",
          "source_url": "https://github.com/c9s/bbgo#L74",
          "evidence": "- [SuperTrend](./pkg/indicator/supertrend.go)"
        },
        {
          "text": "- Triple Exponential Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L75",
          "evidence": "- [Triple Exponential Moving Average](./pkg/indicator/tema.go)"
        },
        {
          "text": "- Tillson T3 Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L76",
          "evidence": "- [Tillson T3 Moving Average](./pkg/indicator/till.go)"
        },
        {
          "text": "- Triangular Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L77",
          "evidence": "- [Triangular Moving Average](./pkg/indicator/tma.go)"
        },
        {
          "text": "- Variable Index Dynamic Average",
          "source_url": "https://github.com/c9s/bbgo#L78",
          "evidence": "- [Variable Index Dynamic Average](./pkg/indicator/vidya.go)"
        },
        {
          "text": "- Volatility Indicator",
          "source_url": "https://github.com/c9s/bbgo#L79",
          "evidence": "- [Volatility Indicator](./pkg/indicator/volatility.go)"
        },
        {
          "text": "- Volume Weighted Average Price",
          "source_url": "https://github.com/c9s/bbgo#L80",
          "evidence": "- [Volume Weighted Average Price](./pkg/indicator/vwap.go)"
        },
        {
          "text": "- Zero Lag Exponential Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L81",
          "evidence": "- [Zero Lag Exponential Moving Average](./pkg/indicator/zlema.go)"
        },
        {
          "text": "- And more...",
          "source_url": "https://github.com/c9s/bbgo#L82",
          "evidence": "- And more..."
        },
        {
          "text": "HeikinAshi OHLC / Normal OHLC (check this config)",
          "source_url": "https://github.com/c9s/bbgo#L83",
          "evidence": "- HeikinAshi OHLC / Normal OHLC (check [this config](https://github.com/c9s/bbgo/blob/main/config/skeleton.yaml#L5))"
        },
        {
          "text": "React-powered Web Dashboard.",
          "source_url": "https://github.com/c9s/bbgo#L84",
          "evidence": "- React-powered Web Dashboard."
        },
        {
          "text": "Docker image ready.",
          "source_url": "https://github.com/c9s/bbgo#L85",
          "evidence": "- Docker image ready."
        },
        {
          "text": "Kubernetes support.",
          "source_url": "https://github.com/c9s/bbgo#L86",
          "evidence": "- Kubernetes support."
        },
        {
          "text": "Helm chart ready.",
          "source_url": "https://github.com/c9s/bbgo#L87",
          "evidence": "- Helm chart ready."
        },
        {
          "text": "High precision float point (up to 16 digits, run with `-tags dnum`).",
          "source_url": "https://github.com/c9s/bbgo#L88",
          "evidence": "- High precision float point (up to 16 digits, run with `-tags dnum`)."
        },
        {
          "text": "run the built-in strategies",
          "source_url": "https://github.com/c9s/bbgo#L28",
          "evidence": "You can use BBGO to run the built-in strategies."
        },
        {
          "text": "implement your own strategies",
          "source_url": "https://github.com/c9s/bbgo#L32",
          "evidence": "You can use BBGO's trading unit and back-test unit to implement your own strategies."
        },
        {
          "text": "supports 4+ major exchanges, so you don't have to repeat",
          "source_url": "https://github.com/c9s/bbgo#L36",
          "evidence": "You can use BBGO's underlying common exchange API; currently, it supports 4+ major exchanges, so you don't have to repeat"
        },
        {
          "text": "run with `-tags dnum`)",
          "source_url": "https://github.com/c9s/bbgo#L88",
          "evidence": "- High precision float point (up to 16 digits, run with `-tags dnum`)."
        },
        {
          "text": "provides more flexibility, but you need to prepare inventories                                   | maker      |                  |",
          "source_url": "https://github.com/c9s/bbgo#L100",
          "evidence": "| grid        | the first generation grid strategy, it provides more flexibility, but you need to prepare inventories                                   | maker      |                  |"
        },
        {
          "text": "supports base+quote mode                              | maker      |                  |",
          "source_url": "https://github.com/c9s/bbgo#L101",
          "evidence": "| grid2       | the second generation grid strategy, it can convert your quote asset into a grid, supports base+quote mode                              | maker      |                  |"
        },
        {
          "text": "implements a basic grid strategy with the built-in bollinger indicator                                                         | maker      |                  |",
          "source_url": "https://github.com/c9s/bbgo#L102",
          "evidence": "| bollgrid    | strategy implements a basic grid strategy with the built-in bollinger indicator                                                         | maker      |                  |"
        },
        {
          "text": "creates a wall (large amount of order) on the order book                                                                       | maker      | no               |",
          "source_url": "https://github.com/c9s/bbgo#L112",
          "evidence": "| wall        | this strategy creates a wall (large amount of order) on the order book                                                                       | maker      | no               |"
        },
        {
          "text": "implements a strategy that rebalances the portfolio based on the market capitalization                                    | rebalance  | no               |",
          "source_url": "https://github.com/c9s/bbgo#L116",
          "evidence": "| marketcap   | this strategy implements a strategy that rebalances the portfolio based on the market capitalization                                    | rebalance  | no               |"
        },
        {
          "text": "support this project, please",
          "source_url": "https://github.com/c9s/bbgo#L156",
          "evidence": "This project is maintained and supported by a small group of people. If you would like to support this project, please"
        },
        {
          "text": "support decimals with higher precision",
          "source_url": "https://github.com/c9s/bbgo#L187",
          "evidence": "Since v2, we've added a new float point implementation from dnum to support decimals with higher precision. To download &"
        },
        {
          "text": "allows you to one-click deploy a lightweight instance with bbgo",
          "source_url": "https://github.com/c9s/bbgo#L192",
          "evidence": "StackScript allows you to one-click deploy a lightweight instance with bbgo."
        },
        {
          "text": "build from source",
          "source_url": "https://github.com/c9s/bbgo#L202",
          "evidence": "### Build from source"
        },
        {
          "text": "build from source](",
          "source_url": "https://github.com/c9s/bbgo#L204",
          "evidence": "See [Build from source](./doc/build-from-source.md)"
        },
        {
          "text": "run --enable-webserver",
          "source_url": "https://github.com/c9s/bbgo#L257",
          "evidence": "bbgo run --enable-webserver"
        },
        {
          "text": "provides the script for unix systems/subsystems to synchronize date with binance",
          "source_url": "https://github.com/c9s/bbgo#L284",
          "evidence": "BBGO provides the script for UNIX systems/subsystems to synchronize date with Binance. `jq` and `bc` are required to be"
        },
        {
          "text": "supports binance testnet",
          "source_url": "https://github.com/c9s/bbgo#L302",
          "evidence": "Currently only supports Binance testnet. To run bbgo in testnet, apply new API keys"
        },
        {
          "text": "run bbgo in testnet, apply new api keys",
          "source_url": "https://github.com/c9s/bbgo#L302",
          "evidence": "Currently only supports Binance testnet. To run bbgo in testnet, apply new API keys"
        },
        {
          "text": "export paper_trade=1",
          "source_url": "https://github.com/c9s/bbgo#L306",
          "evidence": "export PAPER_TRADE=1"
        },
        {
          "text": "export disable_market_cache=1 # the symbols supported in testnet is far less than the mainnet",
          "source_url": "https://github.com/c9s/bbgo#L307",
          "evidence": "export DISABLE_MARKET_CACHE=1 # the symbols supported in testnet is far less than the mainnet"
        },
        {
          "text": "configure mysql database",
          "source_url": "https://github.com/c9s/bbgo#L327",
          "evidence": "#### Configure MySQL Database"
        },
        {
          "text": "run it in docker](https://hub",
          "source_url": "https://github.com/c9s/bbgo#L339",
          "evidence": "Or [run it in docker](https://hub.docker.com/_/mysql)"
        },
        {
          "text": "create your mysql database:",
          "source_url": "https://github.com/c9s/bbgo#L341",
          "evidence": "Create your mysql database:"
        },
        {
          "text": "create database bbgo charset utf8\"",
          "source_url": "https://github.com/c9s/bbgo#L344",
          "evidence": "mysql -uroot -e \"CREATE DATABASE bbgo CHARSET utf8\""
        },
        {
          "text": "configure sqlite3 database",
          "source_url": "https://github.com/c9s/bbgo#L354",
          "evidence": "#### Configure Sqlite3 Database"
        },
        {
          "text": "configure sync for private trading data](",
          "source_url": "https://github.com/c9s/bbgo#L367",
          "evidence": "See [Configure Sync For Private Trading Data](./doc/configuration/sync.md)"
        },
        {
          "text": "implements a basic grid strategy with the built-in bollinger",
          "source_url": "https://github.com/c9s/bbgo#L399",
          "evidence": "- `bollgrid` strategy implements a basic grid strategy with the built-in bollinger"
        },
        {
          "text": "implements the fixed price band grid strategy grid",
          "source_url": "https://github.com/c9s/bbgo#L401",
          "evidence": "- `grid` strategy implements the fixed price band grid strategy [grid](pkg/strategy/grid). See"
        },
        {
          "text": "implements a strategy that catches the flashcrash flashcrash",
          "source_url": "https://github.com/c9s/bbgo#L408",
          "evidence": "- `flashcrash` strategy implements a strategy that catches the flashcrash [flashcrash](pkg/strategy/flashcrash)"
        },
        {
          "text": "implements a strategy that rebalances the portfolio based on the market",
          "source_url": "https://github.com/c9s/bbgo#L409",
          "evidence": "- `marketcap` strategy implements a strategy that rebalances the portfolio based on the market"
        },
        {
          "text": "run these built-in strategies, just modify the config file to make the configuration suitable for you, for example, if",
          "source_url": "https://github.com/c9s/bbgo#L417",
          "evidence": "To run these built-in strategies, just modify the config file to make the configuration suitable for you, for example, if"
        },
        {
          "text": "run bbgo with the config",
          "source_url": "https://github.com/c9s/bbgo#L424",
          "evidence": "# run bbgo with the config"
        },
        {
          "text": "run --config config/buyandhold",
          "source_url": "https://github.com/c9s/bbgo#L425",
          "evidence": "bbgo run --config config/buyandhold.yaml"
        },
        {
          "text": "create your go package, initialize the repository with `go mod`, and add bbgo as a dependency:",
          "source_url": "https://github.com/c9s/bbgo#L438",
          "evidence": "Create your go package, initialize the repository with `go mod`, and add bbgo as a dependency:"
        },
        {
          "text": "run `bbgo run` command, bbgo will compile a wrapper binary that imports your strategy:",
          "source_url": "https://github.com/c9s/bbgo#L477",
          "evidence": "Run `bbgo run` command, bbgo will compile a wrapper binary that imports your strategy:"
        },
        {
          "text": "imports your strategy:",
          "source_url": "https://github.com/c9s/bbgo#L477",
          "evidence": "Run `bbgo run` command, bbgo will compile a wrapper binary that imports your strategy:"
        },
        {
          "text": "run --config config/bbgo",
          "source_url": "https://github.com/c9s/bbgo#L480",
          "evidence": "dotenv -f .env.local -- bbgo run --config config/bbgo.yaml"
        },
        {
          "text": "build your own wrapper binary via:",
          "source_url": "https://github.com/c9s/bbgo#L483",
          "evidence": "Or you can build your own wrapper binary via:"
        },
        {
          "text": "build --config config/bbgo",
          "source_url": "https://github.com/c9s/bbgo#L486",
          "evidence": "bbgo build --config config/bbgo.yaml"
        },
        {
          "text": "supports dynamic dependency injection",
          "source_url": "https://github.com/c9s/bbgo#L533",
          "evidence": "In order to minimize the strategy code, bbgo supports dynamic dependency injection."
        },
        {
          "text": "create a branch and start your development",
          "source_url": "https://github.com/c9s/bbgo#L603",
          "evidence": "4. Create a branch and start your development."
        },
        {
          "text": "implement the strategy for",
          "source_url": "https://github.com/c9s/bbgo#L631",
          "evidence": "You can write an article about BBGO on any topic, in 750-1500 words for exchange, and I can implement the strategy for"
        },
        {
          "text": "support a new crypto exchange that is not included in the current bbgo, we can implement it for you",
          "source_url": "https://github.com/c9s/bbgo#L637",
          "evidence": "If you want BBGO to support a new crypto exchange that is not included in the current BBGO, we can implement it for you."
        },
        {
          "text": "implement it for you",
          "source_url": "https://github.com/c9s/bbgo#L637",
          "evidence": "If you want BBGO to support a new crypto exchange that is not included in the current BBGO, we can implement it for you."
        },
        {
          "text": "support the development of bbgo, we have created a bounty pool to support contributors by giving away $bbg tokens",
          "source_url": "https://github.com/c9s/bbgo#L658",
          "evidence": "To support the development of BBGO, we have created a bounty pool to support contributors by giving away $BBG tokens."
        },
        {
          "text": "TWAP order execution support. See TWAP Order Execution",
          "source_url": "https://github.com/c9s/bbgo#L44",
          "evidence": "- TWAP order execution support. See [TWAP Order Execution](./doc/topics/twap.md)"
        },
        {
          "text": "Multi-exchange session support: you can connect to more than 2 exchanges with different accounts or subaccounts.",
          "source_url": "https://github.com/c9s/bbgo#L50",
          "evidence": "- Multi-exchange session support: you can connect to more than 2 exchanges with different accounts or subaccounts."
        },
        {
          "text": "- Running Moving Average",
          "source_url": "https://github.com/c9s/bbgo#L69",
          "evidence": "- [Running Moving Average](./pkg/indicator/rma.go)"
        },
        {
          "text": "Kubernetes support.",
          "source_url": "https://github.com/c9s/bbgo#L86",
          "evidence": "- Kubernetes support."
        },
        {
          "text": "High precision float point (up to 16 digits, run with `-tags dnum`).",
          "source_url": "https://github.com/c9s/bbgo#L88",
          "evidence": "- High precision float point (up to 16 digits, run with `-tags dnum`)."
        },
        {
          "text": "*Notice**: SQLite is not fully supported, we recommend you use MySQL instead of SQLite.",
          "source_url": "https://github.com/c9s/bbgo#L325",
          "evidence": "**Notice**: SQLite is not fully supported, we recommend you use MySQL instead of SQLite."
        },
        {
          "text": "`bollgrid` strategy implements a basic grid strategy with the built-in bollinger",
          "source_url": "https://github.com/c9s/bbgo#L399",
          "evidence": "- `bollgrid` strategy implements a basic grid strategy with the built-in bollinger"
        },
        {
          "text": "`grid` strategy implements the fixed price band grid strategy grid. See",
          "source_url": "https://github.com/c9s/bbgo#L401",
          "evidence": "- `grid` strategy implements the fixed price band grid strategy [grid](pkg/strategy/grid). See"
        },
        {
          "text": "`support` strategy uses K-lines with high volume as support support. See",
          "source_url": "https://github.com/c9s/bbgo#L406",
          "evidence": "- `support` strategy uses K-lines with high volume as support [support](pkg/strategy/support). See"
        },
        {
          "text": "`flashcrash` strategy implements a strategy that catches the flashcrash flashcrash",
          "source_url": "https://github.com/c9s/bbgo#L408",
          "evidence": "- `flashcrash` strategy implements a strategy that catches the flashcrash [flashcrash](pkg/strategy/flashcrash)"
        },
        {
          "text": "`marketcap` strategy implements a strategy that rebalances the portfolio based on the market",
          "source_url": "https://github.com/c9s/bbgo#L409",
          "evidence": "- `marketcap` strategy implements a strategy that rebalances the portfolio based on the market"
        },
        {
          "text": "<https://github.com/narumiruna/bbgo-template>",
          "source_url": "https://github.com/c9s/bbgo#L491",
          "evidence": "- <https://github.com/narumiruna/bbgo-template>"
        },
        {
          "text": "<https://github.com/narumiruna/bbgo-marketcap>",
          "source_url": "https://github.com/c9s/bbgo#L492",
          "evidence": "- <https://github.com/narumiruna/bbgo-marketcap>"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    }
  ],
  "features": [
    {
      "text": "[x] Based on Python 3.11+: For botting on any operating system - Windows, macOS and Linux.",
      "normalized_text": "[x] based on python 3.11+: for botting on any operating system - windows, macos and linux.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L68",
          "evidence": "- [x] **Based on Python 3.11+**: For botting on any operating system - Windows, macOS and Linux."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "[x] Persistence: Persistence is achieved through sqlite.",
      "normalized_text": "[x] persistence: persistence is achieved through sqlite.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L69",
          "evidence": "- [x] **Persistence**: Persistence is achieved through sqlite."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "[x] Dry-run: Run the bot without paying money.",
      "normalized_text": "[x] dry-run: run the bot without paying money.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L70",
          "evidence": "- [x] **Dry-run**: Run the bot without paying money."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L70",
          "evidence": "- [x] **Dry-run**: Run the bot without paying money."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L70",
          "evidence": "- [x] **Dry-run**: Run the bot without paying money."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "[x] Backtesting: Run a simulation of your buy/sell strategy.",
      "normalized_text": "[x] backtesting: run a simulation of your buy/sell strategy.",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L71",
          "evidence": "- [x] **Backtesting**: Run a simulation of your buy/sell strategy."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L71",
          "evidence": "- [x] **Backtesting**: Run a simulation of your buy/sell strategy."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L71",
          "evidence": "- [x] **Backtesting**: Run a simulation of your buy/sell strategy."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "[x] Strategy Optimization by machine learning: Use machine learning to optimize your buy/sell strategy parameters with real exchange data.",
      "normalized_text": "[x] strategy optimization by machine learning: use machine learning to optimize your buy/sell strategy parameters wit...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L72",
          "evidence": "- [x] **Strategy Optimization by machine learning**: Use machine learning to optimize your buy/sell strategy parameters with real exchange data."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "[X] Adaptive prediction modeling: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. Learn more",
      "normalized_text": "[x] adaptive prediction modeling: build a smart strategy with freqai that self-trains to the market via adaptive mach...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L73",
          "evidence": "- [X] **Adaptive prediction modeling**: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. [Learn more](https://www.freqtrade.io/en/stable/freqai/)"
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L73",
          "evidence": "- [X] **Adaptive prediction modeling**: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. [Learn more](https://www.freqtrade.io/en/stable/freqai/)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "[x] Whitelist crypto-currencies: Select which crypto-currency you want to trade or use dynamic whitelists.",
      "normalized_text": "[x] whitelist crypto-currencies: select which crypto-currency you want to trade or use dynamic whitelists.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L74",
          "evidence": "- [x] **Whitelist crypto-currencies**: Select which crypto-currency you want to trade or use dynamic whitelists."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L75",
          "evidence": "- [x] **Blacklist crypto-currencies**: Select which crypto-currency you want to avoid."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "[x] Builtin WebUI: Builtin web UI to manage your bot.",
      "normalized_text": "[x] builtin webui: builtin web ui to manage your bot.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L76",
          "evidence": "- [x] **Builtin WebUI**: Builtin web UI to manage your bot."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L76",
          "evidence": "- [x] **Builtin WebUI**: Builtin web UI to manage your bot."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "[x] Manageable via Telegram: Manage the bot with Telegram.",
      "normalized_text": "[x] manageable via telegram: manage the bot with telegram.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L77",
          "evidence": "- [x] **Manageable via Telegram**: Manage the bot with Telegram."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L77",
          "evidence": "- [x] **Manageable via Telegram**: Manage the bot with Telegram."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "[x] Display profit/loss in fiat: Display your profit/loss in fiat currency.",
      "normalized_text": "[x] display profit/loss in fiat: display your profit/loss in fiat currency.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L78",
          "evidence": "- [x] **Display profit/loss in fiat**: Display your profit/loss in fiat currency."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "[x] Performance status report: Provide a performance status of your current trades.",
      "normalized_text": "[x] performance status report: provide a performance status of your current trades.",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L79",
          "evidence": "- [x] **Performance status report**: Provide a performance status of your current trades."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L79",
          "evidence": "- [x] **Performance status report**: Provide a performance status of your current trades."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L79",
          "evidence": "- [x] **Performance status report**: Provide a performance status of your current trades."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "support all major exchanges and be controlled via telegram or webui",
      "normalized_text": "Support all major exchanges and be controlled via telegram or webui",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L8",
          "evidence": "Freqtrade is a free and open source crypto trading bot written in Python. It is designed to support all major exchanges and be controlled via Telegram or webUI. It contains backtesting, plotting and money management tools as well as strategy optimization by machine learning."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L66",
          "evidence": "It is designed to support all major exchanges and be controlled via Telegram. It contains backtesting, plotting and money management tools as well as strategy optimization by machine learning."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run and do not engage money",
      "normalized_text": "Run and do not engage money",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L18",
          "evidence": "Always start by running a trading bot in Dry-run and do not engage money"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build a smart strategy with freqai that self-trains to the market via adaptive machine learning methods",
      "normalized_text": "Build a smart strategy with freqai that self-trains to the market via adaptive machine learning methods",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L73",
          "evidence": "- [X] **Adaptive prediction modeling**: Build a smart strategy with FreqAI that self-trains to the market via adaptive machine learning methods. [Learn more](https://www.freqtrade.io/en/stable/freqai/)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage the bot with telegram",
      "normalized_text": "Manage the bot with telegram",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L77",
          "evidence": "- [x] **Manageable via Telegram**: Manage the bot with Telegram."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create user-data directory",
      "normalized_text": "Create user-data directory",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L101",
          "evidence": "create-userdir      Create user-data directory."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create new config",
      "normalized_text": "Create new config",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L102",
          "evidence": "new-config          Create new config"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create new strategy",
      "normalized_text": "Create new strategy",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L104",
          "evidence": "new-strategy        Create new strategy"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L329",
          "evidence": "1. In [Portainer](https://www.portainer.io/) create new Stack"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "generate plot showing profits",
      "normalized_text": "Generate plot showing profits",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L130",
          "evidence": "plot-profit         Generate plot showing profits."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a [new discussion](https://github",
      "normalized_text": "Create a [new discussion](https://github",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L180",
          "evidence": "[create a new issue](https://github.com/freqtrade/freqtrade/issues/new/choose) and"
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L193",
          "evidence": "[create a new request](https://github.com/freqtrade/freqtrade/issues/new/choose)"
        },
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L424",
          "evidence": "Otherwise, here on GitHub, just create a [new discussion](https://github.com/ctubio/Krypto-trading-bot/discussions) permanently readable by everybody."
        },
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L443",
          "evidence": "If you need installation or usage support, please create a [new discussion](https://github.com/ctubio/Krypto-trading-bot/discussions/new)."
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "*Important:** Always create your PR against the `develop` branch, not `stable`.",
      "normalized_text": "*important:** always create your pr against the `develop` branch, not `stable`.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L210",
          "evidence": "**Important:** Always create your PR against the `develop` branch, not `stable`."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade#L210",
          "evidence": "**Important:** Always create your PR against the `develop` branch, not `stable`."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run this bot we recommend you a cloud instance with a minimum of:",
      "normalized_text": "Run this bot we recommend you a cloud instance with a minimum of:",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L220",
          "evidence": "To run this bot we recommend you a cloud instance with a minimum of:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`/performance`: Show performance of each finished trade grouped by pair",
      "normalized_text": "`/performance`: show performance of each finished trade grouped by pair",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade#L154",
          "evidence": "- `/performance`: Show performance of each finished trade grouped by pair"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering",
      "normalized_text": "Provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L9",
          "evidence": "The **CCXT** library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "processing services worldwide",
      "normalized_text": "Processing services worldwide",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L9",
          "evidence": "The **CCXT** library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "building trading algorithms",
      "normalized_text": "Building trading algorithms",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L11",
          "evidence": "It is intended to be used by **coders, developers, technically-skilled traders, data-scientists and financial analysts** for building trading algorithms."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for many cryptocurrency exchanges \u2014 more coming soon",
      "normalized_text": "Support for many cryptocurrency exchanges \u2014 more coming soon",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L15",
          "evidence": "- support for many cryptocurrency exchanges \u2014 more coming soon"
        },
        {
          "url": "https://github.com/ccxt/ccxt#L15",
          "evidence": "- support for many cryptocurrency exchanges \u2014 more coming soon"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "supports the following 103 cryptocurrency exchange markets and trading apis:",
      "normalized_text": "Supports the following 103 cryptocurrency exchange markets and trading apis:",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L55",
          "evidence": "<!--- init list -->The CCXT library currently supports the following 103 cryptocurrency exchange markets and trading APIs:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is",
      "normalized_text": "Build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L166",
          "evidence": "The library is under [MIT license](https://github.com/ccxt/ccxt/blob/master/LICENSE.txt), that means it's absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import {version, exchanges} from 'ccxt';",
      "normalized_text": "Import {version, exchanges} from 'ccxt';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L215",
          "evidence": "import {version, exchanges} from 'ccxt';"
        },
        {
          "url": "https://github.com/ccxt/ccxt#L412",
          "evidence": "import {version, binance} from 'ccxt';"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "creates a global `ccxt` object:",
      "normalized_text": "Creates a global `ccxt` object:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L232",
          "evidence": "Creates a global `ccxt` object:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports concurrent asynchronous mode with asyncio and async/await in python 3",
      "normalized_text": "Supports concurrent asynchronous mode with asyncio and async/await in python 3",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L251",
          "evidence": "The library supports concurrent asynchronous mode with asyncio and async/await in Python 3.7.0+"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports `orjson` for parsing json since it is much faster than the builtin library",
      "normalized_text": "Supports `orjson` for parsing json since it is much faster than the builtin library",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L259",
          "evidence": "CCXT also supports `orjson` for parsing JSON since it is much faster than the builtin library. This is especially important when using websockets because some exchanges return big messages that need to be parsed and dispatched as quickly as possible."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports concurrent asynchronous mode using tools from [reactphp](https://reactphp",
      "normalized_text": "Supports concurrent asynchronous mode using tools from [reactphp](https://reactphp",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L280",
          "evidence": "The library supports concurrent asynchronous mode using tools from [ReactPHP](https://reactphp.org/) in PHP 8.1+. Read the [Manual](https://github.com/ccxt/ccxt/wiki/) for more details."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the build scripts and tests \u2014 please see the [contributing](https://github",
      "normalized_text": "Run the build scripts and tests \u2014 please see the [contributing](https://github",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L305",
          "evidence": "You can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests \u2014 please see the [Contributing](https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md) document for the details on that)."
        },
        {
          "url": "https://github.com/ccxt/ccxt#L305",
          "evidence": "You can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests \u2014 please see the [Contributing](https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md) document for the details on that)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "provide unrestricted access to public information for all exchange markets without the need to register a user account or have an api key",
      "normalized_text": "Provide unrestricted access to public information for all exchange markets without the need to register a user accoun...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L321",
          "evidence": "The CCXT library consists of a public part and a private part. Anyone can use the public part immediately after installation. Public APIs provide unrestricted access to public information for all exchange markets without the need to register a user account or have an API key."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "include the following:",
      "normalized_text": "Include the following:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L323",
          "evidence": "Public APIs include the following:"
        },
        {
          "url": "https://github.com/ccxt/ccxt#L336",
          "evidence": "Private APIs allow the following:"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "create accounts or api keys for you",
      "normalized_text": "Create accounts or api keys for you",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L334",
          "evidence": "In order to trade with private APIs you need to obtain API keys from an exchange's website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don't. You will have to sign up and create API keys on their websites."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create api keys on their websites",
      "normalized_text": "Create api keys on their websites",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L334",
          "evidence": "In order to trade with private APIs you need to obtain API keys from an exchange's website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don't. You will have to sign up and create API keys on their websites."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage personal account info",
      "normalized_text": "Manage personal account info",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L338",
          "evidence": "- manage personal account info"
        },
        {
          "url": "https://github.com/ccxt/ccxt#L338",
          "evidence": "- manage personal account info"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "implements public and private rest and websocket apis for all exchanges in typescript, javascript, php and python",
      "normalized_text": "Implements public and private rest and websocket apis for all exchanges in typescript, javascript, php and python",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L347",
          "evidence": "This library implements full public and private REST and WebSocket APIs for all exchanges in TypeScript, JavaScript, PHP and Python."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports both camelcase notation (preferred in typescript and javascript) and underscore notation (preferred in python and php), therefore all methods can be called in either notation or coding style in any language",
      "normalized_text": "Supports both camelcase notation (preferred in typescript and javascript) and underscore notation (preferred in pytho...",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L349",
          "evidence": "The CCXT library supports both camelcase notation (preferred in TypeScript and JavaScript) and underscore notation (preferred in Python and PHP), therefore all methods can be called in either notation or coding style in any language."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*CCXT now supports ESM and CJS modules**",
      "normalized_text": "*ccxt now supports esm and cjs modules**",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L361",
          "evidence": "**CCXT now supports ESM and CJS modules**"
        },
        {
          "url": "https://github.com/ccxt/ccxt#L361",
          "evidence": "**CCXT now supports ESM and CJS modules**"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support \"traditional\" optional parameters like `function a(optional = false)`",
      "normalized_text": "Support \"traditional\" optional parameters like `function a(optional = false)`",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L579",
          "evidence": "Unlike Javascript/Python/PHP/C# Go does not support \"traditional\" optional parameters like `function a(optional = false)`. However, the CCXT language and structure have some methods with optional params, and since the Go language is transpiled from the Typescript source, we had to find a way of representing them."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports 4 different \"optional\" parameters, symbol, since, limit, and params",
      "normalized_text": "Supports 4 different \"optional\" parameters, symbol, since, limit, and params",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L583",
          "evidence": "For example, this function `FetchMyTrades` supports 4 different \"optional\" parameters, symbol, since, limit, and params."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide them by doing",
      "normalized_text": "Provide them by doing",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L589",
          "evidence": "And we can provide them by doing"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide it to avoid getting a `symbolrequired` error",
      "normalized_text": "Provide it to avoid getting a `symbolrequired` error",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L595",
          "evidence": "Lastly, just because the signature dictates that some argument like `symbol` is optional, it will depend from exchange to exchange and you might need to provide it to avoid getting a `SymbolRequired` error."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides a command-line interface (cli) that enables direct interaction with any supported exchange from the terminal",
      "normalized_text": "Provides a command-line interface (cli) that enables direct interaction with any supported exchange from the terminal",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L603",
          "evidence": "CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data\u2014without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don\u2019t warrant the overhead of building a full application."
        },
        {
          "url": "https://github.com/ccxt/ccxt#L603",
          "evidence": "CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data\u2014without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don\u2019t warrant the overhead of building a full application."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "building a application",
      "normalized_text": "Building a application",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L603",
          "evidence": "CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data\u2014without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don\u2019t warrant the overhead of building a full application."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "execute custom code",
      "normalized_text": "Execute custom code",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L603",
          "evidence": "CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data\u2014without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don\u2019t warrant the overhead of building a full application."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allows you to invoke any ccxt method by specifying the exchange id, the methodname, and any required arguments",
      "normalized_text": "Allows you to invoke any ccxt method by specifying the exchange id, the methodname, and any required arguments",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L615",
          "evidence": "You can use the `--help` option to view a general overview of how the CLI works. The tool allows you to invoke any CCXT method by specifying the exchange id, the methodName, and any required arguments."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide api keys by setting them as environment varibales eg: `binance_apikey=\"xxxx\"` or adding them to the config file located at `$cache/config",
      "normalized_text": "Provide api keys by setting them as environment varibales eg: `binance_apikey=\"xxxx\"` or adding them to the config fi...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L644",
          "evidence": "You can easily provide API keys by setting them as environment varibales eg: `BINANCE_APIKEY=\"XXXX\"` or adding them to the config file located at `$CACHE/config.json`"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support developer team",
      "normalized_text": "Support developer team",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L650",
          "evidence": "## Support Developer Team"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support us with a tip",
      "normalized_text": "Support us with a tip",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L652",
          "evidence": "We are investing a significant amount of time into the development of this library. If CCXT made your life easier and you want to help us improve it further, or if you want to speed up development of new features and exchanges, please support us with a tip. We appreciate all contributions!"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support this project by becoming a supporter",
      "normalized_text": "Support this project by becoming a supporter",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L656",
          "evidence": "Support this project by becoming a sponsor."
        },
        {
          "url": "https://github.com/ccxt/ccxt#L673",
          "evidence": "Support this project by becoming a supporter. Your avatar will show up here with a link to your website."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "fully implemented public and private APIs",
      "normalized_text": "Fully implemented public and private apis",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L16",
          "evidence": "- fully implemented public and private APIs"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "an out of the box unified API that is extremely easy to integrate",
      "normalized_text": "An out of the box unified api that is extremely easy to integrate",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L18",
          "evidence": "- an out of the box unified API that is extremely easy to integrate"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "python/ in Python (generated from TS)",
      "normalized_text": "Python/ in python (generated from ts)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L183",
          "evidence": "- [python/](https://github.com/ccxt/ccxt/blob/master/python/) in Python (generated from TS)"
        },
        {
          "url": "https://github.com/ccxt/ccxt#L184",
          "evidence": "- [php/](https://github.com/ccxt/ccxt/blob/master/php/) in PHP (generated from TS)"
        },
        {
          "url": "https://github.com/ccxt/ccxt#L185",
          "evidence": "- [cs/](https://github.com/ccxt/ccxt/blob/master/cs/)  in C# (generated from TS)"
        },
        {
          "url": "https://github.com/ccxt/ccxt#L186",
          "evidence": "- [go/](https://github.com/ccxt/ccxt/blob/master/go/)  in Go (generated from TS)"
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "<sub>[Telegram Announcements](https://t.me/ccxt_announcements)</sub> CCXT Channel on Telegram (important announcements)",
      "normalized_text": "<sub>[telegram announcements](https://t.me/ccxt_announcements)</sub> ccxt channel on telegram (important announcements)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L701",
          "evidence": "- <sub>[![Telegram Announcements](https://img.shields.io/badge/CCXT-Channel-blue?logo=telegram)](https://t.me/ccxt_announcements)</sub> CCXT Channel on Telegram (important announcements)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "<sub>[Telegram Chat](https://t.me/ccxt_chat)</sub> CCXT Chat on Telegram (technical support)",
      "normalized_text": "<sub>[telegram chat](https://t.me/ccxt_chat)</sub> ccxt chat on telegram (technical support)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L702",
          "evidence": "- <sub>[![Telegram Chat](https://img.shields.io/badge/CCXT-Chat-blue?logo=telegram)](https://t.me/ccxt_chat)</sub> CCXT Chat on Telegram (technical support)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "API broker means CCXT is funded with rebates from exchanges' API broker programs and it is an official API broker with many exchanges, all rebates and related fees are handled by the exchanges solely in accordance with exchanges' respective terms and conditions established by each partner exchange.",
      "normalized_text": "Api broker means ccxt is funded with rebates from exchanges' api broker programs and it is an official api broker wit...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L714",
          "evidence": "- **API broker** means CCXT is funded with rebates from exchanges' API broker programs and it is an official API broker with many exchanges, all rebates and related fees are handled by the exchanges solely in accordance with exchanges' respective terms and conditions established by each partner exchange."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Open source means anyone is allowed to use it, to look inside the code and to change everything, including other brokers.",
      "normalized_text": "Open source means anyone is allowed to use it, to look inside the code and to change everything, including other brok...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/ccxt#L716",
          "evidence": "- **Open source** means anyone is allowed to use it, to look inside the code and to change everything, including other brokers."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run on many centralized or decentralized exchanges",
      "normalized_text": "Run on many centralized or decentralized exchanges",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L9",
          "evidence": "Hummingbot is an open-source framework that helps you design and deploy automated trading strategies, or **bots**, that can run on many centralized or decentralized exchanges. Over the past year, Hummingbot users have generated over $34 billion in trading volume across 140+ unique trading venues."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "building new connectors/strategies or adding custom code, see the [install from source](https://hummingbot",
      "normalized_text": "Building new connectors/strategies or adding custom code, see the [install from source](https://hummingbot",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L31",
          "evidence": "Alternatively, if you are building new connectors/strategies or adding custom code, see the [Install from Source](https://hummingbot.org/installation/source/) section in the documentation."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides standardized connectors for interacting with automatic market maker (amm) decentralized exchanges (dexs) across different blockchain networks",
      "normalized_text": "Provides standardized connectors for interacting with automatic market maker (amm) decentralized exchanges (dexs) acr...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L53",
          "evidence": "Gateway provides standardized connectors for interacting with automatic market maker (AMM) decentralized exchanges (DEXs) across different blockchain networks."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run hummingbot with gateway, clone the repo and uncomment the gateway service lines in `docker-compose",
      "normalized_text": "Run hummingbot with gateway, clone the repo and uncomment the gateway service lines in `docker-compose",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L55",
          "evidence": "To run Hummingbot with Gateway, clone the repo and uncomment the Gateway service lines in `docker-compose.yml`:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate the certificates needed",
      "normalized_text": "Generate the certificates needed",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L87",
          "evidence": "By default, Gateway will start in development mode with unencrypted HTTP endpoints. To run in production model wth encrypted HTTPS, use the `DEV=false` flag and run `gateway generate-certs` in Hummingbot to generate the certificates needed. See [Development vs Production Modes](http://hummingbot.org/gateway/installation/#development-vs-production-modes) for more information."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run in production model wth encrypted https, use the `dev=false` flag and run `gateway generate-certs` in hummingbot to generate the certificates needed",
      "normalized_text": "Run in production model wth encrypted https, use the `dev=false` flag and run `gateway generate-certs` in hummingbot ...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L87",
          "evidence": "By default, Gateway will start in development mode with unencrypted HTTP endpoints. To run in production model wth encrypted HTTPS, use the `DEV=false` flag and run `gateway generate-certs` in Hummingbot to generate the certificates needed. See [Development vs Production Modes](http://hummingbot.org/gateway/installation/#development-vs-production-modes) for more information."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide us for trading purposes nor share them with third parties",
      "normalized_text": "Provide us for trading purposes nor share them with third parties",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L101",
          "evidence": "We pledge that we will not use the information/data you provide us for trading purposes nor share them with third parties."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build sophisticated trading strategies that can be deployed across many exchanges with minimal changes",
      "normalized_text": "Build sophisticated trading strategies that can be deployed across many exchanges with minimal changes",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L105",
          "evidence": "Hummingbot connectors standardize REST and WebSocket API interfaces to different types of exchanges, enabling you to build sophisticated trading strategies that can be deployed across many exchanges with minimal changes."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support the development and maintenance of hummingbot via broker partnerships and sponsorships",
      "normalized_text": "Support the development and maintenance of hummingbot via broker partnerships and sponsorships",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L126",
          "evidence": "We are grateful for the following exchanges that support the development and maintenance of Hummingbot via broker partnerships and sponsorships."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "includes the following exchange connectors, which are maintained and updated through the hummingbot foundation governance process",
      "normalized_text": "Includes the following exchange connectors, which are maintained and updated through the hummingbot foundation govern...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L143",
          "evidence": "Currently, the master branch of Hummingbot also includes the following exchange connectors, which are maintained and updated through the Hummingbot Foundation governance process. See [Governance](https://hummingbot.org/governance/) for more information."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage hummingbot instances",
      "normalized_text": "Manage hummingbot instances",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L176",
          "evidence": "* [Dashboard](https://github.com/hummingbot/dashboard): Web app that helps you create, backtest, deploy, and manage Hummingbot instances"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Quants Lab: Jupyter notebooks that enable you to fetch data and perform research using Hummingbot",
      "normalized_text": "Quants lab: jupyter notebooks that enable you to fetch data and perform research using hummingbot",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L177",
          "evidence": "* [Quants Lab](https://github.com/hummingbot/quants-lab): Jupyter notebooks that enable you to fetch data and perform research using Hummingbot"
        },
        {
          "url": "https://github.com/hummingbot/hummingbot#L177",
          "evidence": "* [Quants Lab](https://github.com/hummingbot/quants-lab): Jupyter notebooks that enable you to fetch data and perform research using Hummingbot"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "perform research using hummingbot",
      "normalized_text": "Perform research using hummingbot",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L177",
          "evidence": "* [Quants Lab](https://github.com/hummingbot/quants-lab): Jupyter notebooks that enable you to fetch data and perform research using Hummingbot"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Join our Discord community and ask questions in the #support channel",
      "normalized_text": "Join our discord community and ask questions in the #support channel",
      "category": "Community",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L99",
          "evidence": "* Join our [Discord community](https://discord.gg/hummingbot) and ask questions in the #support channel"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "AMM DEX: Decentralized exchanges using Automated Market Maker protocols. Non-custodial, connect via Gateway middleware.",
      "normalized_text": "Amm dex: decentralized exchanges using automated market maker protocols. non-custodial, connect via gateway middleware.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L119",
          "evidence": "* **AMM DEX**: Decentralized exchanges using Automated Market Maker protocols. Non-custodial, connect via Gateway middleware."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Dashboard: Web app that helps you create, backtest, deploy, and manage Hummingbot instances",
      "normalized_text": "Dashboard: web app that helps you create, backtest, deploy, and manage hummingbot instances",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/hummingbot/hummingbot#L176",
          "evidence": "* [Dashboard](https://github.com/hummingbot/dashboard): Web app that helps you create, backtest, deploy, and manage Hummingbot instances"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Create a Binance account (Includes my referral link, I'll be super grateful if you use it).",
      "normalized_text": "Create a binance account (includes my referral link, i'll be super grateful if you use it).",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L53",
          "evidence": "-   Create a [Binance account](https://accounts.binance.com/register?ref=PGDFCE46) (Includes my referral link, I'll be super grateful if you use it)."
        },
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L53",
          "evidence": "-   Create a [Binance account](https://accounts.binance.com/register?ref=PGDFCE46) (Includes my referral link, I'll be super grateful if you use it)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "create a [binance account](https://accounts",
      "normalized_text": "Create a [binance account](https://accounts",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L53",
          "evidence": "-   Create a [Binance account](https://accounts.binance.com/register?ref=PGDFCE46) (Includes my referral link, I'll be super grateful if you use it)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Enable Two-factor Authentication.",
      "normalized_text": "Enable two-factor authentication.",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L54",
          "evidence": "-   Enable Two-factor Authentication."
        },
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L54",
          "evidence": "-   Enable Two-factor Authentication."
        },
        {
          "url": "https://github.com/yasinkuyu/binance-trader#L10",
          "evidence": "2. Enable Two-factor Authentication"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "Create a new API key.",
      "normalized_text": "Create a new api key.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L55",
          "evidence": "-   Create a new API key."
        },
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L55",
          "evidence": "-   Create a new API key."
        },
        {
          "url": "https://github.com/Superalgos/Superalgos#L128",
          "evidence": "If you don't have a Github.com account, please open one! Once you are logged in, go to the [New Github Personal Access Token Page](https://github.com/settings/tokens/new) and create a new token."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "run the following line in the terminal: `pip install -r requirements",
      "normalized_text": "Run the following line in the terminal: `pip install -r requirements",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L62",
          "evidence": "Run the following line in the terminal: `pip install -r requirements.txt`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create user configuration",
      "normalized_text": "Create user configuration",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L64",
          "evidence": "### Create user configuration"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow different sets of supported coins",
      "normalized_text": "Allow different sets of supported coins",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L74",
          "evidence": "-   **bridge** - Your bridge currency of choice. Notice that different bridges will allow different sets of supported coins. For example, there may be a Binance particular-coin/USDT pair but no particular-coin/BUSD pair."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support this benefit, the bot will always perform the following operations:",
      "normalized_text": "Support this benefit, the bot will always perform the following operations:",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L104",
          "evidence": "You can [use BNB to pay for any fees on the Binance platform](https://www.binance.com/en/support/faq/115000583311-Using-BNB-to-Pay-for-Fees), which will reduce all fees by 25%. In order to support this benefit, the bot will always perform the following operations:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "perform the following operations:",
      "normalized_text": "Perform the following operations:",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L104",
          "evidence": "You can [use BNB to pay for any fees on the Binance platform](https://www.binance.com/en/support/faq/115000583311-Using-BNB-to-Pay-for-Fees), which will reduce all fees by 25%. In order to support this benefit, the bot will always perform the following operations:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allows the bot to send notifications to all of the most popular notification services available such as: telegram, discord, slack, amazon sns, gotify, etc",
      "normalized_text": "Allows the bot to send notifications to all of the most popular notification services available such as: telegram, di...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L111",
          "evidence": "Apprise allows the bot to send notifications to all of the most popular notification services available such as: Telegram, Discord, Slack, Amazon SNS, Gotify, etc."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a apprise",
      "normalized_text": "Create a apprise",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L113",
          "evidence": "To set this up you need to create a apprise.yml file in the config directory."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the server that returns the information",
      "normalized_text": "Run the server that returns the information",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L125",
          "evidence": "### Run the server that returns the information"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support this project, please",
      "normalized_text": "Support this project, please",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L173",
          "evidence": "## Support the Project"
        },
        {
          "url": "https://github.com/whittlem/pycryptobot#L21",
          "evidence": "## Supporting The Project"
        },
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L122",
          "evidence": "### Support the project"
        },
        {
          "url": "https://github.com/c9s/bbgo#L156",
          "evidence": "This project is maintained and supported by a small group of people. If you would like to support this project, please"
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "build a bot from scratch",
      "normalized_text": "Build a bot from scratch",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L189",
          "evidence": "## Want to build a bot from scratch?"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "offer by me or any third party service provider to buy or sell",
      "normalized_text": "Offer by me or any third party service provider to buy or sell",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L200",
          "evidence": "endorsement, or offer by me or any third party service provider to buy or sell"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "offer would be unlawful under the",
      "normalized_text": "Offer would be unlawful under the",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L202",
          "evidence": "jurisdiction in which such solicitation or offer would be unlawful under the"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "api_secret_key - Binance secret key generated in the Binance account setup stage.",
      "normalized_text": "Api_secret_key - binance secret key generated in the binance account setup stage.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L70",
          "evidence": "-   **api_key** - Binance API key generated in the Binance account setup stage."
        },
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L71",
          "evidence": "-   **api_secret_key** - Binance secret key generated in the Binance account setup stage."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "current_coin - This is your starting coin of choice. This should be one of the coins from your supported coin list. If you want to start from your bridge currency, leave this field empty - the bot will select a random coin from your supported coin list and buy it.",
      "normalized_text": "Current_coin - this is your starting coin of choice. this should be one of the coins from your supported coin list. i...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L73",
          "evidence": "-   **current_coin** - This is your starting coin of choice. This should be one of the coins from your supported coin list. If you want to start from your bridge currency, leave this field empty - the bot will select a random coin from your supported coin list and buy it."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "bridge - Your bridge currency of choice. Notice that different bridges will allow different sets of supported coins. For example, there may be a Binance particular-coin/USDT pair but no particular-coin/BUSD pair.",
      "normalized_text": "Bridge - your bridge currency of choice. notice that different bridges will allow different sets of supported coins. ...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L74",
          "evidence": "-   **bridge** - Your bridge currency of choice. Notice that different bridges will allow different sets of supported coins. For example, there may be a Binance particular-coin/USDT pair but no particular-coin/BUSD pair."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Automatically detect that you have BNB fee payment enabled.",
      "normalized_text": "Automatically detect that you have bnb fee payment enabled.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ccxt/binance-trade-bot#L105",
          "evidence": "-   Automatically detect that you have BNB fee payment enabled."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for [binance](https://www",
      "normalized_text": "Support for [binance](https://www",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L15",
          "evidence": "- Full support for [Binance](https://www.binance.com/), [Bitfinex](https://www.bitfinex.com/), [Bitstamp](https://www.bitstamp.net/), [Bittrex](https://bittrex.com/), [CEX.IO](https://cex.io/), [GDAX](https://gdax.com/), [Gemini](https://gemini.com/), [HitBTC](https://hitbtc.com/), [Kraken](https://www.kraken.com/), [Poloniex](https://poloniex.com/)and [TheRockTrading](https://www.therocktrading.com/), work on further exchange support is ongoing."
        },
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L120",
          "evidence": "Currently, we only support [Binance](https://www.binance.com/en?ref=35723227) exchange. If you want to include support for other exchanges, you need to implement a new `struct` that implements the interface `Exchange`. You can check some examples in [exchange](exchange) directory."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support is ongoing",
      "normalized_text": "Support is ongoing",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L15",
          "evidence": "- Full support for [Binance](https://www.binance.com/), [Bitfinex](https://www.bitfinex.com/), [Bitstamp](https://www.bitstamp.net/), [Bittrex](https://bittrex.com/), [CEX.IO](https://cex.io/), [GDAX](https://gdax.com/), [Gemini](https://gemini.com/), [HitBTC](https://hitbtc.com/), [Kraken](https://www.kraken.com/), [Poloniex](https://poloniex.com/)and [TheRockTrading](https://www.therocktrading.com/), work on further exchange support is ongoing."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "plugin architecture for implementing exchange support, or writing new strategies",
      "normalized_text": "Plugin architecture for implementing exchange support, or writing new strategies",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L16",
          "evidence": "- Plugin architecture for implementing exchange support, or writing new strategies"
        },
        {
          "url": "https://github.com/DeviaVir/zenbot#L16",
          "evidence": "- Plugin architecture for implementing exchange support, or writing new strategies"
        },
        {
          "url": "https://github.com/DeviaVir/zenbot#L16",
          "evidence": "- Plugin architecture for implementing exchange support, or writing new strategies"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\"",
      "normalized_text": "Run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\"",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L28",
          "evidence": "- Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\"."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Fully-automated technical-analysis-based trading approach",
      "normalized_text": "Fully-automated technical-analysis-based trading approach",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L14",
          "evidence": "- Fully-automated [technical-analysis](https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:introduction_to_technical_indicators_and_oscillators)-based trading approach"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for Binance, Bitfinex, Bitstamp, Bittrex, CEX.IO, GDAX, Gemini, HitBTC, Kraken, Poloniexand TheRockTrading, work on further exchange support is ongoing.",
      "normalized_text": "Support for binance, bitfinex, bitstamp, bittrex, cex.io, gdax, gemini, hitbtc, kraken, poloniexand therocktrading, w...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L15",
          "evidence": "- Full support for [Binance](https://www.binance.com/), [Bitfinex](https://www.bitfinex.com/), [Bitstamp](https://www.bitstamp.net/), [Bittrex](https://bittrex.com/), [CEX.IO](https://cex.io/), [GDAX](https://gdax.com/), [Gemini](https://gemini.com/), [HitBTC](https://hitbtc.com/), [Kraken](https://www.kraken.com/), [Poloniex](https://poloniex.com/)and [TheRockTrading](https://www.therocktrading.com/), work on further exchange support is ongoing."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Running a bot, and trading in general requires careful study of the risks and parameters involved. A wrong setting can cause you a major loss.",
      "normalized_text": "Running a bot, and trading in general requires careful study of the risks and parameters involved. a wrong setting ca...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L26",
          "evidence": "- Running a bot, and trading in general requires careful study of the risks and parameters involved. A wrong setting can cause you a major loss."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Never leave the bot un-monitored for long periods of time. Zenbot doesn't know when to stop, so be prepared to stop it if too much loss occurs.",
      "normalized_text": "Never leave the bot un-monitored for long periods of time. zenbot doesn't know when to stop, so be prepared to stop i...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L27",
          "evidence": "- Never leave the bot un-monitored for long periods of time. Zenbot doesn't know when to stop, so be prepared to stop it if too much loss occurs."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\".",
      "normalized_text": "Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find ...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/DeviaVir/zenbot#L28",
          "evidence": "- Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find the optimal parameters for your chosen exchange/pair before going \"all-in\"."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udcdd Simple Syntax: Define both simple and trading strategies with the simplest syntax in the fastest time.",
      "normalized_text": "\ud83d\udcdd simple syntax: define both simple and trading strategies with the simplest syntax in the fastest time.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L34",
          "evidence": "- \ud83d\udcdd **Simple Syntax**: Define both simple and advanced trading strategies with the simplest syntax in the fastest time."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udcca Indicator Library: Access a library of technical indicators with easy-to-use syntax.",
      "normalized_text": "\ud83d\udcca indicator library: access a library of technical indicators with easy-to-use syntax.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L35",
          "evidence": "- \ud83d\udcca **Comprehensive Indicator Library**: Access a complete library of technical indicators with easy-to-use syntax."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udcc8 Smart Ordering: Supports market, limit, and stop orders, automatically choosing the best one for you.",
      "normalized_text": "\ud83d\udcc8 smart ordering: supports market, limit, and stop orders, automatically choosing the best one for you.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L36",
          "evidence": "- \ud83d\udcc8 **Smart Ordering**: Supports market, limit, and stop orders, automatically choosing the best one for you."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L36",
          "evidence": "- \ud83d\udcc8 **Smart Ordering**: Supports market, limit, and stop orders, automatically choosing the best one for you."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L36",
          "evidence": "- \ud83d\udcc8 **Smart Ordering**: Supports market, limit, and stop orders, automatically choosing the best one for you."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "\u23f0 Multiple Timeframes and Symbols: Backtest and livetrade multiple timeframes and symbols simultaneously without look-ahead bias.",
      "normalized_text": "\u23f0 multiple timeframes and symbols: backtest and livetrade multiple timeframes and symbols simultaneously without look...",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L37",
          "evidence": "- \u23f0 **Multiple Timeframes and Symbols**: Backtest and livetrade multiple timeframes and symbols simultaneously without look-ahead bias."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udd12 Self-Hosted and Privacy-First: Designed with your privacy in mind, fully self-hosted to ensure your trading strategies and data remain secure.",
      "normalized_text": "\ud83d\udd12 self-hosted and privacy-first: designed with your privacy in mind, fully self-hosted to ensure your trading strateg...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L38",
          "evidence": "- \ud83d\udd12 **Self-Hosted and Privacy-First**: Designed with your privacy in mind, fully self-hosted to ensure your trading strategies and data remain secure."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udee1\ufe0f Risk Management: Built-in helper functions for risk management.",
      "normalized_text": "\ud83d\udee1\ufe0f risk management: built-in helper functions for risk management.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L39",
          "evidence": "- \ud83d\udee1\ufe0f **Risk Management**: Built-in helper functions for robust risk management."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L39",
          "evidence": "- \ud83d\udee1\ufe0f **Risk Management**: Built-in helper functions for robust risk management."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "\ud83d\udccb Metrics System: A metrics system to evaluate your trading strategy's performance.",
      "normalized_text": "\ud83d\udccb metrics system: a metrics system to evaluate your trading strategy's performance.",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L40",
          "evidence": "- \ud83d\udccb **Metrics System**: A comprehensive metrics system to evaluate your trading strategy's performance."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L40",
          "evidence": "- \ud83d\udccb **Metrics System**: A comprehensive metrics system to evaluate your trading strategy's performance."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "\ud83d\udd0d Debug Mode: Observe your strategy in action with a detailed debug mode.",
      "normalized_text": "\ud83d\udd0d debug mode: observe your strategy in action with a detailed debug mode.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L41",
          "evidence": "- \ud83d\udd0d **Debug Mode**: Observe your strategy in action with a detailed debug mode."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udd27 Optimize Mode: Fine-tune your strategies using AI, without needing a technical background.",
      "normalized_text": "\ud83d\udd27 optimize mode: fine-tune your strategies using ai, without needing a technical background.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L42",
          "evidence": "- \ud83d\udd27 **Optimize Mode**: Fine-tune your strategies using AI, without needing a technical background."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udcc8 Leveraged and Short-Selling: First-class support for leveraged trading and short-selling.",
      "normalized_text": "\ud83d\udcc8 leveraged and short-selling: first-class support for leveraged trading and short-selling.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L43",
          "evidence": "- \ud83d\udcc8 **Leveraged and Short-Selling**: First-class support for leveraged trading and short-selling."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L43",
          "evidence": "- \ud83d\udcc8 **Leveraged and Short-Selling**: First-class support for leveraged trading and short-selling."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "\ud83d\udd00 Partial Fills: Supports entering and exiting positions in multiple orders, allowing for greater flexibility.",
      "normalized_text": "\ud83d\udd00 partial fills: supports entering and exiting positions in multiple orders, allowing for greater flexibility.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L44",
          "evidence": "- \ud83d\udd00 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L44",
          "evidence": "- \ud83d\udd00 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L44",
          "evidence": "- \ud83d\udd00 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "\ud83d\udd14 Alerts: Create real-time alerts within your strategies for effective monitoring.",
      "normalized_text": "\ud83d\udd14 alerts: create real-time alerts within your strategies for effective monitoring.",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L45",
          "evidence": "- \ud83d\udd14 **Advanced Alerts**: Create real-time alerts within your strategies for effective monitoring."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L45",
          "evidence": "- \ud83d\udd14 **Advanced Alerts**: Create real-time alerts within your strategies for effective monitoring."
        },
        {
          "url": "https://github.com/jesse-ai/jesse#L45",
          "evidence": "- \ud83d\udd14 **Advanced Alerts**: Create real-time alerts within your strategies for effective monitoring."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "\ud83e\udd16 JesseGPT: Jesse has its own GPT, JesseGPT, that can help you write strategies, optimize them, debug them, and much more.",
      "normalized_text": "\ud83e\udd16 jessegpt: jesse has its own gpt, jessegpt, that can help you write strategies, optimize them, debug them, and much ...",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L46",
          "evidence": "- \ud83e\udd16 **JesseGPT**: Jesse has its own GPT, JesseGPT, that can help you write strategies, optimize them, debug them, and much more."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udd27 Built-in Code Editor: Write, edit, and debug your strategies with a built-in code editor.",
      "normalized_text": "\ud83d\udd27 built-in code editor: write, edit, and debug your strategies with a built-in code editor.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L47",
          "evidence": "- \ud83d\udd27 **Built-in Code Editor**: Write, edit, and debug your strategies with a built-in code editor."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udcfa Youtube Channel: Jesse has a Youtube channel with screencast tutorials that go through example strategies step by step.",
      "normalized_text": "\ud83d\udcfa youtube channel: jesse has a youtube channel with screencast tutorials that go through example strategies step by s...",
      "category": "Documentation",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L48",
          "evidence": "- \ud83d\udcfa **Youtube Channel**: Jesse has a Youtube channel with screencast tutorials that go through example strategies step by step."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for leveraged trading and short-selling",
      "normalized_text": "Support for leveraged trading and short-selling",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L43",
          "evidence": "- \ud83d\udcc8 **Leveraged and Short-Selling**: First-class support for leveraged trading and short-selling."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allowing for greater flexibility",
      "normalized_text": "Allowing for greater flexibility",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L44",
          "evidence": "- \ud83d\udd00 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "execute highly accurate and fast backtests without look-ahead bias",
      "normalized_text": "Execute highly accurate and fast backtests without look-ahead bias",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L72",
          "evidence": "Execute highly accurate and fast backtests without look-ahead bias. Utilize debugging logs, interactive charts with indicator support, and detailed performance metrics to validate your strategies thoroughly."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports paper trading, multiple accounts, real-time logs & notifications (telegram, slack, discord), interactive charts, spot/futures, dex, and a built-in code editor",
      "normalized_text": "Supports paper trading, multiple accounts, real-time logs & notifications (telegram, slack, discord), interactive cha...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L77",
          "evidence": "Deploy strategies live with robust monitoring tools. Supports paper trading, multiple accounts, real-time logs & notifications (Telegram, Slack, Discord), interactive charts, spot/futures, DEX, and a built-in code editor."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "monitoring tools",
      "normalized_text": "Monitoring tools",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L77",
          "evidence": "Deploy strategies live with robust monitoring tools. Supports paper trading, multiple accounts, real-time logs & notifications (Telegram, Slack, Discord), interactive charts, spot/futures, DEX, and a built-in code editor."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run batch backtests, compare across timeframes, symbols, and strategies",
      "normalized_text": "Run batch backtests, compare across timeframes, symbols, and strategies",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L82",
          "evidence": "Accelerate research using the benchmark feature. Run batch backtests, compare across timeframes, symbols, and strategies. Filter and sort results by key performance metrics for efficient analysis."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implementing ideas, debugging, optimizing, and understanding code",
      "normalized_text": "Implementing ideas, debugging, optimizing, and understanding code",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/jesse-ai/jesse#L87",
          "evidence": "Leverage our AI assistant even with limited Python knowledge. Get help writing and improving strategies, implementing ideas, debugging, optimizing, and understanding code. Your personal AI quant."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Manual trade",
      "normalized_text": "Manual trade",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L250",
          "evidence": "- Manual trade"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Convert small balances to BNB",
      "normalized_text": "Convert small balances to bnb",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L251",
          "evidence": "- Convert small balances to BNB"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Trade all symbols",
      "normalized_text": "Trade all symbols",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L252",
          "evidence": "- Trade all symbols"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Monitoring multiple coins simultaneously",
      "normalized_text": "Monitoring multiple coins simultaneously",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L253",
          "evidence": "- Monitoring multiple coins simultaneously"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L253",
          "evidence": "- Monitoring multiple coins simultaneously"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L253",
          "evidence": "- Monitoring multiple coins simultaneously"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "Restrict buying with ATH price",
      "normalized_text": "Restrict buying with ath price",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L255",
          "evidence": "- Restrict buying with ATH price"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Grid Trade for buy/sell",
      "normalized_text": "Grid trade for buy/sell",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L256",
          "evidence": "- Grid Trade for buy/sell"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Integrated with TradingView Technical Analysis",
      "normalized_text": "Integrated with tradingview technical analysis",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L257",
          "evidence": "- Integrated with TradingView Technical Analysis"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L257",
          "evidence": "- Integrated with TradingView Technical Analysis"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "allows following the price fall/rise",
      "normalized_text": "Allows following the price fall/rise",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L36",
          "evidence": "This bot is using the concept of trailing buy/sell order which allows following the price fall/rise."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "The bot supports multiple buy/sell orders based on the configuration.",
      "normalized_text": "The bot supports multiple buy/sell orders based on the configuration.",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L44",
          "evidence": "- The bot supports multiple buy/sell orders based on the configuration."
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L44",
          "evidence": "- The bot supports multiple buy/sell orders based on the configuration."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "monitor multiple symbols",
      "normalized_text": "Monitor multiple symbols",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L45",
          "evidence": "- The bot can monitor multiple symbols. All symbols will be monitored per second."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support raspberry pi 32bit",
      "normalized_text": "Support raspberry pi 32bit",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L46",
          "evidence": "- The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide a persistence database",
      "normalized_text": "Provide a persistence database",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L46",
          "evidence": "- The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "monitor the coin based on the grid trade configuration",
      "normalized_text": "Monitor the coin based on the grid trade configuration",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L52",
          "evidence": "The bot will continuously monitor the coin based on the grid trade configuration."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "monitor the coin based on the last buy price",
      "normalized_text": "Monitor the coin based on the last buy price",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L56",
          "evidence": "After grid trade #1, the bot will monitor the COIN based on the last buy price."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "execute 1st purchase for the coin",
      "normalized_text": "Execute 1st purchase for the coin",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L108",
          "evidence": "Then the bot will execute 1st purchase for the coin. The last buy price will be recorded as `$99.845`. The purchased quantity will be `0.5`."
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L137",
          "evidence": "Then the bot will execute 2nd purchase for the coin. The last buy price will be automatically re-calculated as below:"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L205",
          "evidence": "Then the bot will execute 1st sell for the coin. Then the bot will now wait for 2nd selling trigger price ($83.80 * 1.08 = $90.504)."
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L234",
          "evidence": "Then the bot will execute 2nd sell for the coin."
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "monitor the next grid trading for buying",
      "normalized_text": "Monitor the next grid trading for buying",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L110",
          "evidence": "Once the coin is purchased, the bot will start monitoring the sell signal and at the same time, monitor the next grid trading for buying."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "monitoring the sell signal and at the same time, monitor the next grid trading for buying",
      "normalized_text": "Monitoring the sell signal and at the same time, monitor the next grid trading for buying",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L110",
          "evidence": "Once the coin is purchased, the bot will start monitoring the sell signal and at the same time, monitor the next grid trading for buying."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "monitoring the sell signal of the grid trade #1",
      "normalized_text": "Monitoring the sell signal of the grid trade #1",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L149",
          "evidence": "If there is enough balance for selling and the last buy price is recorded in the bot, then the bot will start monitoring the sell signal of the grid trade #1. Once the current price reaches the trigger price of the grid trade #1, then the bot will place a STOP-LOSS-LIMIT order to sell. If the current price continuously rises, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "configure it as `1` (100%)",
      "normalized_text": "Configure it as `1` (100%)",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L166",
          "evidence": "Unlike buy, the sell configuration will use the percentage of a quantity. If you want to sell all of your coin quantity, then simply configure it as `1` (100%)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "List monitoring coins with buy/sell signals/open orders",
      "normalized_text": "List monitoring coins with buy/sell signals/open orders",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L263",
          "evidence": "- List monitoring coins with buy/sell signals/open orders"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L263",
          "evidence": "- List monitoring coins with buy/sell signals/open orders"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "manage global/symbol settings",
      "normalized_text": "Manage global/symbol settings",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L266",
          "evidence": "- Manage global/symbol settings"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L266",
          "evidence": "- Manage global/symbol settings"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support add to home screen",
      "normalized_text": "Support add to home screen",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L269",
          "evidence": "- Support Add to Home Screen"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L269",
          "evidence": "- Support Add to Home Screen"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "build image from dockerhub:",
      "normalized_text": "Build image from dockerhub:",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L309",
          "evidence": "If want production/live mode, then use the latest build image from DockerHub:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run below commands:",
      "normalized_text": "Run below commands:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L316",
          "evidence": "Or if want development/test mode, then run below commands:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow to execute stop-loss before buy action - [#299](https://github",
      "normalized_text": "Allow to execute stop-loss before buy action - [#299](https://github",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L364",
          "evidence": "- [ ] Allow to execute stop-loss before buy action - [#299](https://github.com/chrisleekr/binance-trading-bot/issues/299)"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L364",
          "evidence": "- [ ] Allow to execute stop-loss before buy action - [#299](https://github.com/chrisleekr/binance-trading-bot/issues/299)"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L364",
          "evidence": "- [ ] Allow to execute stop-loss before buy action - [#299](https://github.com/chrisleekr/binance-trading-bot/issues/299)"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "[ ] Manage setting profiles (save/change/load?/export?) - #151",
      "normalized_text": "[ ] manage setting profiles (save/change/load?/export?) - #151",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L367",
          "evidence": "- [ ] Manage setting profiles (save/change/load?/export?) - [#151](https://github.com/chrisleekr/binance-trading-bot/issues/151)"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L367",
          "evidence": "- [ ] Manage setting profiles (save/change/load?/export?) - [#151](https://github.com/chrisleekr/binance-trading-bot/issues/151)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "supporting apprise - [#106](https://github",
      "normalized_text": "Supporting apprise - [#106](https://github",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L368",
          "evidence": "- [ ] Improve notifications by supporting Apprise - [#106](https://github.com/chrisleekr/binance-trading-bot/issues/106)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support cool time after hitting the lowest price before buy - [#105](https://github",
      "normalized_text": "Support cool time after hitting the lowest price before buy - [#105](https://github",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L369",
          "evidence": "- [ ] Support cool time after hitting the lowest price before buy - [#105](https://github.com/chrisleekr/binance-trading-bot/issues/105)"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L369",
          "evidence": "- [ ] Support cool time after hitting the lowest price before buy - [#105](https://github.com/chrisleekr/binance-trading-bot/issues/105)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support multilingual frontend - [#56](https://github",
      "normalized_text": "Support multilingual frontend - [#56](https://github",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L371",
          "evidence": "- [ ] Support multilingual frontend - [#56](https://github.com/chrisleekr/binance-trading-bot/issues/56)"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L371",
          "evidence": "- [ ] Support multilingual frontend - [#56](https://github.com/chrisleekr/binance-trading-bot/issues/56)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support stop-loss configuration per grid trade for selling - [#261](https://github",
      "normalized_text": "Support stop-loss configuration per grid trade for selling - [#261](https://github",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L373",
          "evidence": "- [ ] Support STOP-LOSS configuration per grid trade for selling - [#261](https://github.com/chrisleekr/binance-trading-bot/issues/261)"
        },
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L373",
          "evidence": "- [ ] Support STOP-LOSS configuration per grid trade for selling - [#261](https://github.com/chrisleekr/binance-trading-bot/issues/261)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "The bot can monitor multiple symbols. All symbols will be monitored per second.",
      "normalized_text": "The bot can monitor multiple symbols. all symbols will be monitored per second.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L45",
          "evidence": "- The bot can monitor multiple symbols. All symbols will be monitored per second."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version",
      "normalized_text": "The bot is using mongodb to provide a persistence database. however, it does not use the latest mongodb to support ra...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L46",
          "evidence": "- The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Delete caches that are not monitored",
      "normalized_text": "Delete caches that are not monitored",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L267",
          "evidence": "- Delete caches that are not monitored"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*You must change the authentication password; otherwise, it will be configured as the default password.*",
      "normalized_text": "*you must change the authentication password; otherwise, it will be configured as the default password.*",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L299",
          "evidence": "*You must change the authentication password; otherwise, it will be configured as the default password.*"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "[ ] Improve notifications by supporting Apprise - #106",
      "normalized_text": "[ ] improve notifications by supporting apprise - #106",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/chrisleekr/binance-trading-bot#L368",
          "evidence": "- [ ] Improve notifications by supporting Apprise - [#106](https://github.com/chrisleekr/binance-trading-bot/issues/106)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the platform on different settings",
      "normalized_text": "Run the platform on different settings",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L52",
          "evidence": "* System requirements | Learn about the [minimum hardware](https://superalgos.org/crypto-trading-bots-system-requirements.shtml) required to run the platform on different settings."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run a live trading session",
      "normalized_text": "Run a live trading session",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L70",
          "evidence": "Once you install and launch the app, a series of interactive tutorials take you by the hand and walk you around the system while you learn the basic skills required to use the interface, mine data, backtest strategies, and even run a live trading session. It is highly recommended to do all tutorials, as they are carefully crafted to make your onboarding as easy as possible."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "offers the ability to install the platform in a clean and isolated environment",
      "normalized_text": "Offers the ability to install the platform in a clean and isolated environment",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L86",
          "evidence": "2. [Docker deployments](README_Docker.md) | Docker offers the ability to install the platform in a clean and isolated environment. The standard Docker installation is not optimized for development or contributions, but some workarounds are offered."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run live trading sessions in the cloud",
      "normalized_text": "Run live trading sessions in the cloud",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L90",
          "evidence": "4. [Public Cloud](README_PublicCloud.md) | This is a great option for those who wish to run live trading sessions in the cloud. You will need to be comfortable with option 3 above to proceed here."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support telegram group](https://t",
      "normalized_text": "Support telegram group](https://t",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L94",
          "evidence": "> :white_check_mark: **EXPERIENCING ISSUES INSTALLING SUPERALGOS?** If you're having trouble installing or running the app for the first time, do not open an issue. Instead, join the [Support Telegram Group](https://t.me/superalgossupport) and follow the instructions on the pinned message to ask for help. You may also join the [new Discord Server](https://discord.gg/CGeKC6WQQb), but bear in mind that the response time tends to be longer. Online support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time",
      "normalized_text": "Support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are f...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L94",
          "evidence": "> :white_check_mark: **EXPERIENCING ISSUES INSTALLING SUPERALGOS?** If you're having trouble installing or running the app for the first time, do not open an issue. Instead, join the [Support Telegram Group](https://t.me/superalgossupport) and follow the instructions on the pinned message to ask for help. You may also join the [new Discord Server](https://discord.gg/CGeKC6WQQb), but bear in mind that the response time tends to be longer. Online support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide clear information and sufficient context about the issue you are facing, and be mindful of people's time",
      "normalized_text": "Provide clear information and sufficient context about the issue you are facing, and be mindful of people's time",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L94",
          "evidence": "> :white_check_mark: **EXPERIENCING ISSUES INSTALLING SUPERALGOS?** If you're having trouble installing or running the app for the first time, do not open an issue. Instead, join the [Support Telegram Group](https://t.me/superalgossupport) and follow the instructions on the pinned message to ask for help. You may also join the [new Discord Server](https://discord.gg/CGeKC6WQQb), but bear in mind that the response time tends to be longer. Online support is provided by volunteers \u2014 please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "monitor attached) then you do not need to install a web browser and you can follow the tutorial for information on connecting remotely to the server",
      "normalized_text": "Monitor attached) then you do not need to install a web browser and you can follow the tutorial for information on co...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L118",
          "evidence": "If you are running headless (i.e. as a server without a monitor attached) then you do not need to install a web browser and you can follow the tutorial for information on connecting remotely to the server."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process and from time to time also when using superalgos",
      "normalized_text": "Process and from time to time also when using superalgos",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L134",
          "evidence": "Once you get the token, copy it and save it somewhere on your local machine. You will need it for later steps of the installation process and from time to time also when using Superalgos."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create your fork/copy of this repository",
      "normalized_text": "Create your fork/copy of this repository",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L154",
          "evidence": "Scroll this page to the top. Find and click the **Fork** button to create your fork/copy of this repository."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build the app from multiple repositories, and also for your contributions to the project",
      "normalized_text": "Build the app from multiple repositories, and also for your contributions to the project",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L162",
          "evidence": "> :white_check_mark: **NOTE**: A Fork is required so that the setup scripts may build the app from multiple repositories, and also for your contributions to the project. The reason why Superalgos is free and open-source is that the project has set up a collective business in which all users may participate. The way to participate is to [contribute](https://superalgos.org/community-contribute.shtml) to making Superalgos better. The project's [native SA token](https://superalgos.org/token-overview.shtml) is distributed among contributors as rewards for the value each adds to the project."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "creates the `superalgos` folder in the current directory, which contains the whole installation",
      "normalized_text": "Creates the `superalgos` folder in the current directory, which contains the whole installation",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L188",
          "evidence": "This creates the `Superalgos` folder in the current directory, which contains the whole installation."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable the desktop shortcut",
      "normalized_text": "Enable the desktop shortcut",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L212",
          "evidence": "| `shortcuts` | Use this option to create desktop shortcuts. Otherwise, you will launch the app from the command line/terminal. |"
        },
        {
          "url": "https://github.com/Superalgos/Superalgos#L521",
          "evidence": "Finally, you will need to enable the desktop shortcut. Right-click Superalgos.desktop and select Allow Launching."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "include the tensorflow dependencies, only if you intend to test the (partial and incomplete) tensorflow integration",
      "normalized_text": "Include the tensorflow dependencies, only if you intend to test the (partial and incomplete) tensorflow integration",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L213",
          "evidence": "| `tensorflow` | Use this option to include the TensorFlow dependencies, only if you intend to test the (partial and incomplete) TensorFlow integration. |"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run this command from the superalgos main folder:",
      "normalized_text": "Run this command from the superalgos main folder:",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L219",
          "evidence": "Before using the software, you will need to install the plugins built by the community. To do so, just run this command from the Superalgos main folder:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "plugins built by the community",
      "normalized_text": "Plugins built by the community",
      "category": "Community",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L219",
          "evidence": "Before using the software, you will need to install the plugins built by the community. To do so, just run this command from the Superalgos main folder:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process is designed in a way that if someday a new type of plugin is added, you need to run this command again and it will fork the new repo and clone it",
      "normalized_text": "Process is designed in a way that if someday a new type of plugin is added, you need to run this command again and it...",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L233",
          "evidence": "This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "plugin is added, you need to run this command again and it will fork the new repo and clone it",
      "normalized_text": "Plugin is added, you need to run this command again and it will fork the new repo and clone it",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L233",
          "evidence": "This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good."
        },
        {
          "url": "https://github.com/Superalgos/Superalgos#L233",
          "evidence": "This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "plugins repositories into your own github account, and then it will clone each of these repositories into your local `superalgos/plugins` folder",
      "normalized_text": "Plugins repositories into your own github account, and then it will clone each of these repositories into your local ...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L233",
          "evidence": "This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run this script to fix the problems for you",
      "normalized_text": "Run this script to fix the problems for you",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L235",
          "evidence": "> :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem."
        },
        {
          "url": "https://github.com/Superalgos/Superalgos#L235",
          "evidence": "> :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "plugins repos, you can delete individual folders inside `superalgos/plugins` and run this script to fix the problems for you",
      "normalized_text": "Plugins repos, you can delete individual folders inside `superalgos/plugins` and run this script to fix the problems ...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L235",
          "evidence": "> :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "plugin forks in your github account, you can delete the offending fork and run this script again to fix the problem",
      "normalized_text": "Plugin forks in your github account, you can delete the offending fork and run this script again to fix the problem",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L235",
          "evidence": "> :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the app for the first time",
      "normalized_text": "Run the app for the first time",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L237",
          "evidence": "**Congratulations! Your setup is complete. Now you may finally run the app for the first time. Please, follow the usage instructions below!**"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the client and gui",
      "normalized_text": "Run the client and gui",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L252",
          "evidence": "## Run the Client and GUI"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run superalgos, go to the superalgos directory/folder and run this command:",
      "normalized_text": "Run superalgos, go to the superalgos directory/folder and run this command:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L260",
          "evidence": "To run Superalgos, go to the Superalgos directory/folder and run this command:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run with minimal memory footprint",
      "normalized_text": "Run with minimal memory footprint",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L274",
          "evidence": "| `minMemo` | Run with minimal memory footprint. This is critical for running on platforms with 8GB of RAM or less, like a Raspberry Pi. |"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run on your terminal and the gui will launch on your default browser",
      "normalized_text": "Run on your terminal and the gui will launch on your default browser",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L283",
          "evidence": "The Client will run on your terminal and the GUI will launch on your default browser. If Chrome/Safari is not your default browser, copy the URL, close the browser, open Chrome/Safari, and paste the URL. Be patient... it takes a few seconds to fully load the GUI."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the system with minimal ram requirements",
      "normalized_text": "Run the system with minimal ram requirements",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L289",
          "evidence": "> :white_check_mark: **TIP**: If your computer has 8 GB of RAM or less, use `node platform minMemo` to run the system with minimal RAM requirements."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support and the community](https://discord",
      "normalized_text": "Support and the community](https://discord",
      "category": "Community",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L311",
          "evidence": "We just opened a brand new [Discord server for Support and the Community](https://discord.gg/CGeKC6WQQb)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support questions tend to get faster responses in the [support telegram group](https://t",
      "normalized_text": "Support questions tend to get faster responses in the [support telegram group](https://t",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L313",
          "evidence": "That said, support questions tend to get faster responses in the [Support Telegram Group](https://t.me/superalgossupport)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage git conflicts and issues",
      "normalized_text": "Manage git conflicts and issues",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L371",
          "evidence": "Github Desktop is a helpful tool to manage Git conflicts and issues. You can install it using the following link."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run this command in the same directory where the `brewfile` resides:",
      "normalized_text": "Run this command in the same directory where the `brewfile` resides:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L385",
          "evidence": "The second is to use the `Brewfile` included in the code repository. After downloading, run this command in the same directory where the `Brewfile` resides:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run into a bug in safari, you will be asked to reproduce it in chrome as the development team uses chrome",
      "normalized_text": "Run into a bug in safari, you will be asked to reproduce it in chrome as the development team uses chrome",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L391",
          "evidence": "> :white_check_mark: **NOTE**: You can use Safari or Google Chrome as your default browser. If you run into a bug in Safari, you will be asked to reproduce it in Chrome as the development team uses Chrome."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the following command to install required dependencies:",
      "normalized_text": "Run the following command to install required dependencies:",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L402",
          "evidence": "For Debian-based distributions (e.g. Debian, Ubuntu), run the following command to install required dependencies:"
        },
        {
          "url": "https://github.com/Superalgos/Superalgos#L408",
          "evidence": "When using RHEL-oriented distributions (e.g. Fedora, CentOS, Rocky Linux, AlmaLinux), run the following command to install required dependencies:"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "execute successfully and return a version number",
      "normalized_text": "Execute successfully and return a version number",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L430",
          "evidence": "All three commands should execute successfully and return a version number. If the version number of node is < 16, please proceed with the below instructions for [setting up a newer version of Node.js](#installing-newer-versions-of-nodejs). At the time of writing, particularly **Ubuntu users** will need to do these additional steps as the node version shipped with Ubuntu is outdated."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run superalgos on a machine different from a standard pc with x86 chipset, such as on arm-based machines, please ensure to install the additional prerequisites for non-standard chipsets",
      "normalized_text": "Run superalgos on a machine different from a standard pc with x86 chipset, such as on arm-based machines, please ensu...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L432",
          "evidence": "If you want to run Superalgos on a machine different from a standard PC with x86 chipset, such as on ARM-based machines, please ensure to install the [additional prerequisites for non-standard chipsets](#additional-prerequisites-for-non-standard-chipsets)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "execute one of these commands (depending on the availability of curl or wget on your system):",
      "normalized_text": "Execute one of these commands (depending on the availability of curl or wget on your system):",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L437",
          "evidence": "Users of Linux distributions shipping outdated versions of Node.js (e.g. Ubuntu) will need to install a newer version of Node.js manually. We recommend using the Node Version Manager (nvm) to do this. For installing nvm, execute one of these commands (depending on the availability of curl or wget on your system):"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the getting started tutorials, but over time (into 2023) this may significantly slow and could even stop",
      "normalized_text": "Run the getting started tutorials, but over time (into 2023) this may significantly slow and could even stop",
      "category": "Documentation",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L485",
          "evidence": "> :white_check_mark: **NOTE FOR USERS INSTALLING ON COMPUTERS WITH 1GB OF RAM** Superalgos has just about outgrown computers with only 1GB of RAM. For Instance a Raspberry Pi 3 does run the Getting Started Tutorials, but over time (Into 2023) this may significantly slow and could even stop. If still wish to use a computer with only 1GB of RAM (you have been warned), you will need to use version 16.x of Node.js as version 18.x needs well over 1 GB of RAM during setup."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run notebooks for ml/ai algos and turn vscode and windows into a development bench for working with superalgos",
      "normalized_text": "Run notebooks for ml/ai algos and turn vscode and windows into a development bench for working with superalgos",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L531",
          "evidence": "There are a few things that need to be configured to obtain full functionality from VSCode. These configurations will make it possible to run notebooks for ML/AI algos and turn VSCode and Windows into a development bench for working with Superalgos."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow for dockerizing and rapidly deploying as well as editing and managing test/usage cases of superalgos edit and forks you create and contribute",
      "normalized_text": "Allow for dockerizing and rapidly deploying as well as editing and managing test/usage cases of superalgos edit and f...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L543",
          "evidence": "To make managing these WSL instances a lot easier, we will now move to installing VSCode + Tools to allow for Dockerizing and rapidly deploying as well as editing and managing test/usage cases of Superalgos edit and forks you create and contribute."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create and contribute",
      "normalized_text": "Create and contribute",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L543",
          "evidence": "To make managing these WSL instances a lot easier, we will now move to installing VSCode + Tools to allow for Dockerizing and rapidly deploying as well as editing and managing test/usage cases of Superalgos edit and forks you create and contribute."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run dockers for working with superalgos, and more",
      "normalized_text": "Run dockers for working with superalgos, and more",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L558",
          "evidence": "Once the install finishes you can now use VSCode as an interactive IDE/Shell to access SuperAlgos, run Dockers for working with Superalgos, and more."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run it as a daemon so it isn't attached to your current login session",
      "normalized_text": "Run it as a daemon so it isn't attached to your current login session",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L562",
          "evidence": "If you're running Superalgos on a headless Linux server like a Raspberry Pi, you might want to run it as a daemon so it isn't attached to your current login session. The easiest, most standard way to go about this is probably using `systemd`. Most Linux distributions use it as the default init system/service manager."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a `superalgos",
      "normalized_text": "Create a `superalgos",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L564",
          "evidence": "Create a `superalgos.service` file looking like this (change `<user>` to your user name and `/path/to/Superalgos` to your Superalgos folder, for instance `/home/John/Superalgos`):"
        },
        {
          "url": "https://github.com/Superalgos/Superalgos#L585",
          "evidence": "sudo systemctl enable superalgos"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "enable and start the service",
      "normalized_text": "Enable and start the service",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L580",
          "evidence": "There is no need to run Superalgos as root so we're running it as a user. The `minMemo` option assumes you're running on a small machine like a Raspberry Pi, while `noBrowser` makes sense for running daemonized. Now, you'll need to move the file to `/etc/systemd/system/` for it to be recognized. You'll need then to enable and start the service."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run superalgos as root so we're running it as a user",
      "normalized_text": "Run superalgos as root so we're running it as a user",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L580",
          "evidence": "There is no need to run Superalgos as root so we're running it as a user. The `minMemo` option assumes you're running on a small machine like a Raspberry Pi, while `noBrowser` makes sense for running daemonized. Now, you'll need to move the file to `/etc/systemd/system/` for it to be recognized. You'll need then to enable and start the service."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Running Superalgos on a Headless Linux Server as a Daemon",
      "normalized_text": "Running superalgos on a headless linux server as a daemon",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L31",
          "evidence": "- [Running Superalgos on a Headless Linux Server as a Daemon](#small_orange_diamond-running-superalgos-on-a-headless-linux-server-as-a-daemon)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "System requirements | Learn about the minimum hardware required to run the platform on different settings.",
      "normalized_text": "System requirements | learn about the minimum hardware required to run the platform on different settings.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L52",
          "evidence": "* System requirements | Learn about the [minimum hardware](https://superalgos.org/crypto-trading-bots-system-requirements.shtml) required to run the platform on different settings."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*Congratulations Your setup is . Now you may finally run the app for the first time. Please, follow the usage instructions below**",
      "normalized_text": "*congratulations your setup is . now you may finally run the app for the first time. please, follow the usage instruc...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L237",
          "evidence": "**Congratulations! Your setup is complete. Now you may finally run the app for the first time. Please, follow the usage instructions below!**"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Install the remote container and remote docker plugins/extensions for Visual Studio Code https://code.visualstudio.com/docs/remote/containers#_installation",
      "normalized_text": "- install the remote container and remote docker plugins/extensions for visual studio code https://code.visualstudio....",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/Superalgos/Superalgos#L547",
          "evidence": "- Install the remote container and remote docker plugins/extensions for Visual Studio Code [https://code.visualstudio.com/docs/remote/containers#_installation](https://code.visualstudio.com/docs/remote/containers#_installation)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build your own bot using the infinite [configuration](https://www",
      "normalized_text": "Build your own bot using the infinite [configuration](https://www",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L31",
          "evidence": "You can build your own bot using the infinite [configuration](https://www.octobot.cloud/en/guides/octobot-configuration/profile-configuration?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=configuration) possibilities such as  **technical analysis**, **social media processing** or even **external statistics management** like google trends."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "automate your strategies",
      "normalized_text": "Automate your strategies",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L35",
          "evidence": "- Use Technical indicator (TA), artificial intelligence, [ChatGPT predictions](https://www.octobot.cloud/en/blog/trading-using-chat-gpt?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=chatgpt), [TradingView automations](https://www.octobot.cloud/en/guides/octobot-interfaces/tradingview?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=trading-view) or [crypto baskets](https://octobot.cloud/features/crypto-basket?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=crypto-baskets) to automate your strategies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build your ideal cryptocurrency trading robot",
      "normalized_text": "Build your ideal cryptocurrency trading robot",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L37",
          "evidence": "- [Install](https://www.octobot.cloud/en/guides/octobot-advanced-usage/tentacle-manager?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=install_tentacles), [modify](https://www.octobot.cloud/en/guides/octobot-tentacles-development/create-a-tentacle?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=modify_tentacles) and even [create](https://www.octobot.cloud/en/guides/octobot-tentacles-development/create-a-tentacle?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=create_tentacles) new tentacles to build your ideal cryptocurrency trading robot."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "integrate machine-learning libraries such as [tensorflow](https://github",
      "normalized_text": "Integrate machine-learning libraries such as [tensorflow](https://github",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L40",
          "evidence": "[OctoBot is AI ready](https://www.octobot.cloud/features/ai-trading-bot?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=ai-ready): Python being the main language for OctoBot, it's easy to integrate machine-learning libraries such as [Tensorflow](https://github.com/tensorflow/tensorflow) or any other libraries and take advantage of all the available data and create a very powerful trading strategy."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a very trading strategy",
      "normalized_text": "Create a very trading strategy",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L40",
          "evidence": "[OctoBot is AI ready](https://www.octobot.cloud/features/ai-trading-bot?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=ai-ready): Python being the main language for OctoBot, it's easy to integrate machine-learning libraries such as [Tensorflow](https://github.com/tensorflow/tensorflow) or any other libraries and take advantage of all the available data and create a very powerful trading strategy."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run -itd --name octobot -p 80:5001 -v $(pwd)/user:/octobot/user -v $(pwd)/tentacles:/octobot/tentacles -v $(pwd)/logs:/octobot/logs drakkarsoftware/octobot:stable",
      "normalized_text": "Run -itd --name octobot -p 80:5001 -v $(pwd)/user:/octobot/user -v $(pwd)/tentacles:/octobot/tentacles -v $(pwd)/logs...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L57",
          "evidence": "docker run -itd --name OctoBot -p 80:5001 -v $(pwd)/user:/octobot/user -v $(pwd)/tentacles:/octobot/tentacles -v $(pwd)/logs:/octobot/logs drakkarsoftware/octobot:stable"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports many [exchanges](https://www",
      "normalized_text": "Supports many [exchanges](https://www",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L64",
          "evidence": "Octobot supports many [exchanges](https://www.octobot.cloud/en/guides/exchanges?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=exchanges) thanks to the [ccxt library](https://github.com/ccxt/ccxt)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "configure octobot with your api keys as described [on the exchange setup guides](https://www",
      "normalized_text": "Configure octobot with your api keys as described [on the exchange setup guides](https://www",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L65",
          "evidence": "To activate trading on an exchange, just configure OctoBot with your API keys as described [on the exchange setup guides](https://www.octobot.cloud/en/guides/octobot-configuration/exchanges?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=exchanges_setup_guides)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enables you to trade with [simulated money](https://www",
      "normalized_text": "Enables you to trade with [simulated money](https://www",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L69",
          "evidence": "To trade on any exchange, just activate the exchange in your OctoBot. This enables you to trade with [simulated money](https://www.octobot.cloud/en/guides/octobot-usage/simulator?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=paper-trading) on this exchange."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enables you to trade with simulated money using historical exchange data",
      "normalized_text": "Enables you to trade with simulated money using historical exchange data",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L97",
          "evidence": "OctoBot comes with its [built-in backtesting engine](https://www.octobot.cloud/en/guides/octobot-usage/backtesting?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=backtesting) which enables you to trade with simulated money using historical exchange data."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allowing us to develop the new features of octobot under the best conditions",
      "normalized_text": "Allowing us to develop the new features of octobot under the best conditions",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L135",
          "evidence": "<td>Thank you <a href=\"https://www.jetbrains.com\" target=\"_blank\">JetBrains</a> with PyCharm Pro for allowing us to develop the new features of OctoBot under the best conditions.</td>"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Create, backtest and optimize your unique trading strategy from scratch or using the existing strategy bases.",
      "normalized_text": "Create, backtest and optimize your unique trading strategy from scratch or using the existing strategy bases.",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L34",
          "evidence": "- Create, backtest and optimize your unique trading strategy from scratch or using the existing [strategy bases](https://www.octobot.cloud/en/guides/octobot-trading-modes/trading-modes?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=strategy-bases)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Use Technical indicator (TA), artificial intelligence, ChatGPT predictions, TradingView automations or crypto baskets to automate your strategies.",
      "normalized_text": "Use technical indicator (ta), artificial intelligence, chatgpt predictions, tradingview automations or crypto baskets...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L35",
          "evidence": "- Use Technical indicator (TA), artificial intelligence, [ChatGPT predictions](https://www.octobot.cloud/en/blog/trading-using-chat-gpt?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=chatgpt), [TradingView automations](https://www.octobot.cloud/en/guides/octobot-interfaces/tradingview?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=trading-view) or [crypto baskets](https://octobot.cloud/features/crypto-basket?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=crypto-baskets) to automate your strategies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Trade any crypto on SPOT and Futures markets on more than 15 supported exchanges.",
      "normalized_text": "Trade any crypto on spot and futures markets on more than 15 supported exchanges.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L36",
          "evidence": "- Trade any crypto on SPOT and Futures markets on more than [15 supported exchanges](https://www.octobot.cloud/en/guides/exchanges?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=exchanges)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Install, modify and even create new tentacles to build your ideal cryptocurrency trading robot.",
      "normalized_text": "Install, modify and even create new tentacles to build your ideal cryptocurrency trading robot.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Drakkar-Software/OctoBot#L37",
          "evidence": "- [Install](https://www.octobot.cloud/en/guides/octobot-advanced-usage/tentacle-manager?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=install_tentacles), [modify](https://www.octobot.cloud/en/guides/octobot-tentacles-development/create-a-tentacle?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=modify_tentacles) and even [create](https://www.octobot.cloud/en/guides/octobot-tentacles-development/create-a-tentacle?utm_source=github&utm_medium=dk&utm_campaign=regular_open_source_content&utm_content=create_tentacles) new tentacles to build your ideal cryptocurrency trading robot."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- What includes these strategies?",
      "normalized_text": "- what includes these strategies?",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L28",
          "evidence": "- [What includes these strategies?](#what-includes-these-strategies)"
        },
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L68",
          "evidence": "### What includes these strategies?"
        },
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L28",
          "evidence": "- [What includes these strategies?](#what-includes-these-strategies)"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "run your own backtests that mirror your usecase, to evaluate each strategy for yourself",
      "normalized_text": "Run your own backtests that mirror your usecase, to evaluate each strategy for yourself",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L52",
          "evidence": "Please keep in mind, results will heavily depend on the pairs, timeframe and timerange used to backtest - so please run your own backtests that mirror your usecase, to evaluate each strategy for yourself."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "[x] Indicators: Includes the indicators required to run the strategy.",
      "normalized_text": "[x] indicators: includes the indicators required to run the strategy.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L76",
          "evidence": "- [x] **Indicators**: Includes the indicators required to run the strategy."
        },
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L76",
          "evidence": "- [x] **Indicators**: Includes the indicators required to run the strategy."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run the strategy",
      "normalized_text": "Run the strategy",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L76",
          "evidence": "- [x] **Indicators**: Includes the indicators required to run the strategy."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the bot with the parameter `--strategy <strategy class name>` (ex: `freqtrade trade --strategy strategy001`)",
      "normalized_text": "Run the bot with the parameter `--strategy <strategy class name>` (ex: `freqtrade trade --strategy strategy001`)",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L90",
          "evidence": "4. Run the bot with the parameter `--strategy <STRATEGY CLASS NAME>` (ex: `freqtrade trade --strategy Strategy001`)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- How to create/optimize a strategy?",
      "normalized_text": "- how to create/optimize a strategy?",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/freqtrade/freqtrade-strategies#L31",
          "evidence": "- [How to create/optimize a strategy?](https://www.freqtrade.io/en/latest/strategy-customization/)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "configure or hardcode your own trading strategies in your own machine,<br />",
      "normalized_text": "Configure or hardcode your own trading strategies in your own machine,<br />",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L13",
          "evidence": "If you don't want to configure or hardcode your own trading strategies in your own machine,<br />"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build status](https://github",
      "normalized_text": "Build status](https://github",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L20",
          "evidence": "[![Build Status](https://github.com/ctubio/Krypto-trading-bot/workflows/test/badge.svg)](https://github.com/ctubio/Krypto-trading-bot/actions)"
        },
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L3",
          "evidence": "[![Build Status](https://github.com/Haehnchen/crypto-trading-bot/actions/workflows/node.js.yml/badge.svg)](https://github.com/Haehnchen/crypto-trading-bot/actions/workflows/node.js.yml)"
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L3",
          "evidence": "[![Build Status](https://github.com/thrasher-corp/gocryptotrader/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/thrasher-corp/gocryptotrader/actions/workflows/tests.yml)"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "run on unix-like systems",
      "normalized_text": "Run on unix-like systems",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L27",
          "evidence": "Our bots run on unix-like systems. Persistence is achieved through a built-in server-less SQLite C++ interface.<br>Data transfers are directly done from your machine to the exchange using the latest CURL and OpenSSL versions.<br>Installation in a dedicated [Debian](https://cdimage.debian.org/cdimage/release/current/), [Raspberry](https://www.raspberrypi.com/software/), [Red Hat](https://developers.redhat.com/products/rhel/download), [CentOS](https://www.centos.org/download/) or macOS instance without Docker is recommended."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build notes](#build-notes))",
      "normalized_text": "Build notes](#build-notes))",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L94",
          "evidence": "- [Build notes](#build-notes)"
        },
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L198",
          "evidence": "To not upgrade but instead recompile your own modified source files, use `make lib K` or just `make` (see [Build notes](#build-notes))."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "execute the installer:",
      "normalized_text": "Execute the installer:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L120",
          "evidence": "2. Download it wherever you want (feel free to customize the suggested folder name K) and execute the installer:"
        },
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L140",
          "evidence": "2. Download it wherever you want (feel free to customize the suggested folder name K) and execute the installer:"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "customize the suggested folder name k) and execute the installer:",
      "normalized_text": "Customize the suggested folder name k) and execute the installer:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L120",
          "evidence": "2. Download it wherever you want (feel free to customize the suggested folder name K) and execute the installer:"
        },
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L140",
          "evidence": "2. Download it wherever you want (feel free to customize the suggested folder name K) and execute the installer:"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run `make reinstall`",
      "normalized_text": "Run `make reinstall`",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L153",
          "evidence": "To upgrade anytime to the latest release just run `make reinstall`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "execute it to start the bot:",
      "normalized_text": "Execute it to start the bot:",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L161",
          "evidence": "Once your config file is ready, you can execute it to start the bot:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run all at once with `make start screen`])",
      "normalized_text": "Run all at once with `make start screen`])",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L166",
          "evidence": "Alternatively use `make start` to run `K.sh` in the background using [screen](https://kb.iu.edu/d/acuy) (to see the output, attach the screen with `make screen` [or run all at once with `make start screen`])."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run `make stop` or `make restart` anytime, and don't forget to [read the fucking manual](https://github",
      "normalized_text": "Run `make stop` or `make restart` anytime, and don't forget to [read the fucking manual](https://github",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L168",
          "evidence": "Feel free to run `make stop` or `make restart` anytime, and don't forget to [read the fucking manual](https://github.com/ctubio/Krypto-trading-bot/blob/master/doc/MANUAL.md)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate your own certificate see [ssl for internal usage](https://www",
      "normalized_text": "Generate your own certificate see [ssl for internal usage](https://www",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L180",
          "evidence": "* Use your own SSL certificate with `--ssl-crt` and `--ssl-key` arguments.<br>Otherwise, the insecure built-in certificate is fully featured, but you may need to authorise it in your browser.<br>If you want to generate your own certificate see [SSL for internal usage](https://www.akadia.com/services/ssh_test_certificate.html).<br>In case you really want to use plain HTTP, use `--without-ssl` argument."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run `make reinstall` to download the upgraded source and executable files",
      "normalized_text": "Run `make reinstall` to download the upgraded source and executable files",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L188",
          "evidence": "Please run `make reinstall` to download the upgraded source and executable files."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "execute `make upgrade` (or directly `make reinstall` to skip the validation of new commits)",
      "normalized_text": "Execute `make upgrade` (or directly `make reinstall` to skip the validation of new commits)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L194",
          "evidence": "Once you decide that it is time to upgrade, execute `make upgrade` (or directly `make reinstall` to skip the validation of new commits)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run as many instances as `*",
      "normalized_text": "Run as many instances as `*",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L202",
          "evidence": "Please note, an \"instance\" is in fact a `*.sh` config file; using a single machine with a single installation, you can run as many instances as `*.sh` files you have (limited by the available free RAM)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run multiple instances using a collection of config files:",
      "normalized_text": "Run multiple instances using a collection of config files:",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L208",
          "evidence": "To run multiple instances using a collection of config files:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a new config file with `cp etc/k",
      "normalized_text": "Create a new config file with `cp etc/k",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L210",
          "evidence": "1. Create a new config file with `cp etc/K.sh.dist X.sh && chmod +x X.sh` (use `X.sh` or any name but keep `.sh` extension)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the new instance with `",
      "normalized_text": "Run the new instance with `",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L214",
          "evidence": "3. Run the new instance with `./X.sh` or to run in the background, use `K=X.sh make start`. To attach to the new instance's screen, use `K=X.sh make screen`. To stop the new instance, use `K=X.sh make stop` and to restart it, use `K=X.sh make restart`. The environment variable `K` specifies the filename of the config file that you want to use."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run in the background, use `k=x",
      "normalized_text": "Run in the background, use `k=x",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L214",
          "evidence": "3. Run the new instance with `./X.sh` or to run in the background, use `K=X.sh make start`. To attach to the new instance's screen, use `K=X.sh make screen`. To stop the new instance, use `K=X.sh make stop` and to restart it, use `K=X.sh make restart`. The environment variable `K` specifies the filename of the config file that you want to use."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create it on boot; otherwise, it will use the existing one",
      "normalized_text": "Create it on boot; otherwise, it will use the existing one",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L240",
          "evidence": "If a database does not exist, the application will create it on boot; otherwise, it will use the existing one."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support team, servers)",
      "normalized_text": "Support team, servers)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L266",
          "evidence": "If you ask me, [<img height=\"20px\" src=\"https://user-images.githubusercontent.com/1634027/29756933-3e64c62e-8ba8-11e7-916a-3b0ae1481a52.png\">](https://www.dreamhost.com/r.cgi?475987/cloud/) is a very nice web hosting company (awesome support team, awesome servers). Feel free to use this referral link to get a discount subtracted from my referral earnings (i'm a user since 2008)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides all dependencies without errors",
      "normalized_text": "Provides all dependencies without errors",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L270",
          "evidence": "Make sure your build machine has [node](https://nodejs.org/en/download/package-manager/) installed, also ensure `make lib` provides all dependencies without errors."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build machine has [node](https://nodejs",
      "normalized_text": "Build machine has [node](https://nodejs",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L270",
          "evidence": "Make sure your build machine has [node](https://nodejs.org/en/download/package-manager/) installed, also ensure `make lib` provides all dependencies without errors."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "execute the application in the foreground with `--naked` argument",
      "normalized_text": "Execute the application in the foreground with `--naked` argument",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L280",
          "evidence": "To pipe the output to stdout, execute the application in the foreground with `--naked` argument."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build chain for win32",
      "normalized_text": "Build chain for win32",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L324",
          "evidence": "Added build chain for win32."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build chain for osx v10",
      "normalized_text": "Build chain for osx v10",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L328",
          "evidence": "Added build chain for OSX v10.13."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for multiple instances/config files with nested matryoshka ui",
      "normalized_text": "Support for multiple instances/config files with nested matryoshka ui",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L364",
          "evidence": "Added support for multiple instances/config files with nested matryoshka UI."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support further development by ctubio, keep running some old commit and do not upgrade (any commit prior to v0",
      "normalized_text": "Support further development by ctubio, keep running some old commit and do not upgrade (any commit prior to v0",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L406",
          "evidence": "Otherwise if you choose to not support further development by ctubio, just keep running some old commit and do not upgrade (any commit prior to v0.3.0 was completely unlocked)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generates with `--free-version`; it is relative to your trading strategy, the market conditions, and the bot's performance",
      "normalized_text": "Generates with `--free-version`; it is relative to your trading strategy, the market conditions, and the bot's perfor...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L408",
          "evidence": "Please don't open issues asking how much % less the bot generates with `--free-version`; it is relative to your trading strategy, the market conditions, and the bot's performance."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "* Use your own SSL certificate with `--ssl-crt` and `--ssl-key` arguments.<br>Otherwise, the insecure built-in certificate is fully featured, but you may need to authorise it in your browser.<br>If you want to generate your own certificate see SSL for internal usage.<br>In case you really want to use plain HTTP, use `--without-ssl` argument.",
      "normalized_text": "* use your own ssl certificate with `--ssl-crt` and `--ssl-key` arguments.<br>otherwise, the insecure built-in certif...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/ctubio/Krypto-trading-bot#L180",
          "evidence": "* Use your own SSL certificate with `--ssl-crt` and `--ssl-key` arguments.<br>Otherwise, the insecure built-in certificate is fully featured, but you may need to authorise it in your browser.<br>If you want to generate your own certificate see [SSL for internal usage](https://www.akadia.com/services/ssh_test_certificate.html).<br>In case you really want to use plain HTTP, use `--without-ssl` argument."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Fully use Websocket for exchange communication to react as fast as possible on market",
      "normalized_text": "Fully use websocket for exchange communication to react as fast as possible on market",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L12",
          "evidence": "- Fully use Websocket for exchange communication to react as fast as possible on market"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Multi pair support in one instance",
      "normalized_text": "Multi pair support in one instance",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L13",
          "evidence": "- Multi pair support in one instance"
        },
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L13",
          "evidence": "- Multi pair support in one instance"
        },
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L13",
          "evidence": "- Multi pair support in one instance"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "sqlite3 storage for candles, tickers, ...",
      "normalized_text": "Sqlite3 storage for candles, tickers, ...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L14",
          "evidence": "- sqlite3 storage for candles, tickers, ..."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Webserver UI",
      "normalized_text": "Webserver ui",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L15",
          "evidence": "- Webserver UI"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Support for going \"Short\" and \"Long\"",
      "normalized_text": "Support for going \"short\" and \"long\"",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L16",
          "evidence": "- Support for going \"Short\" and \"Long\""
        },
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L16",
          "evidence": "- Support for going \"Short\" and \"Long\""
        },
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L16",
          "evidence": "- Support for going \"Short\" and \"Long\""
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "Signal browser dashboard for pairs",
      "normalized_text": "Signal browser dashboard for pairs",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L17",
          "evidence": "- Signal browser dashboard for pairs"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Slack and email notification",
      "normalized_text": "Slack and email notification",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L18",
          "evidence": "- Slack and email notification"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Join foreign exchange candles (eg. Trade on Bitmex with the faster moving Binance trades / candles)",
      "normalized_text": "Join foreign exchange candles (eg. trade on bitmex with the faster moving binance trades / candles)",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L19",
          "evidence": "- Join foreign exchange candles (eg. Trade on Bitmex with the faster moving Binance trades / candles)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide basic buy and sell signals they provide many stuff to get profitable eg exchange orders like stop-losses or stop-limits are not supported by main bots",
      "normalized_text": "Provide basic buy and sell signals they provide many stuff to get profitable eg exchange orders like stop-losses or s...",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L6",
          "evidence": "As most trading bots just provide basic buy and sell signals they provide many stuff to get profitable eg exchange orders like stop-losses or stop-limits are not supported by main bots. Also the limitation of fixed timeframe and technical indicators must be broken"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supporting all nodejs version",
      "normalized_text": "Supporting all nodejs version",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L64",
          "evidence": "Also the build from source is not supporting all nodejs version. It looks like versions <= 10 are working. You can use nodejs 12 if you compiled it once via older version."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build from source is not supporting all nodejs version",
      "normalized_text": "Build from source is not supporting all nodejs version",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L64",
          "evidence": "Also the build from source is not supporting all nodejs version. It looks like versions <= 10 are working. You can use nodejs 12 if you compiled it once via older version."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create instance file for pairs and changes",
      "normalized_text": "Create instance file for pairs and changes",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L73",
          "evidence": "Create instance file for pairs and changes"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide a configuration with your exchange credentials",
      "normalized_text": "Provide a configuration with your exchange credentials",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L79",
          "evidence": "Provide a configuration with your exchange credentials"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a new sqlite database use bot",
      "normalized_text": "Create a new sqlite database use bot",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L85",
          "evidence": "Create a new sqlite database use bot.sql scheme to create the tables"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create the tables",
      "normalized_text": "Create the tables",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L85",
          "evidence": "Create a new sqlite database use bot.sql scheme to create the tables"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a bot for telegram",
      "normalized_text": "Create a bot for telegram",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L111",
          "evidence": "First, you'll need to create a bot for Telegram. Just talk to [BotFather](https://telegram.me/botfather) and follow simple steps until it gives you a token for it."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a telegram group, the place where you and crypto-trading-bot will communicate",
      "normalized_text": "Create a telegram group, the place where you and crypto-trading-bot will communicate",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L112",
          "evidence": "You'll also need to create a Telegram group, the place where you and crypto-trading-bot will communicate. After creating it, add the bot as administrator (make sure to uncheck \"All Members Are Admins\")."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides basic auth for access you should combine some with eh a https for public server",
      "normalized_text": "Provides basic auth for access you should combine some with eh a https for public server",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L153",
          "evidence": "As the webserver provides just basic auth for access you should combine some with eh a https for public server. Here s simple `proxy_pass` for nginx."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "include /etc/letsencrypt/options-ssl-nginx",
      "normalized_text": "Include /etc/letsencrypt/options-ssl-nginx",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L167",
          "evidence": "include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build in strategies",
      "normalized_text": "Build in strategies",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L201",
          "evidence": "## Build In Strategies"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`stoploss` provide general stoploss order in percent of entry price (Exchange Order)",
      "normalized_text": "`stoploss` provide general stoploss order in percent of entry price (exchange order)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L229",
          "evidence": "- `stoploss` provide general stoploss order in percent of entry price (Exchange Order)"
        },
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L229",
          "evidence": "- `stoploss` provide general stoploss order in percent of entry price (Exchange Order)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "`risk_reward_ratio` Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)",
      "normalized_text": "`risk_reward_ratio` creates risk reward order for take profit and stoploss (exchange order limit+stop)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L230",
          "evidence": "- `risk_reward_ratio` Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)"
        },
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L230",
          "evidence": "- `risk_reward_ratio` Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support stop_loss order liek binance",
      "normalized_text": "Support stop_loss order liek binance",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L231",
          "evidence": "- `stoploss_watch` Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow the bot to trade you need to give some \"playing capital\"",
      "normalized_text": "Allow the bot to trade you need to give some \"playing capital\"",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L286",
          "evidence": "To allow the bot to trade you need to give some \"playing capital\". You can allow to by via asset or currency amount, see examples below."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow to by via asset or currency amount, see examples below",
      "normalized_text": "Allow to by via asset or currency amount, see examples below",
      "category": "Documentation",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L286",
          "evidence": "To allow the bot to trade you need to give some \"playing capital\". You can allow to by via asset or currency amount, see examples below."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide one of them, first wins",
      "normalized_text": "Provide one of them, first wins",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L287",
          "evidence": "You should only provide one of them, first wins."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process after the application started",
      "normalized_text": "Process after the application started",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L321",
          "evidence": "Inside logs, visible via browser ui, you can double check the strategies init process after the application started."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run \"dip_catcher\" now every 15",
      "normalized_text": "Run \"dip_catcher\" now every 15",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L326",
          "evidence": "[info] \"binance_futures\" - \"BTCUSDT\" - \"trade\" first strategy run \"dip_catcher\" now every 15.00 minutes"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Order & Pair Management: http://127.0.0.1:8080/pairs",
      "normalized_text": "Order & pair management: http://127.0.0.1:8080/pairs",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L149",
          "evidence": "- Order & Pair Management: http://127.0.0.1:8080/pairs"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`stoploss_watch` Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance",
      "normalized_text": "`stoploss_watch` close open position if ticker price falls below the percent lose; use this for exchange that dont su...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L231",
          "evidence": "- `stoploss_watch` Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`trailing_stop` Use native exchange trailing stop; if supported by exchange eg `Bitfinex`",
      "normalized_text": "`trailing_stop` use native exchange trailing stop; if supported by exchange eg `bitfinex`",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Haehnchen/crypto-trading-bot#L232",
          "evidence": "- `trailing_stop` Use native exchange trailing stop; if supported by exchange eg `Bitfinex`"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off.",
      "normalized_text": "Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L53",
          "evidence": "+ Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L53",
          "evidence": "+ Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L53",
          "evidence": "+ Support for all exchange fiat and digital currencies, with the ability to individually toggle them on/off."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "AES256 encrypted config file.",
      "normalized_text": "Aes256 encrypted config file.",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L54",
          "evidence": "+ AES256 encrypted config file."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Websocket support for applicable exchanges.",
      "normalized_text": "Websocket support for applicable exchanges.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L55",
          "evidence": "+ REST API support for all exchanges."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L56",
          "evidence": "+ Websocket support for applicable exchanges."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L55",
          "evidence": "+ REST API support for all exchanges."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L55",
          "evidence": "+ REST API support for all exchanges."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L56",
          "evidence": "+ Websocket support for applicable exchanges."
        }
      ],
      "frequency": 5,
      "uniqueness_score": 0.2
    },
    {
      "text": "Ability to turn off/on certain exchanges.",
      "normalized_text": "Ability to turn off/on certain exchanges.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L57",
          "evidence": "+ Ability to turn off/on certain exchanges."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Communication packages (Slack, SMS via SMSGlobal, Telegram and SMTP).",
      "normalized_text": "Communication packages (slack, sms via smsglobal, telegram and smtp).",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L58",
          "evidence": "+ Communication packages (Slack, SMS via SMSGlobal, Telegram and SMTP)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "HTTP rate limiter package.",
      "normalized_text": "Http rate limiter package.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L59",
          "evidence": "+ HTTP rate limiter package."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Unified API for exchange usage.",
      "normalized_text": "Unified api for exchange usage.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L60",
          "evidence": "+ Unified API for exchange usage."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Customisation of HTTP client features including setting a proxy, user agent and adjusting transport settings.",
      "normalized_text": "Customisation of http client features including setting a proxy, user agent and adjusting transport settings.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L61",
          "evidence": "+ Customisation of HTTP client features including setting a proxy, user agent and adjusting transport settings."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "NTP client package.",
      "normalized_text": "Ntp client package.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L62",
          "evidence": "+ NTP client package."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Database support (Postgres and SQLite3). See database.",
      "normalized_text": "Database support (postgres and sqlite3). see database.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L63",
          "evidence": "+ Database support (Postgres and SQLite3). See [database](/database/README.md)."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L63",
          "evidence": "+ Database support (Postgres and SQLite3). See [database](/database/README.md)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "OTP generation tool. See gen otp.",
      "normalized_text": "Otp generation tool. see gen otp.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L64",
          "evidence": "+ OTP generation tool. See [gen otp](/cmd/gen_otp)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Connection monitor package.",
      "normalized_text": "Connection monitor package.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L65",
          "evidence": "+ Connection monitor package."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L65",
          "evidence": "+ Connection monitor package."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "gRPC service and JSON RPC proxy. See gRPC service.",
      "normalized_text": "Grpc service and json rpc proxy. see grpc service.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L66",
          "evidence": "+ gRPC service and JSON RPC proxy. See [gRPC service](/gctrpc/README.md)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "gRPC client. See gctcli.",
      "normalized_text": "Grpc client. see gctcli.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L67",
          "evidence": "+ gRPC client. See [gctcli](/cmd/gctcli/README.md)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Forex currency converter packages (CurrencyConverterAPI, CurrencyLayer, Exchange Rates, Fixer.io, OpenExchangeRates, Exchange Rate Host).",
      "normalized_text": "Forex currency converter packages (currencyconverterapi, currencylayer, exchange rates, fixer.io, openexchangerates, ...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L68",
          "evidence": "+ Forex currency converter packages (CurrencyConverterAPI, CurrencyLayer, Exchange Rates, Fixer.io, OpenExchangeRates, Exchange Rate Host)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Packages for handling currency pairs, tickers and orderbooks.",
      "normalized_text": "Packages for handling currency pairs, tickers and orderbooks.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L69",
          "evidence": "+ Packages for handling currency pairs, tickers and orderbooks."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking.",
      "normalized_text": "Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L70",
          "evidence": "+ Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L70",
          "evidence": "+ Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "Basic event trigger system.",
      "normalized_text": "Basic event trigger system.",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L71",
          "evidence": "+ Basic event trigger system."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "OHLCV/Candle retrieval support. See OHLCV.",
      "normalized_text": "Ohlcv/candle retrieval support. see ohlcv.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L72",
          "evidence": "+ OHLCV/Candle retrieval support. See [OHLCV](/docs/OHLCV.md)."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L72",
          "evidence": "+ OHLCV/Candle retrieval support. See [OHLCV](/docs/OHLCV.md)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "Scripting support. See gctscript.",
      "normalized_text": "Scripting support. see gctscript.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L73",
          "evidence": "+ Scripting support. See [gctscript](/gctscript/README.md)."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L73",
          "evidence": "+ Scripting support. See [gctscript](/gctscript/README.md)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "Recent and historic trade processing. See trades.",
      "normalized_text": "Recent and historic trade processing. see trades.",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L74",
          "evidence": "+ Recent and historic trade processing. See [trades](/exchanges/trade/README.md)."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L74",
          "evidence": "+ Recent and historic trade processing. See [trades](/exchanges/trade/README.md)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "Backtesting application. An event-driven backtesting tool to test and iterate trading strategies using historical or custom data. See backtester.",
      "normalized_text": "Backtesting application. an event-driven backtesting tool to test and iterate trading strategies using historical or ...",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L75",
          "evidence": "+ Backtesting application. An event-driven backtesting tool to test and iterate trading strategies using historical or custom data. See [backtester](/backtester/README.md)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Exchange HTTP mock testing. See mock.",
      "normalized_text": "Exchange http mock testing. see mock.",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L76",
          "evidence": "+ Exchange HTTP mock testing. See [mock](/exchanges/mock/README.md)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Exchange multichain deposits and withdrawals for specific exchanges. See multichain transfer support.",
      "normalized_text": "Exchange multichain deposits and withdrawals for specific exchanges. see multichain transfer support.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L77",
          "evidence": "+ Exchange multichain deposits and withdrawals for specific exchanges. See [multichain transfer support](/docs/MULTICHAIN_TRANSFER_SUPPORT.md)."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L77",
          "evidence": "+ Exchange multichain deposits and withdrawals for specific exchanges. See [multichain transfer support](/docs/MULTICHAIN_TRANSFER_SUPPORT.md)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "supporting multiple exchanges written in golang",
      "normalized_text": "Supporting multiple exchanges written in golang",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L9",
          "evidence": "A cryptocurrency trading bot supporting multiple exchanges written in Golang."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support the top 30 exchanges sorted by average liquidity as [ranked by coinmarketcap](https://coinmarketcap",
      "normalized_text": "Support the top 30 exchanges sorted by average liquidity as [ranked by coinmarketcap](https://coinmarketcap",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L46",
          "evidence": "We are aiming to support the top 30 exchanges sorted by average liquidity as [ranked by CoinMarketCap](https://coinmarketcap.com/rankings/exchanges/)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support the feature",
      "normalized_text": "Support the feature",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L49",
          "evidence": "** NA means not applicable as the exchange does not support the feature."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for applicable exchanges",
      "normalized_text": "Support for applicable exchanges",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L56",
          "evidence": "+ Websocket support for applicable exchanges."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support (postgres and sqlite3)",
      "normalized_text": "Support (postgres and sqlite3)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L63",
          "evidence": "+ Database support (Postgres and SQLite3). See [database](/database/README.md)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allows for custom address tracking",
      "normalized_text": "Allows for custom address tracking",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L70",
          "evidence": "+ Portfolio management tool; fetches balances from supported exchanges and allows for custom address tracking."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides updates on:",
      "normalized_text": "Provides updates on:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L81",
          "evidence": "Our [Kanban board](https://github.com/orgs/thrasher-corp/projects/3) provides updates on:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Run the `gocryptotrader` binary file.",
      "normalized_text": "Run the `gocryptotrader` binary file.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L121",
          "evidence": "+ Run the `gocryptotrader` binary file."
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L121",
          "evidence": "+ Run the `gocryptotrader` binary file."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "enable sonic, build with the sonic_on tag:",
      "normalized_text": "Enable sonic, build with the sonic_on tag:",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L128",
          "evidence": "To enable sonic, build with the sonic_on tag:"
        },
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L128",
          "evidence": "To enable sonic, build with the sonic_on tag:"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "build -tags=sonic_on",
      "normalized_text": "Build -tags=sonic_on",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L131",
          "evidence": "go build -tags=sonic_on"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support the developers working on it, please donate bitcoin to:",
      "normalized_text": "Support the developers working on it, please donate bitcoin to:",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L138",
          "evidence": "If this framework helped you in any way, or you would like to support the developers working on it, please donate Bitcoin to:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "* NA means not applicable as the exchange does not support the feature.",
      "normalized_text": "* na means not applicable as the exchange does not support the feature.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/thrasher-corp/gocryptotrader#L49",
          "evidence": "** NA means not applicable as the exchange does not support the feature."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create new](https://www",
      "normalized_text": "Create new](https://www",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/yasinkuyu/binance-trader#L11",
          "evidence": "3. Go API Center, [Create New](https://www.binance.com/en/my/settings/api-management?ref=10701111) Api Key"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable trading [x] enable withdrawals",
      "normalized_text": "Enable trading [x] enable withdrawals",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/yasinkuyu/binance-trader#L13",
          "evidence": "[\u2713] Read Info [\u2713] Enable Trading [X] Enable Withdrawals"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run as an excutable application in docker containers",
      "normalized_text": "Run as an excutable application in docker containers",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/yasinkuyu/binance-trader#L27",
          "evidence": "7. Optional: run as an excutable application in Docker containers"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import threading",
      "normalized_text": "Import threading",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/yasinkuyu/binance-trader#L43",
          "evidence": "import threading"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run in a docker container",
      "normalized_text": "Run in a docker container",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/yasinkuyu/binance-trader#L102",
          "evidence": "## Run in a Docker container"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a new pull request",
      "normalized_text": "Create a new pull request",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/yasinkuyu/binance-trader#L120",
          "evidence": "Create a new Pull Request"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Stop-Loss implementation",
      "normalized_text": "- stop-loss implementation",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/yasinkuyu/binance-trader#L144",
          "evidence": "- Stop-Loss implementation"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build and deploy quantitative models for stocks, crypto, and forex \ud83d\ude80</b>",
      "normalized_text": "Build and deploy quantitative models for stocks, crypto, and forex \ud83d\ude80</b>",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/blankly-finance/blankly#L11",
          "evidence": "<b>\ud83d\udca8  Rapidly build and deploy quantitative models for stocks, crypto, and forex  \ud83d\ude80</b>"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run live by changing a single line",
      "normalized_text": "Run live by changing a single line",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/blankly-finance/blankly#L39",
          "evidence": "Blankly is an ecosystem for algotraders enabling anyone to build, monetize and scale their trading algorithms for stocks, crypto, futures or forex. The same code can be backtested, paper traded, sandbox tested and run live by simply changing a single line. Develop locally then deploy, iterate and share using the blankly platform."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import alpaca, coinbasepro",
      "normalized_text": "Import alpaca, coinbasepro",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/blankly-finance/blankly#L56",
          "evidence": "from blankly import Alpaca, CoinbasePro"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "perform the same actions across exchanges & asset types",
      "normalized_text": "Perform the same actions across exchanges & asset types",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/blankly-finance/blankly#L62",
          "evidence": "# Easily perform the same actions across exchanges & asset types"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run your model live",
      "normalized_text": "Run your model live",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/blankly-finance/blankly#L115",
          "evidence": "Seamlessly run your model live!"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create the files `keys",
      "normalized_text": "Create the files `keys",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/blankly-finance/blankly#L142",
          "evidence": "The command will create the files `keys.json`, `settings.json`, `backtest.json`, `blankly.json` and an example script called `bot.py`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implement strategies such as rsi, macd, and the golden cross found in our [examples](https://docs",
      "normalized_text": "Implement strategies such as rsi, macd, and the golden cross found in our [examples](https://docs",
      "category": "Documentation",
      "sources": [
        {
          "url": "https://github.com/blankly-finance/blankly#L199",
          "evidence": "We have a pre-built cookbook examples that implement strategies such as RSI, MACD, and the Golden Cross found in our [examples](https://docs.blankly.finance/examples/golden-cross)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support the project, pull requests are welcome",
      "normalized_text": "Support the project, pull requests are welcome",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/blankly-finance/blankly#L217",
          "evidence": "If you would like to support the project, pull requests are welcome."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run your bots for you",
      "normalized_text": "Run your bots for you",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/whittlem/pycryptobot#L12",
          "evidence": "2. Don't let anyone run your bots for you."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support in the discussions",
      "normalized_text": "Support in the discussions",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/whittlem/pycryptobot#L17",
          "evidence": "## Ask your questions and get support in the discussions"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support my efforts is to follow me on medium and chap my articles",
      "normalized_text": "Support my efforts is to follow me on medium and chap my articles",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/whittlem/pycryptobot#L23",
          "evidence": "I get paid to write on Medium. Readers following me, applauding and commenting on my articles, all helps with my earnings. I provided this bot to all of you for free and actively develop it. One way you can support my efforts is to follow me on Medium and chap my articles. The Medium subscription is $5 a month (roughly \u00a33) so basically nothing in terms of the value you are getting from the bot. Your efforts there would be greatly appreciated!"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for 100+ exchanges via ccxt",
      "normalized_text": "Support for 100+ exchanges via ccxt",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L15",
          "evidence": "[OpenTrader](https://github.com/bludnic/opentrader) is a self-hosted cryptocurrency trading bot, featuring built-in and highly customizable strategies, integration with technical indicators, high-frequency trading, and cross-exchange trading with support for 100+ exchanges via CCXT."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "\ud83d\udee0\ufe0f CUSTOM: Build your own strategy in a few lines of code.",
      "normalized_text": "\ud83d\udee0\ufe0f custom: build your own strategy in a few lines of code.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L30",
          "evidence": "- \ud83d\udee0\ufe0f [CUSTOM](https://github.com/Open-Trader/custom-strategy): Build your own strategy in just a few lines of code."
        },
        {
          "url": "https://github.com/Open-Trader/opentrader#L30",
          "evidence": "- \ud83d\udee0\ufe0f [CUSTOM](https://github.com/Open-Trader/custom-strategy): Build your own strategy in just a few lines of code."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support means a lot and motivates me to keep improving the bot",
      "normalized_text": "Support means a lot and motivates me to keep improving the bot",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L34",
          "evidence": "This project is a personal passion, developed in my free time. If you find it useful, please give it a \u2b50\ufe0f. Your support means a lot and motivates me to keep improving the bot. If you'd like to make a [donation](#Donate), see the options below. \ud83d\udc96"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support its development, consider making a donation",
      "normalized_text": "Support its development, consider making a donation",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L38",
          "evidence": "If you find OpenTrader useful and would like to support its development, consider making a donation. Your contributions will help cover the costs of maintaining and improving this project."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run your crypto trading bot",
      "normalized_text": "Run your crypto trading bot",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L62",
          "evidence": "Get started with OpenTrader in just a few steps. Follow this quick guide to install, configure, and run your crypto trading bot."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run `opentrader down`",
      "normalized_text": "Run `opentrader down`",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L89",
          "evidence": "> **Tip**: Use `opentrader up -d` to start the app as a daemon. To stop it, run `opentrader down`."
        },
        {
          "url": "https://github.com/Open-Trader/opentrader#L151",
          "evidence": "> To stop the live trading, run `opentrader stop`"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "allows managing multiple bots and strategies, viewing backtest results, and monitoring live trading",
      "normalized_text": "Allows managing multiple bots and strategies, viewing backtest results, and monitoring live trading",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L95",
          "evidence": "The user interface allows managing multiple bots and strategies, viewing backtest results, and monitoring live trading."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "monitoring live trading",
      "normalized_text": "Monitoring live trading",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L95",
          "evidence": "The user interface allows managing multiple bots and strategies, viewing backtest results, and monitoring live trading."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create the strategy configuration file `config",
      "normalized_text": "Create the strategy configuration file `config",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/Open-Trader/opentrader#L111",
          "evidence": "Create the strategy configuration file `config.json5`. We will use the `grid` strategy as an example."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide an overview on the most mentioned coin across all the headlines",
      "normalized_text": "Provide an overview on the most mentioned coin across all the headlines",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/CyberPunkMetalHead/Binance-News-Sentiment-Bot#L6",
          "evidence": "Provide an overview on the most mentioned coin across all the headlines"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "[x] Backtesting",
      "normalized_text": "[x] backtesting",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L101",
          "evidence": "- [x] Backtesting"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [x] Paper Wallet (Live Trading with fake wallet)",
      "normalized_text": "- [x] paper wallet (live trading with fake wallet)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L102",
          "evidence": "- [x] Paper Wallet (Live Trading with fake wallet)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [x] Load Feed from CSV",
      "normalized_text": "- [x] load feed from csv",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L103",
          "evidence": "- [x] Load Feed from CSV"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [x] Order Limit, Market, Stop Limit, OCO",
      "normalized_text": "- [x] order limit, market, stop limit, oco",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L104",
          "evidence": "- [x] Order Limit, Market, Stop Limit, OCO"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "[x] Bot Utilities",
      "normalized_text": "[x] bot utilities",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L106",
          "evidence": "- [x] Bot Utilities"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [x] CLI to download historical data",
      "normalized_text": "- [x] cli to download historical data",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L107",
          "evidence": "- [x] CLI to download historical data"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [x] Plot (Candles + Sell / Buy orders, Indicators)",
      "normalized_text": "- [x] plot (candles + sell / buy orders, indicators)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L108",
          "evidence": "- [x] Plot (Candles + Sell / Buy orders, Indicators)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [x] Telegram Controller (Status, Buy, Sell, and Notification)",
      "normalized_text": "- [x] telegram controller (status, buy, sell, and notification)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L109",
          "evidence": "- [x] Telegram Controller (Status, Buy, Sell, and Notification)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [x] Heikin Ashi candle type support",
      "normalized_text": "- [x] heikin ashi candle type support",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L110",
          "evidence": "- [x] Heikin Ashi candle type support"
        },
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L110",
          "evidence": "- [x] Heikin Ashi candle type support"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "- [x] Trailing stop tool",
      "normalized_text": "- [x] trailing stop tool",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L111",
          "evidence": "- [x] Trailing stop tool"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [x] In app order scheduler",
      "normalized_text": "- [x] in app order scheduler",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L112",
          "evidence": "- [x] In app order scheduler"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create and test custom strategies for spot and futures market",
      "normalized_text": "Create and test custom strategies for spot and futures market",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L9",
          "evidence": "A fast cryptocurrency trading bot framework implemented in Go. Ninjabot permits users to create and test custom strategies for spot and futures market."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build binaries in [release page](https://github",
      "normalized_text": "Build binaries in [release page](https://github",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L33",
          "evidence": "- Pre-build binaries in [release page](https://github.com/rodrigo-brito/ninjabot/releases)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run examples/backtesting/main",
      "normalized_text": "Run examples/backtesting/main",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L46",
          "evidence": "go run examples/backtesting/main.go"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- [ ] Include Web UI Controller",
      "normalized_text": "- [ ] include web ui controller",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L115",
          "evidence": "- [ ] Include Web UI Controller"
        },
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L115",
          "evidence": "- [ ] Include Web UI Controller"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "include more chart indicators - [details](https://github",
      "normalized_text": "Include more chart indicators - [details](https://github",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L116",
          "evidence": "- [ ] Include more chart indicators - [Details](https://github.com/rodrigo-brito/ninjabot/issues/110)"
        },
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L116",
          "evidence": "- [ ] Include more chart indicators - [Details](https://github.com/rodrigo-brito/ninjabot/issues/110)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "include support for other exchanges, you need to implement a new `struct` that implements the interface `exchange`",
      "normalized_text": "Include support for other exchanges, you need to implement a new `struct` that implements the interface `exchange`",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L120",
          "evidence": "Currently, we only support [Binance](https://www.binance.com/en?ref=35723227) exchange. If you want to include support for other exchanges, you need to implement a new `struct` that implements the interface `Exchange`. You can check some examples in [exchange](exchange) directory."
        },
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L120",
          "evidence": "Currently, we only support [Binance](https://www.binance.com/en?ref=35723227) exchange. If you want to include support for other exchanges, you need to implement a new `struct` that implements the interface `Exchange`. You can check some examples in [exchange](exchange) directory."
        },
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L120",
          "evidence": "Currently, we only support [Binance](https://www.binance.com/en?ref=35723227) exchange. If you want to include support for other exchanges, you need to implement a new `struct` that implements the interface `Exchange`. You can check some examples in [exchange](exchange) directory."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "Pre-build binaries in release page",
      "normalized_text": "Pre-build binaries in release page",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/rodrigo-brito/ninjabot#L33",
          "evidence": "- Pre-build binaries in [release page](https://github.com/rodrigo-brito/ninjabot/releases)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Exchange abstraction interface.",
      "normalized_text": "Exchange abstraction interface.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L41",
          "evidence": "- Exchange abstraction interface."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Stream integration (user data web socket, market data web socket).",
      "normalized_text": "Stream integration (user data web socket, market data web socket).",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L42",
          "evidence": "- Stream integration (user data web socket, market data web socket)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Real-time orderBook integration through a web socket.",
      "normalized_text": "Real-time orderbook integration through a web socket.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L43",
          "evidence": "- Real-time orderBook integration through a web socket."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "TWAP order execution support. See TWAP Order Execution",
      "normalized_text": "Twap order execution support. see twap order execution",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L44",
          "evidence": "- TWAP order execution support. See [TWAP Order Execution](./doc/topics/twap.md)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L44",
          "evidence": "- TWAP order execution support. See [TWAP Order Execution](./doc/topics/twap.md)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "PnL calculation.",
      "normalized_text": "Pnl calculation.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L45",
          "evidence": "- PnL calculation."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Slack/Telegram notification.",
      "normalized_text": "Slack/telegram notification.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L46",
          "evidence": "- Slack/Telegram notification."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Back-testing: KLine-based back-testing engine. See Back-testing",
      "normalized_text": "Back-testing: kline-based back-testing engine. see back-testing",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L47",
          "evidence": "- Back-testing: KLine-based back-testing engine. See [Back-testing](./doc/topics/back-testing.md)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Built-in parameter optimization tool.",
      "normalized_text": "Built-in parameter optimization tool.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L48",
          "evidence": "- Built-in parameter optimization tool."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Built-in Grid strategy and many other built-in strategies.",
      "normalized_text": "Built-in grid strategy and many other built-in strategies.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L49",
          "evidence": "- Built-in Grid strategy and many other built-in strategies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Multi-exchange session support: you can connect to more than 2 exchanges with different accounts or subaccounts.",
      "normalized_text": "Multi-exchange session support: you can connect to more than 2 exchanges with different accounts or subaccounts.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L50",
          "evidence": "- Multi-exchange session support: you can connect to more than 2 exchanges with different accounts or subaccounts."
        },
        {
          "url": "https://github.com/c9s/bbgo#L50",
          "evidence": "- Multi-exchange session support: you can connect to more than 2 exchanges with different accounts or subaccounts."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "Indicators with interface similar",
      "normalized_text": "Indicators with interface similar",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L51",
          "evidence": "- Indicators with interface similar"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Accumulation/Distribution Indicator",
      "normalized_text": "- accumulation/distribution indicator",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L53",
          "evidence": "- [Accumulation/Distribution Indicator](./pkg/indicator/ad.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Arnaud Legoux Moving Average",
      "normalized_text": "- arnaud legoux moving average",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L54",
          "evidence": "- [Arnaud Legoux Moving Average](./pkg/indicator/alma.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Average True Range",
      "normalized_text": "- average true range",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L55",
          "evidence": "- [Average True Range](./pkg/indicator/atr.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Bollinger Bands",
      "normalized_text": "- bollinger bands",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L56",
          "evidence": "- [Bollinger Bands](./pkg/indicator/boll.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Commodity Channel Index",
      "normalized_text": "- commodity channel index",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L57",
          "evidence": "- [Commodity Channel Index](./pkg/indicator/cci.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Cumulative Moving Average",
      "normalized_text": "- cumulative moving average",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L58",
          "evidence": "- [Cumulative Moving Average](./pkg/indicator/cma.go)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L64",
          "evidence": "- [Hull Moving Average](./pkg/indicator/hull.go)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L71",
          "evidence": "- [Simple Moving Average](./pkg/indicator/sma.go)"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "- Exponentially Weighted Moving Average",
      "normalized_text": "- exponentially weighted moving average",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L59",
          "evidence": "- [Double Exponential Moving Average](./pkg/indicator/dema.go)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L63",
          "evidence": "- [Exponentially Weighted Moving Average](./pkg/indicator/ewma.go)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L75",
          "evidence": "- [Triple Exponential Moving Average](./pkg/indicator/tema.go)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L81",
          "evidence": "- [Zero Lag Exponential Moving Average](./pkg/indicator/zlema.go)"
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "- Directional Movement Index",
      "normalized_text": "- directional movement index",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L60",
          "evidence": "- [Directional Movement Index](./pkg/indicator/dmi.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Brownian Motion's Drift Factor",
      "normalized_text": "- brownian motion's drift factor",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L61",
          "evidence": "- [Brownian Motion's Drift Factor](./pkg/indicator/drift.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Ease of Movement",
      "normalized_text": "- ease of movement",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L62",
          "evidence": "- [Ease of Movement](./pkg/indicator/emv.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Trend Line (Tool)",
      "normalized_text": "- trend line (tool)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L65",
          "evidence": "- [Trend Line (Tool)](./pkg/indicator/line.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Moving Average Convergence Divergence Indicator",
      "normalized_text": "- moving average convergence divergence indicator",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L66",
          "evidence": "- [Moving Average Convergence Divergence Indicator](./pkg/indicator/macd.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- On-Balance Volume",
      "normalized_text": "- on-balance volume",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L67",
          "evidence": "- [On-Balance Volume](./pkg/indicator/obv.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Triangular Moving Average",
      "normalized_text": "- triangular moving average",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L69",
          "evidence": "- [Running Moving Average](./pkg/indicator/rma.go)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L77",
          "evidence": "- [Triangular Moving Average](./pkg/indicator/tma.go)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L69",
          "evidence": "- [Running Moving Average](./pkg/indicator/rma.go)"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "- Relative Strength Index",
      "normalized_text": "- relative strength index",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L70",
          "evidence": "- [Relative Strength Index](./pkg/indicator/rsi.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Ehler's Super Smoother Filter",
      "normalized_text": "- ehler's super smoother filter",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L72",
          "evidence": "- [Ehler's Super Smoother Filter](./pkg/indicator/ssf.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Stochastic Oscillator",
      "normalized_text": "- stochastic oscillator",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L73",
          "evidence": "- [Stochastic Oscillator](./pkg/indicator/stoch.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- SuperTrend",
      "normalized_text": "- supertrend",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L74",
          "evidence": "- [SuperTrend](./pkg/indicator/supertrend.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Tillson T3 Moving Average",
      "normalized_text": "- tillson t3 moving average",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L76",
          "evidence": "- [Tillson T3 Moving Average](./pkg/indicator/till.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Variable Index Dynamic Average",
      "normalized_text": "- variable index dynamic average",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L78",
          "evidence": "- [Variable Index Dynamic Average](./pkg/indicator/vidya.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Volatility Indicator",
      "normalized_text": "- volatility indicator",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L79",
          "evidence": "- [Volatility Indicator](./pkg/indicator/volatility.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- Volume Weighted Average Price",
      "normalized_text": "- volume weighted average price",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L80",
          "evidence": "- [Volume Weighted Average Price](./pkg/indicator/vwap.go)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- And more...",
      "normalized_text": "- and more...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L82",
          "evidence": "- And more..."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "HeikinAshi OHLC / Normal OHLC (check this config)",
      "normalized_text": "Heikinashi ohlc / normal ohlc (check this config)",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L83",
          "evidence": "- HeikinAshi OHLC / Normal OHLC (check [this config](https://github.com/c9s/bbgo/blob/main/config/skeleton.yaml#L5))"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "React-powered Web Dashboard.",
      "normalized_text": "React-powered web dashboard.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L84",
          "evidence": "- React-powered Web Dashboard."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Docker image ready.",
      "normalized_text": "Docker image ready.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L85",
          "evidence": "- Docker image ready."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Kubernetes support.",
      "normalized_text": "Kubernetes support.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L86",
          "evidence": "- Kubernetes support."
        },
        {
          "url": "https://github.com/c9s/bbgo#L86",
          "evidence": "- Kubernetes support."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "Helm chart ready.",
      "normalized_text": "Helm chart ready.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L87",
          "evidence": "- Helm chart ready."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "High precision float point (up to 16 digits, run with `-tags dnum`).",
      "normalized_text": "High precision float point (up to 16 digits, run with `-tags dnum`).",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L88",
          "evidence": "- High precision float point (up to 16 digits, run with `-tags dnum`)."
        },
        {
          "url": "https://github.com/c9s/bbgo#L88",
          "evidence": "- High precision float point (up to 16 digits, run with `-tags dnum`)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run the built-in strategies",
      "normalized_text": "Run the built-in strategies",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L28",
          "evidence": "You can use BBGO to run the built-in strategies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implement your own strategies",
      "normalized_text": "Implement your own strategies",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L32",
          "evidence": "You can use BBGO's trading unit and back-test unit to implement your own strategies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports 4+ major exchanges, so you don't have to repeat",
      "normalized_text": "Supports 4+ major exchanges, so you don't have to repeat",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L36",
          "evidence": "You can use BBGO's underlying common exchange API; currently, it supports 4+ major exchanges, so you don't have to repeat"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run with `-tags dnum`)",
      "normalized_text": "Run with `-tags dnum`)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L88",
          "evidence": "- High precision float point (up to 16 digits, run with `-tags dnum`)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides more flexibility, but you need to prepare inventories | maker | |",
      "normalized_text": "Provides more flexibility, but you need to prepare inventories | maker | |",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L100",
          "evidence": "| grid        | the first generation grid strategy, it provides more flexibility, but you need to prepare inventories                                   | maker      |                  |"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports base+quote mode | maker | |",
      "normalized_text": "Supports base+quote mode | maker | |",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L101",
          "evidence": "| grid2       | the second generation grid strategy, it can convert your quote asset into a grid, supports base+quote mode                              | maker      |                  |"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implements a basic grid strategy with the built-in bollinger indicator | maker | |",
      "normalized_text": "Implements a basic grid strategy with the built-in bollinger indicator | maker | |",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L102",
          "evidence": "| bollgrid    | strategy implements a basic grid strategy with the built-in bollinger indicator                                                         | maker      |                  |"
        },
        {
          "url": "https://github.com/c9s/bbgo#L399",
          "evidence": "- `bollgrid` strategy implements a basic grid strategy with the built-in bollinger"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "creates a wall (large amount of order) on the order book | maker | no |",
      "normalized_text": "Creates a wall (large amount of order) on the order book | maker | no |",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L112",
          "evidence": "| wall        | this strategy creates a wall (large amount of order) on the order book                                                                       | maker      | no               |"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implements a strategy that rebalances the portfolio based on the market capitalization | rebalance | no |",
      "normalized_text": "Implements a strategy that rebalances the portfolio based on the market capitalization | rebalance | no |",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L116",
          "evidence": "| marketcap   | this strategy implements a strategy that rebalances the portfolio based on the market capitalization                                    | rebalance  | no               |"
        },
        {
          "url": "https://github.com/c9s/bbgo#L409",
          "evidence": "- `marketcap` strategy implements a strategy that rebalances the portfolio based on the market"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support decimals with higher precision",
      "normalized_text": "Support decimals with higher precision",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L187",
          "evidence": "Since v2, we've added a new float point implementation from dnum to support decimals with higher precision. To download &"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allows you to one-click deploy a lightweight instance with bbgo",
      "normalized_text": "Allows you to one-click deploy a lightweight instance with bbgo",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L192",
          "evidence": "StackScript allows you to one-click deploy a lightweight instance with bbgo."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build from source](",
      "normalized_text": "Build from source](",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L202",
          "evidence": "### Build from source"
        },
        {
          "url": "https://github.com/c9s/bbgo#L204",
          "evidence": "See [Build from source](./doc/build-from-source.md)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run --enable-webserver",
      "normalized_text": "Run --enable-webserver",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L257",
          "evidence": "bbgo run --enable-webserver"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides the script for unix systems/subsystems to synchronize date with binance",
      "normalized_text": "Provides the script for unix systems/subsystems to synchronize date with binance",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L284",
          "evidence": "BBGO provides the script for UNIX systems/subsystems to synchronize date with Binance. `jq` and `bc` are required to be"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports binance testnet",
      "normalized_text": "Supports binance testnet",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L302",
          "evidence": "Currently only supports Binance testnet. To run bbgo in testnet, apply new API keys"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run bbgo in testnet, apply new api keys",
      "normalized_text": "Run bbgo in testnet, apply new api keys",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L302",
          "evidence": "Currently only supports Binance testnet. To run bbgo in testnet, apply new API keys"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "export paper_trade=1",
      "normalized_text": "Export paper_trade=1",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L306",
          "evidence": "export PAPER_TRADE=1"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "export disable_market_cache=1 # the symbols supported in testnet is far less than the mainnet",
      "normalized_text": "Export disable_market_cache=1 # the symbols supported in testnet is far less than the mainnet",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L307",
          "evidence": "export DISABLE_MARKET_CACHE=1 # the symbols supported in testnet is far less than the mainnet"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "configure sqlite3 database",
      "normalized_text": "Configure sqlite3 database",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L327",
          "evidence": "#### Configure MySQL Database"
        },
        {
          "url": "https://github.com/c9s/bbgo#L354",
          "evidence": "#### Configure Sqlite3 Database"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run it in docker](https://hub",
      "normalized_text": "Run it in docker](https://hub",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L339",
          "evidence": "Or [run it in docker](https://hub.docker.com/_/mysql)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create your mysql database:",
      "normalized_text": "Create your mysql database:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L341",
          "evidence": "Create your mysql database:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create database bbgo charset utf8\"",
      "normalized_text": "Create database bbgo charset utf8\"",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L344",
          "evidence": "mysql -uroot -e \"CREATE DATABASE bbgo CHARSET utf8\""
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "configure sync for private trading data](",
      "normalized_text": "Configure sync for private trading data](",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L367",
          "evidence": "See [Configure Sync For Private Trading Data](./doc/configuration/sync.md)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`grid` strategy implements the fixed price band grid strategy grid. See",
      "normalized_text": "`grid` strategy implements the fixed price band grid strategy grid. see",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L401",
          "evidence": "- `grid` strategy implements the fixed price band grid strategy [grid](pkg/strategy/grid). See"
        },
        {
          "url": "https://github.com/c9s/bbgo#L401",
          "evidence": "- `grid` strategy implements the fixed price band grid strategy [grid](pkg/strategy/grid). See"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "`flashcrash` strategy implements a strategy that catches the flashcrash flashcrash",
      "normalized_text": "`flashcrash` strategy implements a strategy that catches the flashcrash flashcrash",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L408",
          "evidence": "- `flashcrash` strategy implements a strategy that catches the flashcrash [flashcrash](pkg/strategy/flashcrash)"
        },
        {
          "url": "https://github.com/c9s/bbgo#L408",
          "evidence": "- `flashcrash` strategy implements a strategy that catches the flashcrash [flashcrash](pkg/strategy/flashcrash)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run these built-in strategies, modify the config file to make the configuration suitable for you, for example, if",
      "normalized_text": "Run these built-in strategies, modify the config file to make the configuration suitable for you, for example, if",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L417",
          "evidence": "To run these built-in strategies, just modify the config file to make the configuration suitable for you, for example, if"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run bbgo with the config",
      "normalized_text": "Run bbgo with the config",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L424",
          "evidence": "# run bbgo with the config"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run --config config/buyandhold",
      "normalized_text": "Run --config config/buyandhold",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L425",
          "evidence": "bbgo run --config config/buyandhold.yaml"
        },
        {
          "url": "https://github.com/c9s/bbgo#L480",
          "evidence": "dotenv -f .env.local -- bbgo run --config config/bbgo.yaml"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "create your go package, initialize the repository with `go mod`, and add bbgo as a dependency:",
      "normalized_text": "Create your go package, initialize the repository with `go mod`, and add bbgo as a dependency:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L438",
          "evidence": "Create your go package, initialize the repository with `go mod`, and add bbgo as a dependency:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run `bbgo run` command, bbgo will compile a wrapper binary that imports your strategy:",
      "normalized_text": "Run `bbgo run` command, bbgo will compile a wrapper binary that imports your strategy:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L477",
          "evidence": "Run `bbgo run` command, bbgo will compile a wrapper binary that imports your strategy:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "imports your strategy:",
      "normalized_text": "Imports your strategy:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L477",
          "evidence": "Run `bbgo run` command, bbgo will compile a wrapper binary that imports your strategy:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build your own wrapper binary via:",
      "normalized_text": "Build your own wrapper binary via:",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L483",
          "evidence": "Or you can build your own wrapper binary via:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build --config config/bbgo",
      "normalized_text": "Build --config config/bbgo",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L486",
          "evidence": "bbgo build --config config/bbgo.yaml"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports dynamic dependency injection",
      "normalized_text": "Supports dynamic dependency injection",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L533",
          "evidence": "In order to minimize the strategy code, bbgo supports dynamic dependency injection."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a branch and start your development",
      "normalized_text": "Create a branch and start your development",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L603",
          "evidence": "4. Create a branch and start your development."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implement the strategy for",
      "normalized_text": "Implement the strategy for",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L631",
          "evidence": "You can write an article about BBGO on any topic, in 750-1500 words for exchange, and I can implement the strategy for"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support a new crypto exchange that is not included in the current bbgo, we can implement it for you",
      "normalized_text": "Support a new crypto exchange that is not included in the current bbgo, we can implement it for you",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L637",
          "evidence": "If you want BBGO to support a new crypto exchange that is not included in the current BBGO, we can implement it for you."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implement it for you",
      "normalized_text": "Implement it for you",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L637",
          "evidence": "If you want BBGO to support a new crypto exchange that is not included in the current BBGO, we can implement it for you."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support the development of bbgo, we have created a bounty pool to support contributors by giving away $bbg tokens",
      "normalized_text": "Support the development of bbgo, we have created a bounty pool to support contributors by giving away $bbg tokens",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L658",
          "evidence": "To support the development of BBGO, we have created a bounty pool to support contributors by giving away $BBG tokens."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*Notice**: SQLite is not fully supported, we recommend you use MySQL instead of SQLite.",
      "normalized_text": "*notice**: sqlite is not fully supported, we recommend you use mysql instead of sqlite.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L325",
          "evidence": "**Notice**: SQLite is not fully supported, we recommend you use MySQL instead of SQLite."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`bollgrid` strategy implements a basic grid strategy with the built-in bollinger",
      "normalized_text": "`bollgrid` strategy implements a basic grid strategy with the built-in bollinger",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L399",
          "evidence": "- `bollgrid` strategy implements a basic grid strategy with the built-in bollinger"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`support` strategy uses K-lines with high volume as support support. See",
      "normalized_text": "`support` strategy uses k-lines with high volume as support support. see",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L406",
          "evidence": "- `support` strategy uses K-lines with high volume as support [support](pkg/strategy/support). See"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`marketcap` strategy implements a strategy that rebalances the portfolio based on the market",
      "normalized_text": "`marketcap` strategy implements a strategy that rebalances the portfolio based on the market",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L409",
          "evidence": "- `marketcap` strategy implements a strategy that rebalances the portfolio based on the market"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "<https://github.com/narumiruna/bbgo-marketcap>",
      "normalized_text": "<https://github.com/narumiruna/bbgo-marketcap>",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/c9s/bbgo#L491",
          "evidence": "- <https://github.com/narumiruna/bbgo-template>"
        },
        {
          "url": "https://github.com/c9s/bbgo#L492",
          "evidence": "- <https://github.com/narumiruna/bbgo-marketcap>"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    }
  ],
  "categories": {
    "Automation & AI": 63,
    "Uncategorized": 218,
    "Developer Tools": 30,
    "User Interface": 59,
    "Performance": 7,
    "Configuration": 24,
    "Core Functionality": 16,
    "Integration & APIs": 34,
    "Community": 3,
    "Security & Privacy": 3,
    "Documentation": 4
  }
}