{
  "metadata": {
    "topic": "Authentication libraries",
    "generated_at": "2025-10-29T15:55:45.906076",
    "repositories_analyzed": 15,
    "total_features": 562,
    "unique_features": 384,
    "deduplication_rate": 0.3167259786476868
  },
  "repositories": [
    {
      "name": "casbin/casbin",
      "url": "https://github.com/casbin/casbin",
      "stars": 19328,
      "language": "Go",
      "features": [
        {
          "text": "support for enforcing authorization based on various [access control models](https://en",
          "source_url": "https://github.com/casbin/casbin#L16",
          "evidence": "Casbin is a powerful and efficient open-source access control library for Golang projects. It provides support for enforcing authorization based on various [access control models](https://en.wikipedia.org/wiki/Computer_security_model)."
        },
        {
          "text": "provides support for enforcing authorization based on various [access control models](https://en",
          "source_url": "https://github.com/casbin/casbin#L16",
          "evidence": "Casbin is a powerful and efficient open-source access control library for Golang projects. It provides support for enforcing authorization based on various [access control models](https://en.wikipedia.org/wiki/Computer_security_model)."
        },
        {
          "text": "build auth with fraud prevention, faster",
          "source_url": "https://github.com/casbin/casbin#L28",
          "evidence": "<a href=\"https://stytch.com/docs?utm_source=oss-sponsorship&utm_medium=paid_sponsorship&utm_campaign=casbin\"><b>Build auth with fraud prevention, faster.</b><br/> Try Stytch for API-first authentication, user & org management, multi-tenant SSO, MFA, device fingerprinting, and more.</a>"
        },
        {
          "text": "supports paths like ``/res/*``, ``/res/:id`` and http methods like ``get``, ``post``, ``put``, ``delete``",
          "source_url": "https://github.com/casbin/casbin#L73",
          "evidence": "8. **[RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer)**: supports paths like ``/res/*``, ``/res/:id`` and HTTP methods like ``GET``, ``POST``, ``PUT``, ``DELETE``."
        },
        {
          "text": "allow and deny authorizations are supported, deny overrides the allow",
          "source_url": "https://github.com/casbin/casbin#L74",
          "evidence": "9. **Deny-override**: both allow and deny authorizations are supported, deny overrides the allow."
        },
        {
          "text": "customize your own access control model by combining the available models",
          "source_url": "https://github.com/casbin/casbin#L79",
          "evidence": "In Casbin, an access control model is abstracted into a CONF file based on the **PERM metamodel (Policy, Effect, Request, Matchers)**. So switching or upgrading the authorization mechanism for a project is just as simple as modifying a configuration. You can customize your own access control model by combining the available models. For example, you can get RBAC roles and ABAC attributes together inside one model and share one set of policy rules."
        },
        {
          "text": "support multi-line mode by appending '\\\\'  in the end:",
          "source_url": "https://github.com/casbin/casbin#L114",
          "evidence": "We also support multi-line mode by appending '\\\\'  in the end:"
        },
        {
          "text": "allow and deny authorizations are supported",
          "source_url": "https://github.com/casbin/casbin#L139",
          "evidence": "1. enforce the policy in the classic ``{subject, object, action}`` form or a customized form as you defined, both allow and deny authorizations are supported."
        },
        {
          "text": "handle the storage of the access control model and its policy",
          "source_url": "https://github.com/casbin/casbin#L140",
          "evidence": "2. handle the storage of the access control model and its policy."
        },
        {
          "text": "manage the role-user mappings and role-role mappings (aka role hierarchy in rbac)",
          "source_url": "https://github.com/casbin/casbin#L141",
          "evidence": "3. manage the role-user mappings and role-role mappings (aka role hierarchy in RBAC)."
        },
        {
          "text": "support built-in superuser like ``root`` or ``administrator``",
          "source_url": "https://github.com/casbin/casbin#L142",
          "evidence": "4. support built-in superuser like ``root`` or ``administrator``. A superuser can do anything without explicit permissions."
        },
        {
          "text": "support the rule matching",
          "source_url": "https://github.com/casbin/casbin#L143",
          "evidence": "5. multiple built-in operators to support the rule matching. For example, ``keyMatch`` can map a resource key ``/foo/bar`` to the pattern ``/foo*``."
        },
        {
          "text": "manage the list of users or roles",
          "source_url": "https://github.com/casbin/casbin#L148",
          "evidence": "2. manage the list of users or roles. I believe it's more convenient for the project itself to manage these entities. Users usually have their passwords, and Casbin is not designed as a password container. However, Casbin stores the user-role mapping for the RBAC scenario."
        },
        {
          "text": "manage these entities",
          "source_url": "https://github.com/casbin/casbin#L148",
          "evidence": "2. manage the list of users or roles. I believe it's more convenient for the project itself to manage these entities. Users usually have their passwords, and Casbin is not designed as a password container. However, Casbin stores the user-role mapping for the RBAC scenario."
        },
        {
          "text": "provides functionality such as ``syntax highlighting`` and ``code completion``, just like an ide for a programming language",
          "source_url": "https://github.com/casbin/casbin#L162",
          "evidence": "You can also use the online editor (https://casbin.org/editor/) to write your Casbin model and policy in your web browser. It provides functionality such as ``syntax highlighting`` and ``code completion``, just like an IDE for a programming language."
        },
        {
          "text": "performs on the resource",
          "source_url": "https://github.com/casbin/casbin#L183",
          "evidence": "act := \"read\" // the operation that the user performs on the resource."
        },
        {
          "text": "provides api for permission management at run-time",
          "source_url": "https://github.com/casbin/casbin#L192",
          "evidence": "3. Besides the static policy file, Casbin also provides API for permission management at run-time. For example, You can get all the roles assigned to a user as below:"
        },
        {
          "text": "provides two sets of apis to manage permissions:",
          "source_url": "https://github.com/casbin/casbin#L202",
          "evidence": "Casbin provides two sets of APIs to manage permissions:"
        },
        {
          "text": "manage permissions:",
          "source_url": "https://github.com/casbin/casbin#L202",
          "evidence": "Casbin provides two sets of APIs to manage permissions:"
        },
        {
          "text": "support for casbin policy management",
          "source_url": "https://github.com/casbin/casbin#L204",
          "evidence": "- [Management API](https://casbin.org/docs/management-api): the primitive API that provides full support for Casbin policy management."
        },
        {
          "text": "provides full support for casbin policy management",
          "source_url": "https://github.com/casbin/casbin#L204",
          "evidence": "- [Management API](https://casbin.org/docs/management-api): the primitive API that provides full support for Casbin policy management."
        },
        {
          "text": "provide a [web-based ui](https://casbin",
          "source_url": "https://github.com/casbin/casbin#L207",
          "evidence": "We also provide a [web-based UI](https://casbin.org/docs/admin-portal) for model management and policy management:"
        },
        {
          "text": "support this project by becoming a sponsor",
          "source_url": "https://github.com/casbin/casbin#L270",
          "evidence": "Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/casbin#sponsor)]"
        },
        {
          "text": "Supported models",
          "source_url": "https://github.com/casbin/casbin#L46",
          "evidence": "- [Supported models](#supported-models)"
        },
        {
          "text": "Policy management",
          "source_url": "https://github.com/casbin/casbin#L54",
          "evidence": "- [Policy management](#policy-management)"
        },
        {
          "text": "Management API: the primitive API that provides full support for Casbin policy management.",
          "source_url": "https://github.com/casbin/casbin#L204",
          "evidence": "- [Management API](https://casbin.org/docs/management-api): the primitive API that provides full support for Casbin policy management."
        },
        {
          "text": "RBAC API: a more friendly API for RBAC. This API is a subset of Management API. The RBAC users could use this API to simplify the code.",
          "source_url": "https://github.com/casbin/casbin#L205",
          "evidence": "- [RBAC API](https://casbin.org/docs/rbac-api): a more friendly API for RBAC. This API is a subset of Management API. The RBAC users could use this API to simplify the code."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "googleapis/google-api-nodejs-client",
      "url": "https://github.com/googleapis/google-api-nodejs-client",
      "stars": 11968,
      "language": "TypeScript",
      "features": [
        {
          "text": "support for authorization and authentication with oauth 2",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L9",
          "evidence": "[Node.js][node] client library for using Google APIs. Support for authorization and authentication with OAuth 2.0, API Keys and JWT tokens is included."
        },
        {
          "text": "support and maintenance",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L46",
          "evidence": "### Support and maintenance"
        },
        {
          "text": "supports the maintenance lts, active lts, and current release of node",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L49",
          "evidence": "This library supports the maintenance LTS, active LTS, and current release of node.js.  See the [node.js release schedule](https://github.com/nodejs/Release) for more information."
        },
        {
          "text": "run the following command in your terminal:",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L54",
          "evidence": "This library is distributed on `npm`. In order to add it as a dependency, run the following command in your terminal:"
        },
        {
          "text": "run the following sample command in your terminal, replacing with your preferred api:",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L60",
          "evidence": "If you need to reduce startup times, you can alternatively install a submodule as its own dependency. We make an effort to publish submodules that are __not__ in this [list](https://github.com/googleapis/google-cloud-node#google-cloud-nodejs-client-libraries). In order to add it as a dependency, run the following sample command in your terminal, replacing with your preferred API:"
        },
        {
          "text": "run [this search](https://www",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L66",
          "evidence": "You can run [this search](https://www.npmjs.com/search?q=scope%3A@googleapis) on `npm`, to find a list of the submodules available."
        },
        {
          "text": "creates a blogger client and retrieves the details of a blog given the blog id:",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L69",
          "evidence": "This is a very simple example. This creates a Blogger client and retrieves the details of a blog given the blog Id:"
        },
        {
          "text": "support multiple versions",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L74",
          "evidence": "// Each API may support multiple versions. With this sample, we're getting"
        },
        {
          "text": "support all authentication methods, while others may only support one or two",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L152",
          "evidence": "There are multiple ways to authenticate to Google APIs. Some services support all authentication methods, while others may only support one or two."
        },
        {
          "text": "provides your application with authorization against a set of scopes",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L154",
          "evidence": "- **OAuth2** - This allows you to make API calls on behalf of a given user.  In this model, the user visits your application, signs in with their Google account, and provides your application with authorization against a set of scopes.  [Learn more](#oauth2-client)."
        },
        {
          "text": "allows you to make api calls on behalf of a given user",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L154",
          "evidence": "- **OAuth2** - This allows you to make API calls on behalf of a given user.  In this model, the user visits your application, signs in with their Google account, and provides your application with authorization against a set of scopes.  [Learn more](#oauth2-client)."
        },
        {
          "text": "provides automatic access to google apis using the [google cloud sdk](https://cloud",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L158",
          "evidence": "- **Application default credentials** - Provides automatic access to Google APIs using the [Google Cloud SDK](https://cloud.google.com/sdk/) for local development, or the [GCE Metadata Server](https://cloud.google.com/compute/docs/storing-retrieving-metadata) for applications deployed to Google Cloud Platform. [Learn more](#application-default-credentials)."
        },
        {
          "text": "allows you to retrieve an access token, refresh it, and retry the request seamlessly",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L165",
          "evidence": "This module comes with an [OAuth2][oauth] client that allows you to retrieve an access token, refresh it, and retry the request seamlessly. The basics of Google's OAuth2 implementation is explained on [Google Authorization and Authentication documentation][authdocs]."
        },
        {
          "text": "create a new oauth2 client id](https://console",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L168",
          "evidence": "- Navigate to the Cloud Console and [Create a new OAuth2 Client Id](https://console.cloud.google.com/apis/credentials/oauthclient)"
        },
        {
          "text": "create a consent page url:",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L182",
          "evidence": "To ask for permissions from a user to retrieve an access token, you redirect them to a consent page. To create a consent page URL:"
        },
        {
          "text": "generate a url that asks permissions for blogger and google calendar scopes",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L193",
          "evidence": "// generate a url that asks permissions for Blogger and Google Calendar scopes"
        },
        {
          "text": "provide an object with the access_token and refresh_token",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L222",
          "evidence": "// This will provide an object with the access_token and refresh_token."
        },
        {
          "text": "handle the case where a refresh token is no longer working",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L261",
          "evidence": "As a developer, you should write your code to handle the case where a refresh token is no longer working."
        },
        {
          "text": "create the correct credential type for you, depending upon the environment your code is running under",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L290",
          "evidence": "Rather than manually creating an OAuth2 client, JWT client, or Compute client, the auth library can create the correct credential type for you, depending upon the environment your code is running under."
        },
        {
          "text": "allow you to perform server-to-server, app-level authentication using a robot account",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L326",
          "evidence": "Service accounts allow you to perform server-to-server, app-level authentication using a robot account. You will create a service account, download a keyfile, and use that to authenticate to Google APIs. To create a service account:"
        },
        {
          "text": "create a service account, download a keyfile, and use that to authenticate to google apis",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L326",
          "evidence": "Service accounts allow you to perform server-to-server, app-level authentication using a robot account. You will create a service account, download a keyfile, and use that to authenticate to Google APIs. To create a service account:"
        },
        {
          "text": "create a service account:",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L326",
          "evidence": "Service accounts allow you to perform server-to-server, app-level authentication using a robot account. You will create a service account, download a keyfile, and use that to authenticate to Google APIs. To create a service account:"
        },
        {
          "text": "perform server-to-server, app-level authentication using a robot account",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L326",
          "evidence": "Service accounts allow you to perform server-to-server, app-level authentication using a robot account. You will create a service account, download a keyfile, and use that to authenticate to Google APIs. To create a service account:"
        },
        {
          "text": "create service account key page](https://console",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L327",
          "evidence": "- Go to the [Create Service Account Key page](https://console.cloud.google.com/apis/credentials/serviceaccountkey)"
        },
        {
          "text": "process with an environment variable named `google_application_credentials`",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L334",
          "evidence": "You can start process with an environment variable named `GOOGLE_APPLICATION_CREDENTIALS`. The value of this env var should be the full path to the service account credential file:"
        },
        {
          "text": "creates a watcher that posts notifications to a google cloud pub/sub topic when emails are sent to a gmail account:",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L394",
          "evidence": "The body of the request is specified in the `requestBody` parameter object of the request. The body is specified as a JavaScript object with key/value pairs. For example, this sample creates a watcher that posts notifications to a Google Cloud Pub/Sub topic when emails are sent to a gmail account:"
        },
        {
          "text": "supports multipart media uploads",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L408",
          "evidence": "This client supports multipart media uploads. The resource parameters are specified in the `requestBody` parameter object, and the media itself is specified in the `media.body` parameter with mime-type specified in `media.mimeType`."
        },
        {
          "text": "allow you to upload very large files that cannot fit into memory",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L430",
          "evidence": "You can also upload media by specifying `media.body` as a [Readable stream][stream]. This can allow you to upload very large files that cannot fit into memory."
        },
        {
          "text": "provide you with the ability to specify additional options that can be applied directly to the ['gaxios'][gaxios] object used in this library to make network calls to the api",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L460",
          "evidence": "For more fine-tuned control over how your API calls are made, we provide you with the ability to specify additional options that can be applied directly to the ['gaxios'][gaxios] object used in this library to make network calls to the API."
        },
        {
          "text": "create a new one if you want to specify different options",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L505",
          "evidence": "**Note:** Created clients are **immutable** so you must create a new one if you want to specify different options."
        },
        {
          "text": "provides types out of the box",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L594",
          "evidence": "This library is written in TypeScript, and provides types out of the box. All classes and interfaces generated for each API are exported under the `${apiName}_${version}` namespace. For example, the Drive v3 API types are all available from the `drive_v3` namespace:"
        },
        {
          "text": "support for [http/2](https://developers",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L622",
          "evidence": "This library has support for [HTTP/2](https://developers.google.com/web/fundamentals/performance/http2). To enable it, use the `http2` option anywhere request parameters are accepted:"
        },
        {
          "text": "enable it, use the `http2` option anywhere request parameters are accepted:",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L622",
          "evidence": "This library has support for [HTTP/2](https://developers.google.com/web/fundamentals/performance/http2). To enable it, use the `http2` option anywhere request parameters are accepted:"
        },
        {
          "text": "allows multiplexing of multiple concurrent requests over a single socket",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L631",
          "evidence": "HTTP/2 is often more performant, as it allows multiplexing of multiple concurrent requests over a single socket. In a traditional HTTP/2 API, the client is directly responsible for opening and closing the sessions made to make requests.  To maintain compatibility with the existing API, this module will automatically re-use existing sessions, which are collected after idling for 500ms.  Much of the performance gains will be visible in batch style workloads, and tight loops."
        },
        {
          "text": "* Supported APIs",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L28",
          "evidence": "* [Supported APIs](#getting-supported-apis)"
        },
        {
          "text": "OAuth2 - This allows you to make API calls on behalf of a given user.  In this model, the user visits your application, signs in with their Google account, and provides your application with authorization against a set of scopes.  Learn more.",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L154",
          "evidence": "- **OAuth2** - This allows you to make API calls on behalf of a given user.  In this model, the user visits your application, signs in with their Google account, and provides your application with authorization against a set of scopes.  [Learn more](#oauth2-client)."
        },
        {
          "text": "Application default credentials - Provides automatic access to Google APIs using the Google Cloud SDK for local development, or the GCE Metadata Server for applications deployed to Google Cloud Platform. Learn more.",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L158",
          "evidence": "- **Application default credentials** - Provides automatic access to Google APIs using the [Google Cloud SDK](https://cloud.google.com/sdk/) for local development, or the [GCE Metadata Server](https://cloud.google.com/compute/docs/storing-retrieving-metadata) for applications deployed to Google Cloud Platform. [Learn more](#application-default-credentials)."
        },
        {
          "text": "Navigate to the Cloud Console and Create a new OAuth2 Client Id",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L168",
          "evidence": "- Navigate to the Cloud Console and [Create a new OAuth2 Client Id](https://console.cloud.google.com/apis/credentials/oauthclient)"
        },
        {
          "text": "Click `Create`, and `Ok` on the following screen",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L171",
          "evidence": "- Click `Create`, and `Ok` on the following screen"
        },
        {
          "text": "Click the `Download` icon next to your newly created OAuth2 Client Id",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L172",
          "evidence": "- Click the `Download` icon next to your newly created OAuth2 Client Id"
        },
        {
          "text": "*IMPORTANT NOTE** - The `refresh_token` is only returned on the first authorization. More details here.",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L208",
          "evidence": "**IMPORTANT NOTE** - The `refresh_token` is only returned on the first authorization. More details [here](https://github.com/googleapis/google-api-nodejs-client/issues/750#issuecomment-304521450)."
        },
        {
          "text": "The application has a status of 'Testing' and the consent screen is configured for an external user type, causing the token to expire in 7 days",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L259",
          "evidence": "- The application has a status of 'Testing' and the consent screen is configured for an external user type, causing the token to expire in 7 days"
        },
        {
          "text": "Go to the Create Service Account Key page",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L327",
          "evidence": "- Go to the [Create Service Account Key page](https://console.cloud.google.com/apis/credentials/serviceaccountkey)"
        },
        {
          "text": "Click the `Create` button",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L329",
          "evidence": "- Click the `Create` button"
        },
        {
          "text": "*Note: Created clients are immutable** so you must create a new one if you want to specify different options.",
          "source_url": "https://github.com/googleapis/google-api-nodejs-client#L505",
          "evidence": "**Note:** Created clients are **immutable** so you must create a new one if you want to specify different options."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "akveo/nebular",
      "url": "https://github.com/akveo/nebular",
      "stars": 8130,
      "language": "TypeScript",
      "features": [
        {
          "text": "support of custom css properties mode",
          "source_url": "https://github.com/akveo/nebular#L5",
          "evidence": "Nebular is a customizable Angular UI Library with a focus on beautiful design and ability to adapt it to your brand easily. It comes with 4 stunning visual themes, a powerful theming engine with runtime theme switching and support of custom css properties mode. Nebular is based on Eva Design System specifications."
        },
        {
          "text": "process you can [use manual setup guide](https://akveo",
          "source_url": "https://github.com/akveo/nebular#L34",
          "evidence": "If you want to have more control over setup process you can [use manual setup guide](https://akveo.github.io/nebular/docs/guides/install-nebular?utm_campaign=nebular%20-%20home%20-%20nebular%20github%20readme&utm_source=nebular&utm_medium=referral&utm_content=install_manually#manually)."
        },
        {
          "text": "supports most recent browsers",
          "source_url": "https://github.com/akveo/nebular#L38",
          "evidence": "Nebular supports most recent browsers. Browser support list can be found <a href=\"https://angular.io/guide/browser-support\" target=\"_blank\">here</a>."
        },
        {
          "text": "support list can be found <a href=\"https://angular",
          "source_url": "https://github.com/akveo/nebular#L38",
          "evidence": "Nebular supports most recent browsers. Browser support list can be found <a href=\"https://angular.io/guide/browser-support\" target=\"_blank\">here</a>."
        },
        {
          "text": "support the developers",
          "source_url": "https://github.com/akveo/nebular#L60",
          "evidence": "## How can I support the developers?"
        },
        {
          "text": "create pull requests, submit bugs, suggest new features or documentation updates :wrench:",
          "source_url": "https://github.com/akveo/nebular#L63",
          "evidence": "- Create pull requests, submit bugs, suggest new features or documentation updates :wrench:"
        },
        {
          "text": "SVG Eva Icons support - 480+ general purpose icons",
          "source_url": "https://github.com/akveo/nebular#L16",
          "evidence": "- **SVG Eva Icons support** - 480+ general purpose icons"
        },
        {
          "text": "ngx-admin - 20k+ stars application based on Nebular modules with beautiful E-Commerce & IOT components, for boosting your developing process. Live Demo.",
          "source_url": "https://github.com/akveo/nebular#L42",
          "evidence": "- [ngx-admin](http://github.com/akveo/ngx-admin) - 20k+ stars application based on Nebular modules with beautiful E-Commerce & IOT components, for boosting your developing process. [Live Demo](https://www.akveo.com/ngx-admin?utm_campaign=ngx_admin%20-%20demo%20-%20nebular%20github%20readme%20-%20traffic&utm_source=nebular&utm_medium=referral&utm_content=github_readme)."
        },
        {
          "text": "Create pull requests, submit bugs, suggest new features or documentation updates :wrench:",
          "source_url": "https://github.com/akveo/nebular#L63",
          "evidence": "- Create pull requests, submit bugs, suggest new features or documentation updates :wrench:"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "vvo/iron-session",
      "url": "https://github.com/vvo/iron-session",
      "stars": 4051,
      "language": "TypeScript",
      "features": [
        {
          "text": "import { getironsession } from 'iron-session';",
          "source_url": "https://github.com/vvo/iron-session#L70",
          "evidence": "import { getIronSession } from 'iron-session';"
        },
        {
          "text": "export async function get(req, res) {",
          "source_url": "https://github.com/vvo/iron-session#L72",
          "evidence": "export async function get(req, res) {"
        },
        {
          "text": "export async function post(req, res) {",
          "source_url": "https://github.com/vvo/iron-session#L77",
          "evidence": "export async function post(req, res) {"
        },
        {
          "text": "import { cookies } from 'next/headers';",
          "source_url": "https://github.com/vvo/iron-session#L86",
          "evidence": "import { cookies } from 'next/headers';"
        },
        {
          "text": "import { getironsession } from 'iron-session';",
          "source_url": "https://github.com/vvo/iron-session#L87",
          "evidence": "import { getIronSession } from 'iron-session';"
        },
        {
          "text": "export async function get() {",
          "source_url": "https://github.com/vvo/iron-session#L89",
          "evidence": "export async function GET() {"
        },
        {
          "text": "export async function post() {",
          "source_url": "https://github.com/vvo/iron-session#L94",
          "evidence": "export async function POST() {"
        },
        {
          "text": "import { cookies } from 'next/headers';",
          "source_url": "https://github.com/vvo/iron-session#L103",
          "evidence": "import { cookies } from 'next/headers';"
        },
        {
          "text": "import { getironsession } from 'iron-session';",
          "source_url": "https://github.com/vvo/iron-session#L104",
          "evidence": "import { getIronSession } from 'iron-session';"
        },
        {
          "text": "allow for password rotation",
          "source_url": "https://github.com/vvo/iron-session#L130",
          "evidence": "- `password`, **required**: Private key used to encrypt the cookie. It has to be at least 32 characters long. Use <https://1password.com/password-generator/> to generate strong passwords. `password` can be either a `string` or an `object` with incrementing keys like this: `{2: \"...\", 1: \"...\"}` to allow for password rotation.  iron-session will use the highest numbered key for new cookies."
        },
        {
          "text": "generate strong passwords",
          "source_url": "https://github.com/vvo/iron-session#L130",
          "evidence": "- `password`, **required**: Private key used to encrypt the cookie. It has to be at least 32 characters long. Use <https://1password.com/password-generator/> to generate strong passwords. `password` can be either a `string` or an `object` with incrementing keys like this: `{2: \"...\", 1: \"...\"}` to allow for password rotation.  iron-session will use the highest numbered key for new cookies."
        },
        {
          "text": "generate a seal that contains a user id to login and send it to a route on your website (like `/magic-login`)",
          "source_url": "https://github.com/vvo/iron-session#L189",
          "evidence": "This is the underlying method and seal mechanism that powers `iron-session`. You can use it to seal any `data` you want and pass it around. One usecase are magic links: you generate a seal that contains a user id to login and send it to a route on your website (like `/magic-login`). Once received, you can safely decode the seal with `unsealData` and log the user in."
        },
        {
          "text": "allow you to decode a seal to get the original data back",
          "source_url": "https://github.com/vvo/iron-session#L193",
          "evidence": "This is the opposite of `sealData` and allow you to decode a seal to get the original data back."
        },
        {
          "text": "create a ui to block customers",
          "source_url": "https://github.com/vvo/iron-session#L205",
          "evidence": "Sessions cannot be instantly invalidated (or \"disconnect this customer\") as there is typically no state stored about sessions on the server by default. However, in most applications, the first step upon receiving an authenticated request is to validate the user and their permissions in the database. So, to easily disconnect customers (or invalidate sessions), you can add an `isBlocked`` state in the database and create a UI to block customers."
        },
        {
          "text": "manage to inspect the seal",
          "source_url": "https://github.com/vvo/iron-session#L218",
          "evidence": "- JWT tokens are not encrypted, the payload is visible by customers if they manage to inspect the seal. You would have to use [JWE](https://tools.ietf.org/html/rfc7516) to achieve the same."
        },
        {
          "text": "`password`, required: Private key used to encrypt the cookie. It has to be at least 32 characters long. Use <https://1password.com/password-generator/> to generate strong passwords. `password` can be either a `string` or an `object` with incrementing keys like this: `{2: \"...\", 1: \"...\"}` to allow for password rotation.  iron-session will use the highest numbered key for new cookies.",
          "source_url": "https://github.com/vvo/iron-session#L130",
          "evidence": "- `password`, **required**: Private key used to encrypt the cookie. It has to be at least 32 characters long. Use <https://1password.com/password-generator/> to generate strong passwords. `password` can be either a `string` or an `object` with incrementing keys like this: `{2: \"...\", 1: \"...\"}` to allow for password rotation.  iron-session will use the highest numbered key for new cookies."
        },
        {
          "text": "`ttl`, _optional_: In seconds. Default to the equivalent of 14 days. You can set this to `0` and iron-session will compute the maximum allowed value by cookies.",
          "source_url": "https://github.com/vvo/iron-session#L132",
          "evidence": "- `ttl`, _optional_: In seconds. Default to the equivalent of 14 days. You can set this to `0` and iron-session will compute the maximum allowed value by cookies."
        },
        {
          "text": "JWT tokens are not encrypted, the payload is visible by customers if they manage to inspect the seal. You would have to use JWE to achieve the same.",
          "source_url": "https://github.com/vvo/iron-session#L218",
          "evidence": "- JWT tokens are not encrypted, the payload is visible by customers if they manage to inspect the seal. You would have to use [JWE](https://tools.ietf.org/html/rfc7516) to achieve the same."
        },
        {
          "text": "Divyansh Singh for reimplementing `@hapi/iron` as",
          "source_url": "https://github.com/vvo/iron-session#L228",
          "evidence": "- [Divyansh Singh](https://github.com/brc-dd) for reimplementing `@hapi/iron` as"
        },
        {
          "text": "Hoang Vo for advice and guidance while building",
          "source_url": "https://github.com/vvo/iron-session#L231",
          "evidence": "- [Hoang Vo](https://github.com/hoangvvo) for advice and guidance while building"
        },
        {
          "text": "<https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html>",
          "source_url": "https://github.com/vvo/iron-session#L241",
          "evidence": "- <https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html>"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "AzureAD/microsoft-authentication-library-for-js",
      "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js",
      "stars": 3967,
      "language": "TypeScript",
      "features": [
        {
          "text": "enables both client-side and server-side javascript applications to authenticate users using [azure ad](https://docs",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L3",
          "evidence": "The Microsoft Authentication Library for JavaScript enables both client-side and server-side JavaScript applications to authenticate users using [Azure AD](https://docs.microsoft.com/azure/active-directory/develop/v2-overview) for work and school accounts (AAD), Microsoft personal accounts (MSA), and social identity providers like Facebook, Google, LinkedIn, Microsoft accounts, etc. through [Azure AD B2C](https://docs.microsoft.com/azure/active-directory-b2c/active-directory-b2c-overview#identity-providers) service. It also enables your app to get tokens to access [Microsoft Cloud](https://www.microsoft.com/enterprise) services such as [Microsoft Graph](https://graph.microsoft.io)."
        },
        {
          "text": "enables your app to get tokens to access [microsoft cloud](https://www",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L3",
          "evidence": "The Microsoft Authentication Library for JavaScript enables both client-side and server-side JavaScript applications to authenticate users using [Azure AD](https://docs.microsoft.com/azure/active-directory/develop/v2-overview) for work and school accounts (AAD), Microsoft personal accounts (MSA), and social identity providers like Facebook, Google, LinkedIn, Microsoft accounts, etc. through [Azure AD B2C](https://docs.microsoft.com/azure/active-directory-b2c/active-directory-b2c-overview#identity-providers) service. It also enables your app to get tokens to access [Microsoft Cloud](https://www.microsoft.com/enterprise) services such as [Microsoft Graph](https://graph.microsoft.io)."
        },
        {
          "text": "enables authentication and token acquisition with the microsoft identity platform in javascript applications",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L11",
          "evidence": "-   [Microsoft Authentication Library for Node.js](lib/msal-node/): A [Node.js](https://nodejs.org/en/) library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the following OAuth 2.0 protocols and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc):"
        },
        {
          "text": "implements the following oauth 2",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L11",
          "evidence": "-   [Microsoft Authentication Library for Node.js](lib/msal-node/): A [Node.js](https://nodejs.org/en/) library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the following OAuth 2.0 protocols and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc):"
        },
        {
          "text": "enables authentication and token acquisition with the microsoft identity platform in javascript applications",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L20",
          "evidence": "-   [Microsoft Authentication Library for JavaScript](lib/msal-browser/): A browser-based, framework-agnostic browser library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the OAuth 2.0 [Authorization Code Flow with PKCE](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow), and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc)."
        },
        {
          "text": "implements the oauth 2",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L20",
          "evidence": "-   [Microsoft Authentication Library for JavaScript](lib/msal-browser/): A browser-based, framework-agnostic browser library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the OAuth 2.0 [Authorization Code Flow with PKCE](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow), and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc)."
        },
        {
          "text": "support for javascript](lib/msal-browser/src/custom_auth/): msal also provides native authentication apis that allow applications to implement a native experience with end-to-end customizable flows in their applications",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        },
        {
          "text": "provides native authentication apis that allow applications to implement a native experience with end-to-end customizable flows in their applications",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        },
        {
          "text": "allow applications to implement a native experience with end-to-end customizable flows in their applications",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        },
        {
          "text": "implement a native experience with end-to-end customizable flows in their applications",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        },
        {
          "text": "implementing or exploring the native authentication feature in the code",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L24",
          "evidence": "> **Terminology:** In the codebase, the term \"Custom Auth\" is used instead of \"Native Auth\". You will find classes, interfaces, and configuration options prefixed with `CustomAuth` (e.g., `CustomAuthPublicClientApplication`, `CustomAuthConfiguration`). Please refer to these when implementing or exploring the native authentication feature in the code."
        },
        {
          "text": "support to the microsoft authentication library for node (msal)",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L28",
          "evidence": "-   [Microsoft Authentication Extensions for Node](extensions/msal-node-extensions/): The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL)."
        },
        {
          "text": "offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L28",
          "evidence": "-   [Microsoft Authentication Extensions for Node](extensions/msal-node-extensions/): The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL)."
        },
        {
          "text": "perform cross-platform token cache serialization and persistence",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L28",
          "evidence": "-   [Microsoft Authentication Extensions for Node](extensions/msal-node-extensions/): The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL)."
        },
        {
          "text": "Microsoft Authentication Library for Node.js: A Node.js library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the following OAuth 2.0 protocols and is OpenID-compliant:",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L11",
          "evidence": "-   [Microsoft Authentication Library for Node.js](lib/msal-node/): A [Node.js](https://nodejs.org/en/) library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the following OAuth 2.0 protocols and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc):"
        },
        {
          "text": "Microsoft Authentication Library for JavaScript: A browser-based, framework-agnostic browser library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the OAuth 2.0 Authorization Code Flow with PKCE, and is OpenID-compliant.",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L20",
          "evidence": "-   [Microsoft Authentication Library for JavaScript](lib/msal-browser/): A browser-based, framework-agnostic browser library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the OAuth 2.0 [Authorization Code Flow with PKCE](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow), and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc)."
        },
        {
          "text": "Native Authentication Support for JavaScript: MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on External ID for customers. It is recommended to always use the most up-to-date version of the SDK.",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        },
        {
          "text": "Microsoft Authentication Extensions for Node: The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL).",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L28",
          "evidence": "-   [Microsoft Authentication Extensions for Node](extensions/msal-node-extensions/): The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL)."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "websanova/vue-auth",
      "url": "https://github.com/websanova/vue-auth",
      "stars": 2342,
      "language": "JavaScript",
      "features": [
        {
          "text": "plugin please consider sponsoring",
          "source_url": "https://github.com/websanova/vue-auth#L8",
          "evidence": "If you like this plugin please consider sponsoring."
        },
        {
          "text": "support for vue 3 along with one small change with how the plugin is setup",
          "source_url": "https://github.com/websanova/vue-auth#L15",
          "evidence": "The new 4.x version comes with support for Vue 3 along with one small change with how the plugin is setup. Otherwise it is fully backwards compatible and no other changes will be required."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "mainmatter/ember-simple-auth",
      "url": "https://github.com/mainmatter/ember-simple-auth",
      "stars": 1911,
      "language": "JavaScript",
      "features": [
        {
          "text": "supports __embroider__ see our [ember-try scenario](https://github",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L10",
          "evidence": "- Supports __Embroider__ see our [ember-try scenario](https://github.com/mainmatter/ember-simple-auth/blob/master/packages/test-esa/config/ember-try.js) and [test app](https://github.com/mainmatter/ember-simple-auth/blob/master/packages/test-app/ember-cli-build.js) for guidance."
        },
        {
          "text": "offer consulting, training, and team augmentation for ember",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L14",
          "evidence": "> We offer consulting, training, and team augmentation for Ember.js \u2013 check out our [website](https://mainmatter.com/ember-consulting/) to learn more!"
        },
        {
          "text": "implementing authentication/",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L20",
          "evidence": "Ember Simple Auth is a __lightweight library for implementing authentication/"
        },
        {
          "text": "support all kinds of authentication and",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L23",
          "evidence": "its pluggable strategies it __can support all kinds of authentication and"
        },
        {
          "text": "implementing a custom authenticator](#implementing-a-custom-authenticator)",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L44",
          "evidence": "* [Implementing a custom Authenticator](#implementing-a-custom-authenticator)"
        },
        {
          "text": "implementing a custom store](#implementing-a-custom-store)",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L47",
          "evidence": "* [Implementing a Custom Store](#implementing-a-custom-store)"
        },
        {
          "text": "building blocks__ - the session, a",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L75",
          "evidence": "Ember Simple Auth consists of __3 main building blocks__ - the session, a"
        },
        {
          "text": "support multiple ways of authentication such as",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L88",
          "evidence": "multiple authenticators to support multiple ways of authentication such as"
        },
        {
          "text": "implements a complete auth solution__ including authentication against",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L96",
          "evidence": "that implements a complete auth solution__ including authentication against"
        },
        {
          "text": "build issues for `typescript` and `embroider` users,",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L125",
          "evidence": "The 4.1 release introduced a `session#setup` that fixes build issues for `typescript` and `embroider` users,"
        },
        {
          "text": "provides a session service and a default session-store",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L132",
          "evidence": "The 7.0 release introduces a **breaking** change, it no longer automatically provides a session service and a default session-store. You have explicitly import these files instead."
        },
        {
          "text": "import these files instead",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L132",
          "evidence": "The 7.0 release introduces a **breaking** change, it no longer automatically provides a session service and a default session-store. You have explicitly import these files instead."
        },
        {
          "text": "import a session service and a session-store inside your application__",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L138",
          "evidence": "Once the library is installed, import a session service and a session-store inside your application__."
        },
        {
          "text": "import service from 'ember-simple-auth/services/session';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L142",
          "evidence": "import Service from 'ember-simple-auth/services/session';"
        },
        {
          "text": "export default class sessionservice extends service {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L144",
          "evidence": "export default class SessionService extends Service {}"
        },
        {
          "text": "extends service {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L144",
          "evidence": "export default class SessionService extends Service {}"
        },
        {
          "text": "import adaptivestore from 'ember-simple-auth/session-stores/adaptive';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L149",
          "evidence": "import AdaptiveStore from 'ember-simple-auth/session-stores/adaptive';"
        },
        {
          "text": "export default class sessionstore extends adaptivestore {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L151",
          "evidence": "export default class SessionStore extends AdaptiveStore {}"
        },
        {
          "text": "extends adaptivestore {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L151",
          "evidence": "export default class SessionStore extends AdaptiveStore {}"
        },
        {
          "text": "import service from 'ember-simple-auth/services/session';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L157",
          "evidence": "import Service from 'ember-simple-auth/services/session';"
        },
        {
          "text": "export default class sessionservice extends service<data> {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L166",
          "evidence": "export default class SessionService extends Service<Data> {}"
        },
        {
          "text": "extends service<data> {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L166",
          "evidence": "export default class SessionService extends Service<Data> {}"
        },
        {
          "text": "import controller from '@ember/controller';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L178",
          "evidence": "import Controller from '@ember/controller';"
        },
        {
          "text": "import { service } from '@ember/service';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L179",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "text": "export default class applicationcontroller extends controller {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L181",
          "evidence": "export default class ApplicationController extends Controller {"
        },
        {
          "text": "extends controller {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L181",
          "evidence": "export default class ApplicationController extends Controller {"
        },
        {
          "text": "import controller from '@ember/controller';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L209",
          "evidence": "import Controller from '@ember/controller';"
        },
        {
          "text": "import { service } from '@ember/service';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L210",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "text": "import { action } from \"@ember/object\";",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L211",
          "evidence": "import { action } from \"@ember/object\";"
        },
        {
          "text": "export default class applicationcontroller extends controller {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L213",
          "evidence": "export default class ApplicationController extends Controller {"
        },
        {
          "text": "extends controller {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L213",
          "evidence": "export default class ApplicationController extends Controller {"
        },
        {
          "text": "extend one of the authenticators the",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L229",
          "evidence": "new file in `app/authenticators`__ and extend one of the authenticators the"
        },
        {
          "text": "import oauth2passwordgrant from 'ember-simple-auth/authenticators/oauth2-password-grant';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L234",
          "evidence": "import OAuth2PasswordGrant from 'ember-simple-auth/authenticators/oauth2-password-grant';"
        },
        {
          "text": "export default class oauth2authenticator extends oauth2passwordgrant {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L236",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrant {}"
        },
        {
          "text": "extends oauth2passwordgrant {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L236",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrant {}"
        },
        {
          "text": "import controller from '@ember/controller';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L260",
          "evidence": "import Controller from '@ember/controller';"
        },
        {
          "text": "import { service } from '@ember/service';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L261",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "text": "import { action } from \"@ember/object\";",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L262",
          "evidence": "import { action } from \"@ember/object\";"
        },
        {
          "text": "import { tracked } from \"@glimmer/tracking\";",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L263",
          "evidence": "import { tracked } from \"@glimmer/tracking\";"
        },
        {
          "text": "export default class logincontroller extends controller {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L265",
          "evidence": "export default class LoginController extends Controller {"
        },
        {
          "text": "extends controller {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L265",
          "evidence": "export default class LoginController extends Controller {"
        },
        {
          "text": "import route from '@ember/routing/route';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L303",
          "evidence": "import Route from '@ember/routing/route';"
        },
        {
          "text": "import { service } from '@ember/service';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L304",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "text": "export default class authenticatedroute extends route {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L306",
          "evidence": "export default class AuthenticatedRoute extends Route {"
        },
        {
          "text": "import route from '@ember/routing/route';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L347",
          "evidence": "import Route from '@ember/routing/route';"
        },
        {
          "text": "import { service } from '@ember/service';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L348",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "text": "export default class loginroute extends route {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L350",
          "evidence": "export default class LoginRoute extends Route {"
        },
        {
          "text": "customize those behaviours, these methods can be overridden when the",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L369",
          "evidence": "to customize those behaviours, these methods can be overridden when the"
        },
        {
          "text": "extends the one provided by",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L370",
          "evidence": "application defines its own session service that extends the one provided by"
        },
        {
          "text": "import jsonapiadapter from '@ember-data/adapter/json-api';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L379",
          "evidence": "import JSONAPIAdapter from '@ember-data/adapter/json-api';"
        },
        {
          "text": "import { computed } from '@ember/object';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L380",
          "evidence": "import { computed } from '@ember/object';"
        },
        {
          "text": "import { service } from '@ember/service';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L381",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "text": "export default class applicationadapter extends jsonapiadapter {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L383",
          "evidence": "export default class ApplicationAdapter extends JSONAPIAdapter {"
        },
        {
          "text": "extends jsonapiadapter {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L383",
          "evidence": "export default class ApplicationAdapter extends JSONAPIAdapter {"
        },
        {
          "text": "implement the concrete steps necessary to authenticate the",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L423",
          "evidence": "__Authenticators implement the concrete steps necessary to authenticate the"
        },
        {
          "text": "implements the _\"resource owner password credentials grant type\"_",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L437",
          "evidence": "* [`OAuth2PasswordGrantAuthenticator`](http://ember-simple-auth.com/api/OAuth2PasswordGrantAuthenticator.html): an OAuth 2.0 authenticator that implements the _\"Resource Owner Password Credentials Grant Type\"_"
        },
        {
          "text": "implements the _\"implicit grant type\"_",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L438",
          "evidence": "* [`OAuth2ImplicitGrantAuthenticator`](https://ember-simple-auth.com/api/module-ember-simple-auth_authenticators_oauth2-implicit-grant-OAuth2ImplicitGrantAuthenticator.html): an OAuth 2.0 authenticator that implements the _\"Implicit Grant Type\"_"
        },
        {
          "text": "plugin [devise](https://github",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L439",
          "evidence": "* [`DeviseAuthenticator`](http://ember-simple-auth.com/api/DeviseAuthenticator.html): an authenticator compatible with the popular Ruby on Rails authentication plugin [devise](https://github.com/plataformatec/devise)"
        },
        {
          "text": "extend if from the ember simple auth",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L443",
          "evidence": "authenticator in `app/authenticators`, extend if from the Ember Simple Auth"
        },
        {
          "text": "import oauth2passwordgrantauthenticator from 'ember-simple-auth/authenticators/oauth2-password-grant';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L448",
          "evidence": "import OAuth2PasswordGrantAuthenticator from 'ember-simple-auth/authenticators/oauth2-password-grant';"
        },
        {
          "text": "export default class oauth2authenticator extends oauth2passwordgrantauthenticator {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L450",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrantAuthenticator {}"
        },
        {
          "text": "extends oauth2passwordgrantauthenticator {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L450",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrantAuthenticator {}"
        },
        {
          "text": "import oauth2passwordgrantauthenticator from 'ember-simple-auth/authenticators/oauth2-password-grant';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L467",
          "evidence": "import OAuth2PasswordGrantAuthenticator from 'ember-simple-auth/authenticators/oauth2-password-grant';"
        },
        {
          "text": "export default class oauth2authenticator extends oauth2passwordgrantauthenticator {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L469",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrantAuthenticator {"
        },
        {
          "text": "extends oauth2passwordgrantauthenticator {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L469",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrantAuthenticator {"
        },
        {
          "text": "implementing a custom authenticator",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L474",
          "evidence": "### Implementing a custom Authenticator"
        },
        {
          "text": "extending one of the predefined authenticators, an application can also",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L476",
          "evidence": "Besides extending one of the predefined authenticators, an application can also"
        },
        {
          "text": "implement fully custom authenticators",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L477",
          "evidence": "implement fully custom authenticators. In order to do that, extend the"
        },
        {
          "text": "import base from 'ember-simple-auth/authenticators/base';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L488",
          "evidence": "import Base from 'ember-simple-auth/authenticators/base';"
        },
        {
          "text": "export default class customauthenticator extends base {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L490",
          "evidence": "export default class CustomAuthenticator extends Base {"
        },
        {
          "text": "import cookie from 'ember-simple-auth/session-stores/cookie';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L513",
          "evidence": "import Cookie from 'ember-simple-auth/session-stores/cookie';"
        },
        {
          "text": "export default class applicationsessionstore extends cookie {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L515",
          "evidence": "export default class ApplicationSessionStore extends Cookie {}"
        },
        {
          "text": "extends cookie {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L515",
          "evidence": "export default class ApplicationSessionStore extends Cookie {}"
        },
        {
          "text": "customize the adaptive store, define a custom store in",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L520",
          "evidence": "by default. To customize the adaptive store, define a custom store in"
        },
        {
          "text": "extends it and overrides the",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L521",
          "evidence": "`app/session-stores/application.js` that extends it and overrides the"
        },
        {
          "text": "support of `sessionstorage` and `localstorage`",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L554",
          "evidence": "has up-to-date information on browser support of `sessionStorage` and `localStorage`."
        },
        {
          "text": "import adaptivestore from 'ember-simple-auth/session-stores/adaptive';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L570",
          "evidence": "import AdaptiveStore from 'ember-simple-auth/session-stores/adaptive';"
        },
        {
          "text": "export default class applicationsessionstore extends adaptivestore {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L572",
          "evidence": "export default class ApplicationSessionStore extends AdaptiveStore {"
        },
        {
          "text": "extends adaptivestore {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L572",
          "evidence": "export default class ApplicationSessionStore extends AdaptiveStore {"
        },
        {
          "text": "implementing a custom store",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L577",
          "evidence": "### Implementing a custom Store"
        },
        {
          "text": "implement fully custom stores",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L580",
          "evidence": "implement fully custom stores. In order to do that, extend the"
        },
        {
          "text": "import base from 'ember-simple-auth/session-stores/base';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L591",
          "evidence": "import Base from 'ember-simple-auth/session-stores/base';"
        },
        {
          "text": "export default class applicationsessionstore extends base {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L593",
          "evidence": "export default class ApplicationSessionStore extends Base {"
        },
        {
          "text": "enable the cookie store, define it as",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L607",
          "evidence": "session store is being used. In order to enable the cookie store, define it as"
        },
        {
          "text": "import cookiestore from 'ember-simple-auth/session-stores/cookie';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L612",
          "evidence": "import CookieStore from 'ember-simple-auth/session-stores/cookie';"
        },
        {
          "text": "export default class applicationsessionstore extends cookiestore {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L614",
          "evidence": "export default class ApplicationSessionStore extends CookieStore {}"
        },
        {
          "text": "extends cookiestore {}",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L614",
          "evidence": "export default class ApplicationSessionStore extends CookieStore {}"
        },
        {
          "text": "import application from '@ember/application';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L640",
          "evidence": "import Application from '@ember/application';"
        },
        {
          "text": "import loadinitializers from 'ember-load-initializers';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L641",
          "evidence": "import loadInitializers from 'ember-load-initializers';"
        },
        {
          "text": "extends application {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L643",
          "evidence": "class App extends Application {"
        },
        {
          "text": "export default app;",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L659",
          "evidence": "export default App;"
        },
        {
          "text": "import route from '@ember/routing/route';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L674",
          "evidence": "import Route from '@ember/routing/route';"
        },
        {
          "text": "import { service } from '@ember/service';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L675",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "text": "export default class indexroute extends route {",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L677",
          "evidence": "export default class IndexRoute extends Route {"
        },
        {
          "text": "provide the following helpers:",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L694",
          "evidence": "We provide the following helpers:"
        },
        {
          "text": "provide a specific authorization token or user",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L698",
          "evidence": "authentication request, to provide a specific authorization token or user"
        },
        {
          "text": "import { module, test } from 'qunit';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L705",
          "evidence": "import { module, test } from 'qunit';"
        },
        {
          "text": "import { visit, currenturl } from '@ember/test-helpers';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L706",
          "evidence": "import { visit, currentURL } from '@ember/test-helpers';"
        },
        {
          "text": "import { setupapplicationtest } from 'ember-qunit';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L707",
          "evidence": "import { setupApplicationTest } from 'ember-qunit';"
        },
        {
          "text": "import { currentsession, authenticatesession, invalidatesession } from 'ember-simple-auth/test-support';",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L708",
          "evidence": "import { currentSession, authenticateSession, invalidateSession } from 'ember-simple-auth/test-support';"
        },
        {
          "text": "Ember Simple Auth __supports all Ember.js versions starting with 3.28.__",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L7",
          "evidence": "- Ember Simple Auth __supports all Ember.js versions starting with 3.28.__"
        },
        {
          "text": "__Doesn't support IE11__",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L8",
          "evidence": "- __Doesn't support IE11__"
        },
        {
          "text": "Supports __Embroider__ see our ember-try scenario and test app for guidance.",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L10",
          "evidence": "- Supports __Embroider__ see our [ember-try scenario](https://github.com/mainmatter/ember-simple-auth/blob/master/packages/test-esa/config/ember-try.js) and [test app](https://github.com/mainmatter/ember-simple-auth/blob/master/packages/test-app/ember-cli-build.js) for guidance."
        },
        {
          "text": "* Implementing a custom Authenticator",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L44",
          "evidence": "* [Implementing a custom Authenticator](#implementing-a-custom-authenticator)"
        },
        {
          "text": "* Implementing a Custom Store",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L47",
          "evidence": "* [Implementing a Custom Store](#implementing-a-custom-store)"
        },
        {
          "text": "`OAuth2PasswordGrantAuthenticator`: an OAuth 2.0 authenticator that implements the _\"Resource Owner Password Credentials Grant Type\"_",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L437",
          "evidence": "* [`OAuth2PasswordGrantAuthenticator`](http://ember-simple-auth.com/api/OAuth2PasswordGrantAuthenticator.html): an OAuth 2.0 authenticator that implements the _\"Resource Owner Password Credentials Grant Type\"_"
        },
        {
          "text": "`OAuth2ImplicitGrantAuthenticator`: an OAuth 2.0 authenticator that implements the _\"Implicit Grant Type\"_",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L438",
          "evidence": "* [`OAuth2ImplicitGrantAuthenticator`](https://ember-simple-auth.com/api/module-ember-simple-auth_authenticators_oauth2-implicit-grant-OAuth2ImplicitGrantAuthenticator.html): an OAuth 2.0 authenticator that implements the _\"Implicit Grant Type\"_"
        },
        {
          "text": "`DeviseAuthenticator`: an authenticator compatible with the popular Ruby on Rails authentication plugin devise",
          "source_url": "https://github.com/mainmatter/ember-simple-auth#L439",
          "evidence": "* [`DeviseAuthenticator`](http://ember-simple-auth.com/api/DeviseAuthenticator.html): an authenticator compatible with the popular Ruby on Rails authentication plugin [devise](https://github.com/plataformatec/devise)"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "dchest/tweetnacl-js",
      "url": "https://github.com/dchest/tweetnacl-js",
      "stars": 1881,
      "language": "JavaScript",
      "features": [
        {
          "text": "importing npm package",
          "source_url": "https://github.com/dchest/tweetnacl-js#L45",
          "evidence": "faster versions. (Used by default when importing NPM package.)"
        },
        {
          "text": "supports most of the primitives implemented by tweetnacl",
          "source_url": "https://github.com/dchest/tweetnacl-js#L51",
          "evidence": "Note that [WebCrypto API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API) supports most of the primitives implemented by TweetNaCl.js (`X25519` in `nacl.scalarMult`, `Ed25519` in `nacl.sign.detached`, and `SHA-512` in `nacl.hash`), except for `XSalsa20-Poly1305` authenticated encryption, so you should use it if possible."
        },
        {
          "text": "provide complete security protocols",
          "source_url": "https://github.com/dchest/tweetnacl-js#L72",
          "evidence": "that doesn't provide complete security protocols. When designing"
        },
        {
          "text": "create a different signature for the same message that will verify",
          "source_url": "https://github.com/dchest/tweetnacl-js#L91",
          "evidence": "to create a different signature for the same message that will verify"
        },
        {
          "text": "implements *x25519-xsalsa20-poly1305*",
          "source_url": "https://github.com/dchest/tweetnacl-js#L150",
          "evidence": "Implements *x25519-xsalsa20-poly1305*."
        },
        {
          "text": "generates a new random key pair for box and returns it as an object with",
          "source_url": "https://github.com/dchest/tweetnacl-js#L154",
          "evidence": "Generates a new random key pair for box and returns it as an object with"
        },
        {
          "text": "implements *xsalsa20-poly1305*",
          "source_url": "https://github.com/dchest/tweetnacl-js#L221",
          "evidence": "Implements *xsalsa20-poly1305*."
        },
        {
          "text": "implements *x25519*",
          "source_url": "https://github.com/dchest/tweetnacl-js#L254",
          "evidence": "Implements *x25519*."
        },
        {
          "text": "implements [ed25519](http://ed25519",
          "source_url": "https://github.com/dchest/tweetnacl-js#L279",
          "evidence": "Implements [ed25519](http://ed25519.cr.yp.to)."
        },
        {
          "text": "generates new random key pair for signing and returns it as an object with",
          "source_url": "https://github.com/dchest/tweetnacl-js#L283",
          "evidence": "Generates new random key pair for signing and returns it as an object with"
        },
        {
          "text": "implements *sha-512*",
          "source_url": "https://github.com/dchest/tweetnacl-js#L344",
          "evidence": "Implements *SHA-512*."
        },
        {
          "text": "generate random bytes,",
          "source_url": "https://github.com/dchest/tweetnacl-js#L366",
          "evidence": "TweetNaCl.js uses the following methods to generate random bytes,"
        },
        {
          "text": "provide a suitable prng, the following functions,",
          "source_url": "https://github.com/dchest/tweetnacl-js#L373",
          "evidence": "If the platform doesn't provide a suitable PRNG, the following functions,"
        },
        {
          "text": "implement secure random number",
          "source_url": "https://github.com/dchest/tweetnacl-js#L382",
          "evidence": "If a platform you are targeting doesn't implement secure random number"
        },
        {
          "text": "supports modern browsers that have a cryptographically secure",
          "source_url": "https://github.com/dchest/tweetnacl-js#L409",
          "evidence": "TweetNaCl.js supports modern browsers that have a cryptographically secure"
        },
        {
          "text": "build minified versions:",
          "source_url": "https://github.com/dchest/tweetnacl-js#L430",
          "evidence": "To build minified versions:"
        },
        {
          "text": "run tests in node",
          "source_url": "https://github.com/dchest/tweetnacl-js#L439",
          "evidence": "To run tests in Node.js:"
        },
        {
          "text": "run full suite of tests in node",
          "source_url": "https://github.com/dchest/tweetnacl-js#L449",
          "evidence": "To run full suite of tests in Node.js, including comparing outputs of"
        },
        {
          "text": "run test-node-all",
          "source_url": "https://github.com/dchest/tweetnacl-js#L452",
          "evidence": "$ npm run test-node-all"
        },
        {
          "text": "run build-test-browser",
          "source_url": "https://github.com/dchest/tweetnacl-js#L456",
          "evidence": "$ npm run build-test-browser"
        },
        {
          "text": "run tests in both node and electron:",
          "source_url": "https://github.com/dchest/tweetnacl-js#L461",
          "evidence": "To run tests in both Node and Electron:"
        },
        {
          "text": "run benchmarks in node",
          "source_url": "https://github.com/dchest/tweetnacl-js#L467",
          "evidence": "To run benchmarks in Node.js:"
        },
        {
          "text": "run benchmarks in a browser, open `test/benchmark/bench",
          "source_url": "https://github.com/dchest/tweetnacl-js#L472",
          "evidence": "To run benchmarks in a browser, open `test/benchmark/bench.html` (or"
        },
        {
          "text": "run benchmarks on your devices by clicking on the links at the bottom",
          "source_url": "https://github.com/dchest/tweetnacl-js#L495",
          "evidence": "(You can run benchmarks on your devices by clicking on the links at the bottom"
        },
        {
          "text": "*Implementation note**",
          "source_url": "https://github.com/dchest/tweetnacl-js#L364",
          "evidence": "**Implementation note**"
        },
        {
          "text": "forward-secrecy \u2014 Axolotl ratchet implementation",
          "source_url": "https://github.com/dchest/tweetnacl-js#L516",
          "evidence": "* [forward-secrecy](https://github.com/alax/forward-secrecy) \u2014 Axolotl ratchet implementation"
        },
        {
          "text": "ristretto255-js \u2014 implementation of the ristretto255 group",
          "source_url": "https://github.com/dchest/tweetnacl-js#L518",
          "evidence": "* [ristretto255-js](https://github.com/calibra/ristretto255-js) \u2014 implementation of the [ristretto255 group](https://ristretto.group/)"
        },
        {
          "text": "tweetnacl-auth-js \u2014 implementation of `crypto_auth`",
          "source_url": "https://github.com/dchest/tweetnacl-js#L519",
          "evidence": "* [tweetnacl-auth-js](https://github.com/dchest/tweetnacl-auth-js) \u2014 implementation of [`crypto_auth`](http://nacl.cr.yp.to/auth.html)"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "googleapis/google-auth-library-nodejs",
      "url": "https://github.com/googleapis/google-auth-library-nodejs",
      "stars": 1867,
      "language": "TypeScript",
      "features": [
        {
          "text": "provides a variety of ways to authenticate to your google services",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L49",
          "evidence": "This library provides a variety of ways to authenticate to your Google services."
        },
        {
          "text": "support workload identity federation to access google cloud resources from non-google cloud platforms",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L50",
          "evidence": "- [Application Default Credentials](#choosing-the-correct-credential-type-automatically) - Use Application Default Credentials when you use a single identity for all users in your application. Especially useful for applications running on Google Cloud. Application Default Credentials also support workload identity federation to access Google Cloud resources from non-Google Cloud platforms."
        },
        {
          "text": "perform actions on behalf of the end user",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L51",
          "evidence": "- [OAuth 2](#oauth2) - Use OAuth2 when you need to perform actions on behalf of the end user."
        },
        {
          "text": "supports openid connect (oidc)",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L54",
          "evidence": "- [Workload Identity Federation](#workload-identity-federation) - Use workload identity federation to access Google Cloud resources from Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC)."
        },
        {
          "text": "generate a short-lived credential with downscoped, restricted iam permissions that can use for cloud storage",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L57",
          "evidence": "- [Downscoped Client](#downscoped-client) - Use Downscoped Client with Credential Access Boundary to generate a short-lived credential with downscoped, restricted IAM permissions that can use for Cloud Storage."
        },
        {
          "text": "provides an implementation of [application default credentials (adc)](https://cloud",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L61",
          "evidence": "This library provides an implementation of [Application Default Credentials (ADC)](https://cloud.google.com/docs/authentication/application-default-credentials) for Node.js. ADC provides a simple way to get credentials for use in calling Google APIs. How you [set up ADC](https://cloud.google.com/docs/authentication/provide-credentials-adc) depends on the environment where your code is running."
        },
        {
          "text": "provides a simple way to get credentials for use in calling google apis",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L61",
          "evidence": "This library provides an implementation of [Application Default Credentials (ADC)](https://cloud.google.com/docs/authentication/application-default-credentials) for Node.js. ADC provides a simple way to get credentials for use in calling Google APIs. How you [set up ADC](https://cloud.google.com/docs/authentication/provide-credentials-adc) depends on the environment where your code is running."
        },
        {
          "text": "building an application that uses google cloud platform",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L63",
          "evidence": "ADC is best suited for cases when the call needs to have the same identity and authorization level for the application independent of the user. This is the recommended approach to authorize calls to Cloud APIs, particularly when you're building an application that uses Google Cloud Platform."
        },
        {
          "text": "supports workload identity federation to access google cloud resources from non-google cloud platforms including amazon web services (aws), microsoft azure or any identity provider that supports openid connect (oidc)",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L65",
          "evidence": "Application Default Credentials also supports Workload Identity Federation to access Google Cloud resources from non-Google Cloud platforms including Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC). Workload Identity Federation is recommended for non-Google Cloud environments as it avoids the need to download, manage and store service account private keys locally, see: [Workload Identity Federation](#workload-identity-federation)."
        },
        {
          "text": "manage and store service account private keys locally, see: workload identity federation",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L65",
          "evidence": "Application Default Credentials also supports Workload Identity Federation to access Google Cloud resources from non-Google Cloud platforms including Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC). Workload Identity Federation is recommended for non-Google Cloud environments as it avoids the need to download, manage and store service account private keys locally, see: [Workload Identity Federation](#workload-identity-federation)."
        },
        {
          "text": "enable the api you want to use",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L67",
          "evidence": "#### Enable the API you want to use"
        },
        {
          "text": "enable the apis you'd like to call",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L69",
          "evidence": "Before making your API call, you must be sure the API you're calling has been enabled. Go to **APIs & Auth** > **APIs** in the [Google Developers Console](https://console.cloud.google.com/) and enable the APIs you'd like to call. For the example below, you must enable the `DNS API`."
        },
        {
          "text": "enable the `dns api`",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L69",
          "evidence": "Before making your API call, you must be sure the API you're calling has been enabled. Go to **APIs & Auth** > **APIs** in the [Google Developers Console](https://console.cloud.google.com/) and enable the APIs you'd like to call. For the example below, you must enable the `DNS API`."
        },
        {
          "text": "create the correct credential type for you, depending upon the environment your code is running under",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L74",
          "evidence": "Rather than manually creating an OAuth2 client, JWT client, or Compute client, the auth library can create the correct credential type for you, depending upon the environment your code is running under."
        },
        {
          "text": "provide an `expiry_date` and the token is expired",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L99",
          "evidence": "This library comes with an [OAuth2](https://developers.google.com/identity/protocols/OAuth2) client that allows you to retrieve an access token and refreshes the token and retry the request seamlessly if you also provide an `expiry_date` and the token is expired. The basics of Google's OAuth2 implementation is explained on [Google authorization and Authentication documentation](https://developers.google.com/accounts/docs/OAuth2Login)."
        },
        {
          "text": "allows you to retrieve an access token and refreshes the token and retry the request seamlessly if you also provide an `expiry_date` and the token is expired",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L99",
          "evidence": "This library comes with an [OAuth2](https://developers.google.com/identity/protocols/OAuth2) client that allows you to retrieve an access token and refreshes the token and retry the request seamlessly if you also provide an `expiry_date` and the token is expired. The basics of Google's OAuth2 implementation is explained on [Google authorization and Authentication documentation](https://developers.google.com/accounts/docs/OAuth2Login)."
        },
        {
          "text": "create a new oauth2client, and go through the oauth2 content",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L140",
          "evidence": "* Create a new OAuth2Client, and go through the OAuth2 content"
        },
        {
          "text": "create an oauth client to authorize the api call",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L145",
          "evidence": "// create an oAuth client to authorize the API call.  Secrets are kept in a `keys.json` file,"
        },
        {
          "text": "generate the url that will be used for the consent dialog",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L153",
          "evidence": "// Generate the url that will be used for the consent dialog."
        },
        {
          "text": "generate the url that will be used for the consent dialog",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L230",
          "evidence": "// Generate the url that will be used for the consent dialog."
        },
        {
          "text": "extend from this can utilize this parameter as well, such as `jwt` and `userrefreshclient`",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L267",
          "evidence": "Note, classes that extend from this can utilize this parameter as well, such as `JWT` and `UserRefreshClient`."
        },
        {
          "text": "support varies by api",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L278",
          "evidence": "API Key support varies by API."
        },
        {
          "text": "configure a jwt auth client and authenticate your requests, for example when using a service account",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L281",
          "evidence": "The Google Developers Console provides a `.json` file that you can use to configure a JWT auth client and authenticate your requests, for example when using a service account."
        },
        {
          "text": "provide them using an environment variable",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L300",
          "evidence": "Instead of loading credentials from a key file, you can also provide them using an environment variable.  This is particularly convenient for systems that deploy directly from source control (Heroku, App Engine, etc)."
        },
        {
          "text": "exporting your credentials:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L302",
          "evidence": "Start by exporting your credentials:"
        },
        {
          "text": "create a new client from the credentials:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L318",
          "evidence": "Now you can create a new client from the credentials:"
        },
        {
          "text": "create a jwt client",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L330",
          "evidence": "// create a JWT client"
        },
        {
          "text": "supports openid connect (oidc)",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L366",
          "evidence": "Using workload identity federation, your application can access Google Cloud resources from Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC)."
        },
        {
          "text": "allow your workload to impersonate a service account",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L368",
          "evidence": "Traditionally, applications running outside Google Cloud have used service account keys to access Google Cloud resources. Using identity federation, you can allow your workload to impersonate a service account."
        },
        {
          "text": "allow federation from aws)",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L375",
          "evidence": "- AWS needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from AWS)."
        },
        {
          "text": "configure workload identity federation from aws",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L378",
          "evidence": "Follow the detailed [instructions](https://cloud.google.com/iam/docs/access-resources-aws) on how to configure workload identity federation from AWS."
        },
        {
          "text": "generate the aws workload identity configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L384",
          "evidence": "To generate the AWS workload identity configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L384",
          "evidence": "To generate the AWS workload identity configuration, run the following command:"
        },
        {
          "text": "generate an aws configuration file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L387",
          "evidence": "# Generate an AWS configuration file."
        },
        {
          "text": "generate the configuration file in the specified output file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L401",
          "evidence": "This will generate the configuration file in the specified output file."
        },
        {
          "text": "support this soon",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L405",
          "evidence": "The gcloud create-cred-config command will be updated to support this soon."
        },
        {
          "text": "allow federation from aws)",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L413",
          "evidence": "- AWS needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from AWS)."
        },
        {
          "text": "configure workload identity federation from aws",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L416",
          "evidence": "Follow the detailed [instructions](https://cloud.google.com/iam/docs/access-resources-aws) on how to configure workload identity federation from AWS."
        },
        {
          "text": "import { awsclient, awssecuritycredentials, awssecuritycredentialssupplier, externalaccountsuppliercontext } from 'google-auth-library';",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L429",
          "evidence": "import { AwsClient, AwsSecurityCredentials, AwsSecurityCredentialsSupplier, ExternalAccountSupplierContext } from 'google-auth-library';"
        },
        {
          "text": "import { fromnodeproviderchain } from '@aws-sdk/credential-providers';",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L430",
          "evidence": "import { fromNodeProviderChain } from '@aws-sdk/credential-providers';"
        },
        {
          "text": "import { storage } from '@google-cloud/storage';",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L431",
          "evidence": "import { Storage } from '@google-cloud/storage';"
        },
        {
          "text": "implements awssecuritycredentialssupplier {",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L433",
          "evidence": "class AwsSupplier implements AwsSecurityCredentialsSupplier {"
        },
        {
          "text": "create a new auth client and use it to create service client, i",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L470",
          "evidence": "// Create a new Auth client and use it to create service client, i.e. storage."
        },
        {
          "text": "allow federation from azure)",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L490",
          "evidence": "- Azure needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from Azure)."
        },
        {
          "text": "configure workload identity federation from microsoft azure",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L494",
          "evidence": "Follow the detailed [instructions](https://cloud.google.com/iam/docs/access-resources-azure) on how to configure workload identity federation from Microsoft Azure."
        },
        {
          "text": "generate the azure workload identity configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L500",
          "evidence": "To generate the Azure workload identity configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L500",
          "evidence": "To generate the Azure workload identity configuration, run the following command:"
        },
        {
          "text": "generate an azure configuration file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L503",
          "evidence": "# Generate an Azure configuration file."
        },
        {
          "text": "generate the configuration file in the specified output file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L517",
          "evidence": "This will generate the configuration file in the specified output file."
        },
        {
          "text": "supports [openid connect (oidc)](https://openid",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L523",
          "evidence": "In order to access Google Cloud resources from an identity provider that supports [OpenID Connect (OIDC)](https://openid.net/connect/), the following requirements are needed:"
        },
        {
          "text": "allow federation from the identity provider)",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L525",
          "evidence": "- An OIDC identity provider needs to be added in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from the identity provider)."
        },
        {
          "text": "configure workload identity federation from an oidc identity provider",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L528",
          "evidence": "Follow the detailed [instructions](https://cloud.google.com/iam/docs/access-resources-oidc) on how to configure workload identity federation from an OIDC identity provider."
        },
        {
          "text": "process needs to be continuously refreshing the file location with a new oidc token prior to expiration",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L537",
          "evidence": "For file-sourced credentials, a background process needs to be continuously refreshing the file location with a new OIDC token prior to expiration."
        },
        {
          "text": "generate a file-sourced oidc configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L540",
          "evidence": "To generate a file-sourced OIDC configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L540",
          "evidence": "To generate a file-sourced OIDC configuration, run the following command:"
        },
        {
          "text": "generate an oidc configuration file for file-sourced credentials",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L543",
          "evidence": "# Generate an OIDC configuration file for file-sourced credentials."
        },
        {
          "text": "generate the configuration file in the specified output file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L563",
          "evidence": "This will generate the configuration file in the specified output file."
        },
        {
          "text": "generate a url-sourced oidc workload identity configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L569",
          "evidence": "To generate a URL-sourced OIDC workload identity configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L569",
          "evidence": "To generate a URL-sourced OIDC workload identity configuration, run the following command:"
        },
        {
          "text": "generate an oidc configuration file for url-sourced credentials",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L572",
          "evidence": "# Generate an OIDC configuration file for URL-sourced credentials."
        },
        {
          "text": "handles the creation of both",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L599",
          "evidence": "To configure X.509 certificate-sourced credentials, you must generate two separate configuration files: a primary **credential configuration file** and a **certificate configuration file**. The `gcloud iam workload-identity-pools create-cred-config` command handles the creation of both."
        },
        {
          "text": "generate two separate configuration files: a primary credential configuration file and a certificate configuration file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L599",
          "evidence": "To configure X.509 certificate-sourced credentials, you must generate two separate configuration files: a primary **credential configuration file** and a **certificate configuration file**. The `gcloud iam workload-identity-pools create-cred-config` command handles the creation of both."
        },
        {
          "text": "creates the certificate configuration file at a default, well-known location that client libraries can automatically discover",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L605",
          "evidence": "If you omit the `--credential-cert-configuration-output-file` flag, gcloud creates the certificate configuration file at a default, well-known location that client libraries can automatically discover. This is the simplest approach for most use cases."
        },
        {
          "text": "implements subjecttokensupplier {",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L662",
          "evidence": "class CustomSupplier implements SubjectTokenSupplier {"
        },
        {
          "text": "allow you to sign in with a web browser to an external identity provider account via the",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L693",
          "evidence": "[External account authorized user credentials](https://cloud.google.com/iam/docs/workforce-obtaining-short-lived-credentials#browser-based-sign-in) allow you to sign in with a web browser to an external identity provider account via the"
        },
        {
          "text": "create a configuration for the auth library to use",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L694",
          "evidence": "gcloud CLI and create a configuration for the auth library to use."
        },
        {
          "text": "generate an external account authorized user workforce identity configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L696",
          "evidence": "To generate an external account authorized user workforce identity configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L696",
          "evidence": "To generate an external account authorized user workforce identity configuration, run the following command:"
        },
        {
          "text": "generate and refresh",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L708",
          "evidence": "The auth library will then use the provided refresh token from the configuration to generate and refresh"
        },
        {
          "text": "handle providing a valid, unexpired oidc id token or saml assertion in json format",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L718",
          "evidence": "The executable must handle providing a valid, unexpired OIDC ID token or SAML assertion in JSON format"
        },
        {
          "text": "generate an executable-sourced workload identity configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L724",
          "evidence": "To generate an executable-sourced workload identity configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L724",
          "evidence": "To generate an executable-sourced workload identity configuration, run the following command:"
        },
        {
          "text": "generate a configuration file for executable-sourced credentials",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L727",
          "evidence": "# Generate a configuration file for executable-sourced credentials."
        },
        {
          "text": "run the executable",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L759",
          "evidence": "response to this file, it improves performance as it avoids the need to run the executable"
        },
        {
          "text": "handle writing to this file - the auth libraries will only attempt to read from",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L761",
          "evidence": "handle writing to this file - the auth libraries will only attempt to read from"
        },
        {
          "text": "include both the `version` and `success` fields",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L819",
          "evidence": "All response types must include both the `version` and `success` fields."
        },
        {
          "text": "include the `token_type` and one of",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L820",
          "evidence": "* Successful responses must include the `token_type` and one of"
        },
        {
          "text": "include both the `code` and `message` fields",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L823",
          "evidence": "* Error responses must include both the `code` and `message` fields."
        },
        {
          "text": "provide an optional argument to configure the service account access token lifetime",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L846",
          "evidence": "When creating a credential configuration with workload identity federation using service account impersonation, you can provide an optional argument to configure the service account access token lifetime."
        },
        {
          "text": "configure the service account access token lifetime",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L846",
          "evidence": "When creating a credential configuration with workload identity federation using service account impersonation, you can provide an optional argument to configure the service account access token lifetime."
        },
        {
          "text": "generate the configuration with configurable token lifetime, run the following command (this example uses an aws configuration, but the token lifetime can be configured for all workload identity federation providers):",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L848",
          "evidence": "To generate the configuration with configurable token lifetime, run the following command (this example uses an AWS configuration, but the token lifetime can be configured for all workload identity federation providers):"
        },
        {
          "text": "run the following command (this example uses an aws configuration, but the token lifetime can be configured for all workload identity federation providers):",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L848",
          "evidence": "To generate the configuration with configurable token lifetime, run the following command (this example uses an AWS configuration, but the token lifetime can be configured for all workload identity federation providers):"
        },
        {
          "text": "generate an aws configuration file with configurable token lifetime",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L851",
          "evidence": "# Generate an AWS configuration file with configurable token lifetime."
        },
        {
          "text": "support syncless, attribute-based single sign on",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L878",
          "evidence": "extends Google Cloud's identity capabilities to support syncless, attribute-based single sign on."
        },
        {
          "text": "extends google cloud's identity capabilities to support syncless, attribute-based single sign on",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L878",
          "evidence": "extends Google Cloud's identity capabilities to support syncless, attribute-based single sign on."
        },
        {
          "text": "supports openid connect (oidc) or saml 2",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L881",
          "evidence": "identity provider (IdP) that supports OpenID Connect (OIDC) or SAML 2.0 such as Azure Active Directory (Azure AD),"
        },
        {
          "text": "supports [openid connect (oidc)](https://openid",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L886",
          "evidence": "In order to access Google Cloud resources from an identity provider that supports [OpenID Connect (OIDC)](https://openid.net/connect/),"
        },
        {
          "text": "configure workforce identity federation",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L892",
          "evidence": "to configure workforce identity federation."
        },
        {
          "text": "process needs to be continuously refreshing the file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L904",
          "evidence": "For file-sourced credentials, a background process needs to be continuously refreshing the file"
        },
        {
          "text": "generate a file-sourced oidc configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L909",
          "evidence": "To generate a file-sourced OIDC configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L909",
          "evidence": "To generate a file-sourced OIDC configuration, run the following command:"
        },
        {
          "text": "generate an oidc configuration file for file-sourced credentials",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L912",
          "evidence": "# Generate an OIDC configuration file for file-sourced credentials."
        },
        {
          "text": "generate a file-sourced saml configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L931",
          "evidence": "To generate a file-sourced SAML configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L931",
          "evidence": "To generate a file-sourced SAML configuration, run the following command:"
        },
        {
          "text": "generate a saml configuration file for file-sourced credentials",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L934",
          "evidence": "# Generate a SAML configuration file for file-sourced credentials."
        },
        {
          "text": "generate the configuration file in the specified output file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L949",
          "evidence": "These commands generate the configuration file in the specified output file."
        },
        {
          "text": "generate a url-sourced oidc workforce identity configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L956",
          "evidence": "To generate a URL-sourced OIDC workforce identity configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L956",
          "evidence": "To generate a URL-sourced OIDC workforce identity configuration, run the following command:"
        },
        {
          "text": "generate an oidc configuration file for url-sourced credentials",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L959",
          "evidence": "# Generate an OIDC configuration file for URL-sourced credentials."
        },
        {
          "text": "generate a url-sourced saml configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L977",
          "evidence": "To generate a URL-sourced SAML configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L977",
          "evidence": "To generate a URL-sourced SAML configuration, run the following command:"
        },
        {
          "text": "generate a saml configuration file for file-sourced credentials",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L980",
          "evidence": "# Generate a SAML configuration file for file-sourced credentials."
        },
        {
          "text": "generate the configuration file in the specified output file",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L990",
          "evidence": "These commands generate the configuration file in the specified output file."
        },
        {
          "text": "handle providing a valid, unexpired oidc id token or saml assertion in json format",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1004",
          "evidence": "The executable must handle providing a valid, unexpired OIDC ID token or SAML assertion in JSON format"
        },
        {
          "text": "generate an executable-sourced workforce identity configuration, run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1010",
          "evidence": "To generate an executable-sourced workforce identity configuration, run the following command:"
        },
        {
          "text": "run the following command:",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1010",
          "evidence": "To generate an executable-sourced workforce identity configuration, run the following command:"
        },
        {
          "text": "generate a configuration file for executable-sourced credentials",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1013",
          "evidence": "# Generate a configuration file for executable-sourced credentials."
        },
        {
          "text": "run the executable",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1044",
          "evidence": "response to this file, it improves performance as it avoids the need to run the executable"
        },
        {
          "text": "handle writing to this file - the auth libraries will only attempt to read from",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1046",
          "evidence": "handle writing to this file - the auth libraries will only attempt to read from"
        },
        {
          "text": "implements subjecttokensupplier {",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1078",
          "evidence": "class CustomSupplier implements SubjectTokenSupplier {"
        },
        {
          "text": "generate the json credentials configuration file for your external identity as described above",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1113",
          "evidence": "In order to use external identities with Application Default Credentials, you need to generate the JSON credentials configuration file for your external identity as described above."
        },
        {
          "text": "export google_application_credentials=/path/to/config",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1117",
          "evidence": "export GOOGLE_APPLICATION_CREDENTIALS=/path/to/config.json"
        },
        {
          "text": "enable cloud resource manager api on the project",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1142",
          "evidence": "// or enable Cloud Resource Manager API on the project."
        },
        {
          "text": "generate with the gcloud cli unless you verify that the url fields point to a googleapis",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1162",
          "evidence": "Note that this library does not perform any validation on the token_url, token_info_url, or service_account_impersonation_url fields of the credential configuration. It is not recommended to use a credential configuration that you did not generate with the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain."
        },
        {
          "text": "perform any validation on the token_url, token_info_url, or service_account_impersonation_url fields of the credential configuration",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1162",
          "evidence": "Note that this library does not perform any validation on the token_url, token_info_url, or service_account_impersonation_url fields of the credential configuration. It is not recommended to use a credential configuration that you did not generate with the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain."
        },
        {
          "text": "run or cloud functions, or using cloud identity-aware",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1166",
          "evidence": "If your application is running on Cloud Run or Cloud Functions, or using Cloud Identity-Aware"
        },
        {
          "text": "run services, your service account will need the",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1170",
          "evidence": "For invoking Cloud Run services, your service account will need the"
        },
        {
          "text": "run invoker`](https://cloud",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1171",
          "evidence": "[`Cloud Run Invoker`](https://cloud.google.com/run/docs/authenticating/service-to-service)"
        },
        {
          "text": "provides authentication for applications where local credentials impersonates a remote service account using [iam credentials api](https://cloud",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1239",
          "evidence": "Provides authentication for applications where local credentials impersonates a remote service account using [IAM Credentials API](https://cloud.google.com/iam/docs/reference/credentials/rest)."
        },
        {
          "text": "supports credential access boundaries for now",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1310",
          "evidence": "> Notice: Only Cloud Storage supports Credential Access Boundaries for now."
        },
        {
          "text": "generate and use credentials generated from",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1313",
          "evidence": "There are two entities needed to generate and use credentials generated from"
        },
        {
          "text": "generate downscoped tokens",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1316",
          "evidence": "- Token broker: This is the entity with elevated permissions. This entity has the permissions needed to generate downscoped tokens. The common pattern of usage is to have a token broker with elevated access generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to Google Cloud Storage resources."
        },
        {
          "text": "generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to google cloud storage resources",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1316",
          "evidence": "- Token broker: This is the entity with elevated permissions. This entity has the permissions needed to generate downscoped tokens. The common pattern of usage is to have a token broker with elevated access generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to Google Cloud Storage resources."
        },
        {
          "text": "create a downscopedclient",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1346",
          "evidence": "// Use the client to create a DownscopedClient."
        },
        {
          "text": "generate short lived downscoped access tokens which will be passed to the token consumer",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1360",
          "evidence": "The broker will instantiate downscoped credentials instances that can be used to generate short lived downscoped access tokens which will be passed to the token consumer."
        },
        {
          "text": "provide it with downscoped tokens to run operations on gcs buckets",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1362",
          "evidence": "- Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker."
        },
        {
          "text": "generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on gcs buckets",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1362",
          "evidence": "- Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker."
        },
        {
          "text": "run operations on gcs buckets",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1362",
          "evidence": "- Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker."
        },
        {
          "text": "create the oauth credentials (the consumer)",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1368",
          "evidence": "// Create the OAuth credentials (the consumer)."
        },
        {
          "text": "allow the consumer to obtain new downscoped tokens on",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1372",
          "evidence": "// This will allow the consumer to obtain new downscoped tokens on"
        },
        {
          "text": "create a gcs object",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1386",
          "evidence": "// Use the consumer client to define storageOptions and create a GCS object."
        },
        {
          "text": "support legacy versions of node",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1449",
          "evidence": "Google's client libraries support legacy versions of Node.js runtimes on a"
        },
        {
          "text": "Application Default Credentials - Use Application Default Credentials when you use a single identity for all users in your application. Especially useful for applications running on Google Cloud. Application Default Credentials also support workload identity federation to access Google Cloud resources from non-Google Cloud platforms.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L50",
          "evidence": "- [Application Default Credentials](#choosing-the-correct-credential-type-automatically) - Use Application Default Credentials when you use a single identity for all users in your application. Especially useful for applications running on Google Cloud. Application Default Credentials also support workload identity federation to access Google Cloud resources from non-Google Cloud platforms."
        },
        {
          "text": "OAuth 2 - Use OAuth2 when you need to perform actions on behalf of the end user.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L51",
          "evidence": "- [OAuth 2](#oauth2) - Use OAuth2 when you need to perform actions on behalf of the end user."
        },
        {
          "text": "Workload Identity Federation - Use workload identity federation to access Google Cloud resources from Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC).",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L54",
          "evidence": "- [Workload Identity Federation](#workload-identity-federation) - Use workload identity federation to access Google Cloud resources from Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC)."
        },
        {
          "text": "Workforce Identity Federation - Use workforce identity federation to access Google Cloud resources using an external identity provider (IdP) to authenticate and authorize a workforce\u2014a group of users, such as employees, partners, and contractors\u2014using IAM, so that the users can access Google Cloud services.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L55",
          "evidence": "- [Workforce Identity Federation](#workforce-identity-federation) - Use workforce identity federation to access Google Cloud resources using an external identity provider (IdP) to authenticate and authorize a workforce\u2014a group of users, such as employees, partners, and contractors\u2014using IAM, so that the users can access Google Cloud services."
        },
        {
          "text": "Downscoped Client - Use Downscoped Client with Credential Access Boundary to generate a short-lived credential with downscoped, restricted IAM permissions that can use for Cloud Storage.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L57",
          "evidence": "- [Downscoped Client](#downscoped-client) - Use Downscoped Client with Credential Access Boundary to generate a short-lived credential with downscoped, restricted IAM permissions that can use for Cloud Storage."
        },
        {
          "text": "Create a new OAuth2Client, and go through the OAuth2 content",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L140",
          "evidence": "* Create a new OAuth2Client, and go through the OAuth2 content"
        },
        {
          "text": "*Important**: If you accept a credential configuration (credential JSON/File/Stream) from an external source for authentication to Google Cloud, you must validate it before providing it to any Google API or library. Providing an unvalidated credential configuration to Google APIs can compromise the security of your systems and data. For more information, refer to Validate credential configurations from external sources.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L341",
          "evidence": "**Important**: If you accept a credential configuration (credential JSON/File/Stream) from an external source for authentication to Google Cloud, you must validate it before providing it to any Google API or library. Providing an unvalidated credential configuration to Google APIs can compromise the security of your systems and data. For more information, refer to [Validate credential configurations from external sources](https://cloud.google.com/docs/authentication/external/externally-sourced-credentials)."
        },
        {
          "text": "A workload identity pool needs to be created.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L374",
          "evidence": "- A workload identity pool needs to be created."
        },
        {
          "text": "AWS needs to be added as an identity provider in the workload identity pool (The Google organization policy needs to allow federation from AWS).",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L375",
          "evidence": "- AWS needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from AWS)."
        },
        {
          "text": "--output-file /path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L392",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "text": "`$AWS_PROVIDER_ID`: The AWS provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L398",
          "evidence": "- `$AWS_PROVIDER_ID`: The AWS provider ID."
        },
        {
          "text": "A workload identity pool needs to be created.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L412",
          "evidence": "- A workload identity pool needs to be created."
        },
        {
          "text": "AWS needs to be added as an identity provider in the workload identity pool (The Google organization policy needs to allow federation from AWS).",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L413",
          "evidence": "- AWS needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from AWS)."
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L481",
          "evidence": "* `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "A workload identity pool needs to be created.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L489",
          "evidence": "- A workload identity pool needs to be created."
        },
        {
          "text": "Azure needs to be added as an identity provider in the workload identity pool (The Google organization policy needs to allow federation from Azure).",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L490",
          "evidence": "- Azure needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from Azure)."
        },
        {
          "text": "The Azure tenant needs to be configured for identity federation.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L491",
          "evidence": "- The Azure tenant needs to be configured for identity federation."
        },
        {
          "text": "--output-file /path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L508",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "text": "`$AZURE_PROVIDER_ID`: The Azure provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L514",
          "evidence": "- `$AZURE_PROVIDER_ID`: The Azure provider ID."
        },
        {
          "text": "A workload identity pool needs to be created.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L524",
          "evidence": "- A workload identity pool needs to be created."
        },
        {
          "text": "An OIDC identity provider needs to be added in the workload identity pool (The Google organization policy needs to allow federation from the identity provider).",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L525",
          "evidence": "- An OIDC identity provider needs to be added in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from the identity provider)."
        },
        {
          "text": "--output-file /path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L553",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "text": "`$OIDC_PROVIDER_ID`: The OIDC provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L559",
          "evidence": "- `$OIDC_PROVIDER_ID`: The OIDC provider ID."
        },
        {
          "text": "--output-file /path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L583",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "text": "`$OIDC_PROVIDER_ID`: The OIDC provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L589",
          "evidence": "- `$OIDC_PROVIDER_ID`: The OIDC provider ID."
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L620",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "`$PATH_TO_TRUST_CHAIN`: Points to the file path of the X.509 certificate trust chain file, containing any intermediate certificates required to complete the trust chain between the leaf certificate and the trust store configured in the Workload Identity Federation pool.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L624",
          "evidence": "- `$PATH_TO_TRUST_CHAIN`: Points to the file path of the X.509 certificate trust chain file, containing any intermediate certificates required to complete the trust chain between the leaf certificate and the trust store configured in the Workload Identity Federation pool."
        },
        {
          "text": "`/path/to/config.json`: Created at the path you specified. This file will contain   `\"use_default_certificate_config\": true` to instruct clients to look for the certificate configuration at the default path.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L627",
          "evidence": "- `/path/to/config.json`: Created at the path you specified. This file will contain   `\"use_default_certificate_config\": true` to instruct clients to look for the certificate configuration at the default path."
        },
        {
          "text": "`certificate_config.json`: Created at the default gcloud configuration path, which is typically `~/.config/gcloud/certificate_config.json` on Linux and macOS, or `%APPDATA%\\gcloud\\certificate_config.json` on Windows.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L628",
          "evidence": "- `certificate_config.json`: Created at the default gcloud configuration path, which is typically `~/.config/gcloud/certificate_config.json` on Linux and macOS, or `%APPDATA%\\gcloud\\certificate_config.json` on Windows."
        },
        {
          "text": "`/path/to/config.json`: Created at the path you specified. This file will contain a `\"certificate_config_location\"` field that points to your custom path.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L650",
          "evidence": "- `/path/to/config.json`: Created at the path you specified. This file will contain a `\"certificate_config_location\"` field that points to your custom path."
        },
        {
          "text": "`cert_config.json`: Created at `/custom/path/cert_config.json`, as specified by the flag.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L651",
          "evidence": "- `cert_config.json`: Created at `/custom/path/cert_config.json`, as specified by the flag."
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L687",
          "evidence": "* `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "`$LOGIN_CONFIG`: The login config file generated with the cloud console or",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L703",
          "evidence": "- `$LOGIN_CONFIG`: The login config file generated with the cloud console or"
        },
        {
          "text": "--output-file /path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L740",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "text": "`$PROVIDER_ID`: The OIDC or SAML provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L745",
          "evidence": "- `$PROVIDER_ID`: The OIDC or SAML provider ID."
        },
        {
          "text": "`$EXECUTABLE_COMMAND`: The full command to run, including arguments. Must be an absolute path to the program.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L748",
          "evidence": "- `$EXECUTABLE_COMMAND`: The full command to run, including arguments. Must be an absolute path to the program."
        },
        {
          "text": "`version`: The version of the JSON output. Currently, only version 1 is supported.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L806",
          "evidence": "* `version`: The version of the JSON output. Currently, only version 1 is supported."
        },
        {
          "text": "Successful responses must include the `token_type` and one of",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L820",
          "evidence": "* Successful responses must include the `token_type` and one of"
        },
        {
          "text": "Error responses must include both the `code` and `message` fields.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L823",
          "evidence": "* Error responses must include both the `code` and `message` fields."
        },
        {
          "text": "Access to the script should be restricted as it will be displaying credentials to stdout. This ensures that rogue processes do not gain  access to the script.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L835",
          "evidence": "* Access to the script should be restricted as it will be displaying credentials to stdout. This ensures that rogue processes do not gain  access to the script."
        },
        {
          "text": "The configuration file should not be modifiable. Write access should be restricted to avoid processes modifying the executable command portion.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L836",
          "evidence": "* The configuration file should not be modifiable. Write access should be restricted to avoid processes modifying the executable command portion."
        },
        {
          "text": "--output-file /path/to/generated/config.json \\",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L856",
          "evidence": "--output-file /path/to/generated/config.json \\"
        },
        {
          "text": "`$AWS_PROVIDER_ID`: The AWS provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L863",
          "evidence": "- `$AWS_PROVIDER_ID`: The AWS provider ID."
        },
        {
          "text": "A workforce identity pool needs to be created.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L888",
          "evidence": "- A workforce identity pool needs to be created."
        },
        {
          "text": "An OIDC or SAML 2.0 identity provider needs to be added in the workforce pool.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L889",
          "evidence": "- An OIDC or SAML 2.0 identity provider needs to be added in the workforce pool."
        },
        {
          "text": "--output-file=/path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L923",
          "evidence": "--output-file=/path/to/generated/config.json"
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L927",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "--output-file=/path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L940",
          "evidence": "--output-file=/path/to/generated/config.json"
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L945",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "--output-file=/path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L966",
          "evidence": "--output-file=/path/to/generated/config.json"
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L971",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "--output-file=/path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L987",
          "evidence": "--output-file=/path/to/generated/config.json"
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L994",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "--output-file /path/to/generated/config.json",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1026",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1030",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "`$EXECUTABLE_COMMAND`: The full command to run, including arguments. Must be an absolute path to the program.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1032",
          "evidence": "- `$EXECUTABLE_COMMAND`: The full command to run, including arguments. Must be an absolute path to the program."
        },
        {
          "text": "Access to the script should be restricted as it will be displaying credentials to stdout. This ensures that rogue processes do not gain access to the script.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1059",
          "evidence": "* Access to the script should be restricted as it will be displaying credentials to stdout. This ensures that rogue processes do not gain access to the script."
        },
        {
          "text": "The configuration file should not be modifiable. Write access should be restricted to avoid processes modifying the executable command portion.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1060",
          "evidence": "* The configuration file should not be modifiable. Write access should be restricted to avoid processes modifying the executable command portion."
        },
        {
          "text": "`$PROVIDER_ID`: The provider ID.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1102",
          "evidence": "* `$PROVIDER_ID`: The provider ID."
        },
        {
          "text": "Token broker: This is the entity with elevated permissions. This entity has the permissions needed to generate downscoped tokens. The common pattern of usage is to have a token broker with elevated access generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to Google Cloud Storage resources.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1316",
          "evidence": "- Token broker: This is the entity with elevated permissions. This entity has the permissions needed to generate downscoped tokens. The common pattern of usage is to have a token broker with elevated access generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to Google Cloud Storage resources."
        },
        {
          "text": "Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker.",
          "source_url": "https://github.com/googleapis/google-auth-library-nodejs#L1362",
          "evidence": "- Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "ianstormtaylor/permit",
      "url": "https://github.com/ianstormtaylor/permit",
      "stars": 1690,
      "language": "JavaScript",
      "features": [
        {
          "text": "import { bearer } from 'permit'",
          "source_url": "https://github.com/ianstormtaylor/permit#L44",
          "evidence": "import { Bearer } from 'permit'"
        },
        {
          "text": "run into any of these problems before while adding authentication to a node",
          "source_url": "https://github.com/ianstormtaylor/permit#L93",
          "evidence": "Don't get me wrong, Passport works great for working with OAuth providers. But if you've run into any of these problems before while adding authentication to a Node.js API, you might like Permit."
        },
        {
          "text": "handle complex oauth integrations with facebook, google, etc",
          "source_url": "https://github.com/ianstormtaylor/permit#L101",
          "evidence": "1. **API first.** Permit was designed with authenticating APIs in mind, so it's able to be _much_ leaner than others, since it doesn't need to handle complex OAuth integrations with Facebook, Google, etc."
        },
        {
          "text": "allowing it to be used for a variety of use cases depending on your server framework, your feelings about orms, your use of promises, etc",
          "source_url": "https://github.com/ianstormtaylor/permit#L113",
          "evidence": "Permit's API is very flexible, allowing it to be used for a variety of use cases depending on your server framework, your feelings about ORMs, your use of promises, etc. Here are a few examples of common patterns..."
        },
        {
          "text": "Other middleware are tightly-coupled to it. Passport stores state on the `req` object, so all your other middleware (even other third-party middleware) become tightly coupled to its implementation, making your codebase brittle.",
          "source_url": "https://github.com/ianstormtaylor/permit#L87",
          "evidence": "* **Other middleware are tightly-coupled to it.** Passport stores state on the `req` object, so all your other middleware (even other third-party middleware) become tightly coupled to its implementation, making your codebase brittle."
        },
        {
          "text": "It's not very actively maintained. Passport's focus on OAuth providers means that it takes on a _huge_ amount of scope, across a lot of repositories, many of which are not actively maintained anymore.",
          "source_url": "https://github.com/ianstormtaylor/permit#L91",
          "evidence": "* **It's not very actively maintained.** Passport's focus on OAuth providers means that it takes on a _huge_ amount of scope, across a lot of repositories, many of which are not actively maintained anymore."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "ashutosh1206/Crypton",
      "url": "https://github.com/ashutosh1206/Crypton",
      "stars": 1587,
      "language": "Python",
      "features": [
        {
          "text": "implementing in real world",
          "source_url": "https://github.com/ashutosh1206/Crypton#L10",
          "evidence": "**WARNING**: The author in no way guarantees that the code is secure. The library is only meant for educational purposes and the code should not be used for implementing in real world. All the example scripts in the library are *trivial* implementations."
        },
        {
          "text": "create this library",
          "source_url": "https://github.com/ashutosh1206/Crypton#L13",
          "evidence": "* _Motivation_- What motivated me to create this library"
        },
        {
          "text": "provide a platform for learning attacks in crypto and for experienced ctf players to practice challenges systematically divided into attacks associated with different sub-domains in crypto",
          "source_url": "https://github.com/ashutosh1206/Crypton#L22",
          "evidence": "Help CTF players and individuals interested in the field of Cryptography provide a platform for learning attacks in crypto and for experienced CTF players to practice challenges systematically divided into attacks associated with different sub-domains in crypto. Also, illustrate through various attack explanations how proper implementation of protocols is crucial."
        },
        {
          "text": "generate a valid authentication tag of message m1 \\|\\| m2 (concatenation) given mac(m1) | <ul><li>- [x] [\\[link\\]](https://github",
          "source_url": "https://github.com/ashutosh1206/Crypton#L83",
          "evidence": "| 3     | [Length Extension Attack on CBC-MAC](https://github.com/ashutosh1206/Crypton/tree/master/Message-Authentication-Code/Attack-Length-Extension-CBC-MAC)- generate a valid authentication tag of message M1 \\|\\| M2 (concatenation) given MAC(M1) | <ul><li>- [x] [\\[link\\]](https://github.com/ashutosh1206/Crypton/blob/master/Message-Authentication-Code/Attack-Length-Extension-CBC-MAC/README.md)</li></ul> | <ul><li>- [x] [\\[link\\]](https://github.com/ashutosh1206/Crypton/blob/master/Message-Authentication-Code/Attack-Length-Extension-CBC-MAC/CBC-Length-Extension.py) </li></ul>| <ul><li>- [ ] </li></ul> |"
        },
        {
          "text": "implementing ae with macs: encrypt and mac, mac then encrypt and encrypt then mac| <ul><li>- [x] [\\[link\\]](https://github",
          "source_url": "https://github.com/ashutosh1206/Crypton#L113",
          "evidence": "| 2     | [AE with MACs](https://github.com/ashutosh1206/Crypton/tree/master/Authenticated-Encryption/AE-with-MACs)- different techniques of implementing AE with MACs: Encrypt and MAC, MAC then encrypt and encrypt then MAC| <ul><li>- [x] [\\[link\\]](https://github.com/ashutosh1206/Crypton/tree/master/Authenticated-Encryption#authenticated-encryption-using-macs)</li></ul> | <ul><li>- [ ] </li></ul>| <ul><li>- [ ] </li></ul> |"
        },
        {
          "text": "*WARNING**: The author in no way guarantees that the code is secure. The library is only meant for educational purposes and the code should not be used for implementing in real world. All the example scripts in the library are *trivial* implementations.",
          "source_url": "https://github.com/ashutosh1206/Crypton#L10",
          "evidence": "**WARNING**: The author in no way guarantees that the code is secure. The library is only meant for educational purposes and the code should not be used for implementing in real world. All the example scripts in the library are *trivial* implementations."
        },
        {
          "text": "_Motivation_- What motivated me to create this library",
          "source_url": "https://github.com/ashutosh1206/Crypton#L13",
          "evidence": "* _Motivation_- What motivated me to create this library"
        },
        {
          "text": "_Future Plans/TODO_- Attacks/concepts that are to be included soon",
          "source_url": "https://github.com/ashutosh1206/Crypton#L16",
          "evidence": "* _Future Plans/TODO_- Attacks/concepts that are to be included soon"
        },
        {
          "text": "+ Implementation of HBA on padded messages",
          "source_url": "https://github.com/ashutosh1206/Crypton#L165",
          "evidence": "+ Implementation of HBA on padded messages"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "invertase/react-native-apple-authentication",
      "url": "https://github.com/invertase/react-native-apple-authentication",
      "stars": 1549,
      "language": "JavaScript",
      "features": [
        {
          "text": "support for apple authentication on ios and android, including support for all `applebutton` variants",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L18",
          "evidence": "A well typed React Native library providing support for Apple Authentication on iOS and Android, including support for all `AppleButton` variants."
        },
        {
          "text": "allow you to develop using ios version `13` and higher, when the apis for sign in with apple became available",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L30",
          "evidence": "- (iOS only) You are using Xcode version `11` or higher. This will allow you to develop using iOS version `13` and higher, when the APIs for Sign In with Apple became available."
        },
        {
          "text": "support and introduced a few breaking changes with how methods are accessed",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L35",
          "evidence": "Version 2 added Android support and introduced a few breaking changes with how methods are accessed. Please see the [Migration Guide](docs/MIGRATION.md)."
        },
        {
          "text": "supports react native auto-linking",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L45",
          "evidence": "You will not have to manually link this module as it supports React Native auto-linking."
        },
        {
          "text": "enable the sign in with apple capability in your app, set the ios",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L49",
          "evidence": "To enable the Sign In with Apple capability in your app, set the ios.usesAppleSignIn property to true in your project's app config:"
        },
        {
          "text": "run `npx expo prebuild`",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L60",
          "evidence": "You may also need to run `npx expo prebuild`."
        },
        {
          "text": "import the `appleauth` ([api documentation](docs/interfaces/_lib_index_d_",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L78",
          "evidence": "Import the `appleAuth` ([API documentation](docs/interfaces/_lib_index_d_.md#66)) module and the `AppleButton` ([API documentation](docs/interfaces/_lib_index_d_.applebuttonprops.md)) exported member element from the `@invertase/react-native-apple-authentication` library. Setup an event handler (`onPress`) to kick start the authentication request."
        },
        {
          "text": "import react from 'react';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L83",
          "evidence": "import React from 'react';"
        },
        {
          "text": "import { view } from 'react-native';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L84",
          "evidence": "import { View } from 'react-native';"
        },
        {
          "text": "import { applebutton } from '@invertase/react-native-apple-authentication';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L85",
          "evidence": "import { AppleButton } from '@invertase/react-native-apple-authentication';"
        },
        {
          "text": "implement the login process",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L108",
          "evidence": "#### 2. Implement the login process"
        },
        {
          "text": "import { appleauth } from '@invertase/react-native-apple-authentication';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L112",
          "evidence": "import { appleAuth } from '@invertase/react-native-apple-authentication';"
        },
        {
          "text": "performs login request",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L115",
          "evidence": "// performs login request"
        },
        {
          "text": "import react, { useeffect } from 'react';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L140",
          "evidence": "import React, { useEffect } from 'react';"
        },
        {
          "text": "import { view } from 'react-native';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L141",
          "evidence": "import { View } from 'react-native';"
        },
        {
          "text": "import { appleauth, applebutton } from '@invertase/react-native-apple-authentication';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L142",
          "evidence": "import { appleAuth, AppleButton } from '@invertase/react-native-apple-authentication';"
        },
        {
          "text": "implement the logout process",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L160",
          "evidence": "#### 4. Implement the logout process"
        },
        {
          "text": "allow for proper authentication on android",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L169",
          "evidence": "Make sure to correctly configure your Apple developer account to allow for proper authentication on Android. You can checkout [our guide](docs/ANDROID_EXTRA.md) for more info."
        },
        {
          "text": "configure your apple developer account to allow for proper authentication on android",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L169",
          "evidence": "Make sure to correctly configure your Apple developer account to allow for proper authentication on Android. You can checkout [our guide](docs/ANDROID_EXTRA.md) for more info."
        },
        {
          "text": "import react from 'react';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L173",
          "evidence": "import React from 'react';"
        },
        {
          "text": "import { view } from 'react-native';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L174",
          "evidence": "import { View } from 'react-native';"
        },
        {
          "text": "import { appleauthandroid, applebutton } from '@invertase/react-native-apple-authentication';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L175",
          "evidence": "import { appleAuthAndroid, AppleButton } from '@invertase/react-native-apple-authentication';"
        },
        {
          "text": "implement the login process",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L196",
          "evidence": "#### 2. Implement the login process"
        },
        {
          "text": "import { appleauthandroid } from '@invertase/react-native-apple-authentication';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L200",
          "evidence": "import { appleAuthAndroid } from '@invertase/react-native-apple-authentication';"
        },
        {
          "text": "import 'react-native-get-random-values';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L201",
          "evidence": "import 'react-native-get-random-values';"
        },
        {
          "text": "import { v4 as uuid } from 'uuid'",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L202",
          "evidence": "import { v4 as uuid } from 'uuid'"
        },
        {
          "text": "generate secure, random values for state and nonce",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L205",
          "evidence": "// Generate secure, random values for state and nonce"
        },
        {
          "text": "configure the request",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L209",
          "evidence": "// Configure the request"
        },
        {
          "text": "implement the login process on web",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L250",
          "evidence": "#### 2. Implement the login process on web"
        },
        {
          "text": "import applesignin from 'react-apple-signin-auth';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L252",
          "evidence": "import AppleSignin from 'react-apple-signin-auth';"
        },
        {
          "text": "export default myapplesigninbutton;",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L288",
          "evidence": "export default MyAppleSigninButton;"
        },
        {
          "text": "import crypto from 'crypto';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L307",
          "evidence": "import crypto from 'crypto';"
        },
        {
          "text": "import applesigninauth from 'apple-signin-auth';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L308",
          "evidence": "import appleSigninAuth from 'apple-signin-auth';"
        },
        {
          "text": "supporting multi language, you can add cfbundleallowmixedlocalizations key to info",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L340",
          "evidence": "- For supporting multi language, you can add CFBundleAllowMixedLocalizations key to Info.plist."
        },
        {
          "text": "import { appleauth } from '@invertase/react-native-apple-authentication';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L348",
          "evidence": "import { appleAuth } from '@invertase/react-native-apple-authentication';"
        },
        {
          "text": "import { jwtdecode } from 'jwt-decode';",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L349",
          "evidence": "import { jwtDecode } from 'jwt-decode';"
        },
        {
          "text": "manage apple account](https://appleid",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L375",
          "evidence": "If you are using a simulator, go to [Manage Apple Account](https://appleid.apple.com/account/manage)."
        },
        {
          "text": "(iOS only) You are using Xcode version `11` or higher. This will allow you to develop using iOS version `13` and higher, when the APIs for Sign In with Apple became available.",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L30",
          "evidence": "- (iOS only) You are using Xcode version `11` or higher. This will allow you to develop using iOS version `13` and higher, when the APIs for Sign In with Apple became available."
        },
        {
          "text": "Auth0 Implementation",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L69",
          "evidence": "- [Auth0 Implementation](docs/Auth0.md)"
        },
        {
          "text": "For Android support, a couple extra steps are required on your Apple developer account. Checkout our guide for more info.",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L71",
          "evidence": "- For Android support, a couple extra steps are required on your Apple developer account. Checkout [our guide](docs/ANDROID_EXTRA.md) for more info."
        },
        {
          "text": "Based on the Firebase implementation guidelines the nonce provided to `appleAuth.performRequest` (iOS) and `appleAuthAndroid.configure` (Android) is automatically SHA256-hashed.",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L300",
          "evidence": "- Based on the [Firebase implementation guidelines](https://firebase.google.com/docs/auth/ios/apple#sign_in_with_apple_and_authenticate_with_firebase) the nonce provided to `appleAuth.performRequest` (iOS) and `appleAuthAndroid.configure` (Android) is automatically SHA256-hashed."
        },
        {
          "text": "- For supporting multi language, you can add CFBundleAllowMixedLocalizations key to Info.plist.",
          "source_url": "https://github.com/invertase/react-native-apple-authentication#L340",
          "evidence": "- For supporting multi language, you can add CFBundleAllowMixedLocalizations key to Info.plist."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "AzureAD/microsoft-authentication-library-for-dotnet",
      "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet",
      "stars": 1476,
      "language": "C#",
      "features": [
        {
          "text": "supports [azure ad b2c](https://azure",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L3",
          "evidence": "The MSAL library for .NET is part of the [Microsoft identity platform for developers](https://aka.ms/aaddevv2) (formerly named Azure AD) v2.0. It enables you to acquire security tokens to call protected APIs. It uses industry standard OAuth2 and OpenID Connect. The library also supports [Azure AD B2C](https://azure.microsoft.com/services/active-directory-b2c/)."
        },
        {
          "text": "enables you to acquire security tokens to call protected apis",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L3",
          "evidence": "The MSAL library for .NET is part of the [Microsoft identity platform for developers](https://aka.ms/aaddevv2) (formerly named Azure AD) v2.0. It enables you to acquire security tokens to call protected APIs. It uses industry standard OAuth2 and OpenID Connect. The library also supports [Azure AD B2C](https://azure.microsoft.com/services/active-directory-b2c/)."
        },
        {
          "text": "support policy](",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L16",
          "evidence": "See [Long Term Support policy](./supportPolicy.md) for details."
        },
        {
          "text": "support phase|end of support |",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L20",
          "evidence": "| Major Version | Last Release | Patch Release Date  | Support Phase|End of Support |"
        },
        {
          "text": "include bug fixes or features with non-breaking (additive) api changes",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L38",
          "evidence": "> Minor versions include bug fixes or features with non-breaking (additive) API changes. It is expected that applications using the library can upgrade through the IDE or CLI with no friction. We will not patch old minor versions of the library. When opening new issues, please confirm that you are using the latest minor version."
        },
        {
          "text": "enable you and microsoft to collect data from users of your applications",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L72",
          "evidence": "The software may collect information about you and your use of the software and send it to Microsoft. Microsoft may use this information to provide services and improve our products and services. You may turn off the telemetry as described in the repository. There are also some features in the software that may enable you and Microsoft to collect data from users of your applications. If you use these features, you must comply with applicable law, including providing appropriate notices to users of your applications together with a copy of Microsoft's privacy statement. Our privacy statement is located at https://go.microsoft.com/fwlink/?LinkID=824704. You can learn more about data collection and use in the help documentation and our privacy statement. Your use of the software operates as your consent to these practices."
        },
        {
          "text": "provide services and improve our products and services",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L72",
          "evidence": "The software may collect information about you and your use of the software and send it to Microsoft. Microsoft may use this information to provide services and improve our products and services. You may turn off the telemetry as described in the repository. There are also some features in the software that may enable you and Microsoft to collect data from users of your applications. If you use these features, you must comply with applicable law, including providing appropriate notices to users of your applications together with a copy of Microsoft's privacy statement. Our privacy statement is located at https://go.microsoft.com/fwlink/?LinkID=824704. You can learn more about data collection and use in the help documentation and our privacy statement. Your use of the software operates as your consent to these practices."
        },
        {
          "text": "Major versions are supported for twelve months after the release of the next major version.",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L34",
          "evidence": "- Major versions are supported for twelve months after the release of the next major version."
        },
        {
          "text": "Minor versions older than N-1 are not supported.",
          "source_url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L35",
          "evidence": "- Minor versions older than N-1 are not supported."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "dgrubelic/vue-authenticate",
      "url": "https://github.com/dgrubelic/vue-authenticate",
      "stars": 1433,
      "language": "JavaScript",
      "features": [
        {
          "text": "process of rewrite and will be released soon",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L1",
          "evidence": "[**WARNING**]: README file is currently in process of rewrite and will be released soon."
        },
        {
          "text": "provides local login/registration as well as social login using github, facebook, google and other oauth providers",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L7",
          "evidence": "**vue-authenticate** is easily configurable solution for [Vue.js](https://vuejs.org/) that provides local login/registration as well as Social login using Github, Facebook, Google and other OAuth providers."
        },
        {
          "text": "import vue from 'vue'",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L37",
          "evidence": "import Vue from 'vue'"
        },
        {
          "text": "import vueaxios from 'vue-axios'",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L38",
          "evidence": "import VueAxios from 'vue-axios'"
        },
        {
          "text": "import vueauthenticate from 'vue-authenticate'",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L39",
          "evidence": "import VueAuthenticate from 'vue-authenticate'"
        },
        {
          "text": "import axios from 'axios';",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L40",
          "evidence": "import axios from 'axios';"
        },
        {
          "text": "execute application logic after successful login",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L61",
          "evidence": "// Execute application logic after successful login"
        },
        {
          "text": "execute application logic after successful registration",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L67",
          "evidence": "// Execute application logic after successful registration"
        },
        {
          "text": "execute application logic after successful social authentication",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L86",
          "evidence": "// Execute application logic after successful social authentication"
        },
        {
          "text": "import and initialize all required libraries",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L102",
          "evidence": "#### Import and initialize all required libraries"
        },
        {
          "text": "import vue from 'vue'",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L106",
          "evidence": "import Vue from 'vue'"
        },
        {
          "text": "import vuex from 'vuex'",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L107",
          "evidence": "import Vuex from 'vuex'"
        },
        {
          "text": "import vueaxios from 'vue-axios'",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L108",
          "evidence": "import VueAxios from 'vue-axios'"
        },
        {
          "text": "import { vueauthenticate } from 'vue-authenticate'",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L109",
          "evidence": "import { VueAuthenticate } from 'vue-authenticate'"
        },
        {
          "text": "import axios from 'axios';",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L110",
          "evidence": "import axios from 'axios';"
        },
        {
          "text": "export default new vuex",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L140",
          "evidence": "export default new Vuex.Store({"
        },
        {
          "text": "perform vueauthenticate login using vuex actions",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L163",
          "evidence": "// Perform VueAuthenticate login using Vuex actions"
        },
        {
          "text": "import store from '",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L181",
          "evidence": "import store from './store.js'"
        },
        {
          "text": "*vue-authenticate** is easily configurable solution for Vue.js that provides local login/registration as well as Social login using Github, Facebook, Google and other OAuth providers.",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L7",
          "evidence": "**vue-authenticate** is easily configurable solution for [Vue.js](https://vuejs.org/) that provides local login/registration as well as Social login using Github, Facebook, Google and other OAuth providers."
        },
        {
          "text": "*WARNING:** From version 1.3.0 default request library is `axios` using `vue-axios` wrapper plugin.",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L15",
          "evidence": "**WARNING:** From version 1.3.0 default request library is `axios` using `vue-axios` wrapper plugin."
        },
        {
          "text": "*Important**: You must set both `request` and `response` interceptors at all times.",
          "source_url": "https://github.com/dgrubelic/vue-authenticate#L204",
          "evidence": "**Important**: You must set both `request` and `response` interceptors at all times."
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    },
    {
      "name": "akto-api-security/akto",
      "url": "https://github.com/akto-api-security/akto",
      "stars": 1393,
      "language": "Java",
      "features": [
        {
          "text": "offers coverage for all owasp top 10 and hackerone top 10 categories including bola, authentication, ssrf, xss, security configurations, etc",
          "source_url": "https://github.com/akto-api-security/akto#L58",
          "evidence": "Akto is an instant, open source API security platform that takes only 60 secs to get started. Akto is used by security teams to maintain a continuous inventory of APIs, test APIs for vulnerabilities and find runtime issues. Akto offers coverage for all OWASP top 10 and HackerOne Top 10 categories including BOLA, authentication, SSRF, XSS, security configurations, etc. Akto's powerful testing engine runs variety of business logic tests by reading traffic data to understand API traffic pattern leading to reduced false positives. Akto can integrate with multiple traffic sources - burpsuite, AWS, postman, GCP, gateways, etc. Here is our [public roadmap](https://github.com/orgs/akto-api-security/projects/8) for this quarter."
        },
        {
          "text": "integrate with multiple traffic sources - burpsuite, aws, postman, gcp, gateways, etc",
          "source_url": "https://github.com/akto-api-security/akto#L58",
          "evidence": "Akto is an instant, open source API security platform that takes only 60 secs to get started. Akto is used by security teams to maintain a continuous inventory of APIs, test APIs for vulnerabilities and find runtime issues. Akto offers coverage for all OWASP top 10 and HackerOne Top 10 categories including BOLA, authentication, SSRF, XSS, security configurations, etc. Akto's powerful testing engine runs variety of business logic tests by reading traffic data to understand API traffic pattern leading to reduced false positives. Akto can integrate with multiple traffic sources - burpsuite, AWS, postman, GCP, gateways, etc. Here is our [public roadmap](https://github.com/orgs/akto-api-security/projects/8) for this quarter."
        },
        {
          "text": "runs variety of business logic tests by reading traffic data to understand api traffic pattern leading to reduced false positives",
          "source_url": "https://github.com/akto-api-security/akto#L58",
          "evidence": "Akto is an instant, open source API security platform that takes only 60 secs to get started. Akto is used by security teams to maintain a continuous inventory of APIs, test APIs for vulnerabilities and find runtime issues. Akto offers coverage for all OWASP top 10 and HackerOne Top 10 categories including BOLA, authentication, SSRF, XSS, security configurations, etc. Akto's powerful testing engine runs variety of business logic tests by reading traffic data to understand API traffic pattern leading to reduced false positives. Akto can integrate with multiple traffic sources - burpsuite, AWS, postman, GCP, gateways, etc. Here is our [public roadmap](https://github.com/orgs/akto-api-security/projects/8) for this quarter."
        },
        {
          "text": "enables security and engineering teams to secure their apis by doing three things:",
          "source_url": "https://github.com/akto-api-security/akto#L61",
          "evidence": "Akto enables security and engineering teams to secure their APIs by doing three things:"
        },
        {
          "text": "run business logic tests in ci/cd](https://docs",
          "source_url": "https://github.com/akto-api-security/akto#L64",
          "evidence": "2. [Run business logic tests in CI/CD](https://docs.akto.io/testing/run-test)"
        },
        {
          "text": "create inventory",
          "source_url": "https://github.com/akto-api-security/akto#L72",
          "evidence": "Step 1: Create inventory"
        },
        {
          "text": "run the following commands to install akto",
          "source_url": "https://github.com/akto-api-security/akto#L83",
          "evidence": "Run the following commands to install Akto. You'll need to have curl and Docker installed in order to run the container.."
        },
        {
          "text": "run the container",
          "source_url": "https://github.com/akto-api-security/akto#L83",
          "evidence": "Run the following commands to install Akto. You'll need to have curl and Docker installed in order to run the container.."
        },
        {
          "text": "run `docker-compose up -d`",
          "source_url": "https://github.com/akto-api-security/akto#L86",
          "evidence": "3. Run `docker-compose up -d`"
        },
        {
          "text": "provide your application's mirrored traffic (0 performance impact)",
          "source_url": "https://github.com/akto-api-security/akto#L104",
          "evidence": "Akto is really powerful in Cloud deployment if you can provide your application's mirrored traffic (0 performance impact). You would also be able to schedule tests in CI/CD and invite more team members on the dashboard. For that, you should install Akto Enterprise edition available [here](https://stairway.akto.io). Read more about it [here](https://www.akto.io/pricing)"
        },
        {
          "text": "export akto_mongo_conn=\"mongodb://localhost:27017\"`",
          "source_url": "https://github.com/akto-api-security/akto#L182",
          "evidence": "3. `export AKTO_MONGO_CONN=\"mongodb://localhost:27017\"`"
        },
        {
          "text": "export dashboard_mode=\"local_deploy\"`",
          "source_url": "https://github.com/akto-api-security/akto#L183",
          "evidence": "4. `export DASHBOARD_MODE=\"local_deploy\"`"
        },
        {
          "text": "export akto_mongo_conn=\"mongodb://localhost:27017\"`",
          "source_url": "https://github.com/akto-api-security/akto#L192",
          "evidence": "4. `export AKTO_MONGO_CONN=\"mongodb://localhost:27017\"`"
        },
        {
          "text": "run the following command to run testing cli tool",
          "source_url": "https://github.com/akto-api-security/akto#L199",
          "evidence": "Run the following command to run testing CLI tool"
        },
        {
          "text": "generate test report on host machine",
          "source_url": "https://github.com/akto-api-security/akto#L202",
          "evidence": "docker run -v ./:/out  \\ # needed to generate test report on host machine"
        },
        {
          "text": "run the following before running web server -",
          "source_url": "https://github.com/akto-api-security/akto#L220",
          "evidence": "2. To debug backend, run the following before running web server -"
        },
        {
          "text": "enable debugging on your java process",
          "source_url": "https://github.com/akto-api-security/akto#L221",
          "evidence": "a. Set MAVEN_OPTS variable to enable debugging on your Java process"
        },
        {
          "text": "export maven_opts=\"-xdebug -xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8081, -dcom",
          "source_url": "https://github.com/akto-api-security/akto#L223",
          "evidence": "export MAVEN_OPTS=\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8081, -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false\""
        },
        {
          "text": "process by id\u201d and save the file",
          "source_url": "https://github.com/akto-api-security/akto#L227",
          "evidence": "c.  Attach the Java debugger from Run and Debug mode. If you are doing this for the first time, click on \u201cCreate launch.json file\u201d and then \u201cAdd configuration\u201d. Choose \u201cJava: Attach process by ID\u201d and save the file. <br/>"
        },
        {
          "text": "run and debug mode",
          "source_url": "https://github.com/akto-api-security/akto#L227",
          "evidence": "c.  Attach the Java debugger from Run and Debug mode. If you are doing this for the first time, click on \u201cCreate launch.json file\u201d and then \u201cAdd configuration\u201d. Choose \u201cJava: Attach process by ID\u201d and save the file. <br/>"
        },
        {
          "text": "process to attach the debugger",
          "source_url": "https://github.com/akto-api-security/akto#L229",
          "evidence": "d. A list of running Java processes with show up. Select the web server process to attach the debugger"
        },
        {
          "text": "*Note**: If using Docker Desktop, consider changing the memory allocation to 8 GB for better performance",
          "source_url": "https://github.com/akto-api-security/akto#L129",
          "evidence": "**Note**: If using Docker Desktop, consider changing the memory allocation to 8 GB for better performance"
        },
        {
          "text": "-e API_COLLECTION_ID='123' \\ # api collection id on which you want to run tests",
          "source_url": "https://github.com/akto-api-security/akto#L206",
          "evidence": "-e API_COLLECTION_ID='123' \\ # api collection id on which you want to run tests"
        },
        {
          "text": "-e TEST_APIS='https://demo.com/api/books https://demo.com/api/cars' \\ # space separated apis from the api collection on which you want to run tests. If not present, all apis in the collection will be tested. [optional]",
          "source_url": "https://github.com/akto-api-security/akto#L207",
          "evidence": "-e TEST_APIS='https://demo.com/api/books https://demo.com/api/cars' \\ # space separated apis from the api collection on which you want to run tests. If not present, all apis in the collection will be tested. [optional]"
        }
      ],
      "feature_count": 0,
      "coverage": 0.0
    }
  ],
  "features": [
    {
      "text": "provides support for enforcing authorization based on various [access control models](https://en",
      "normalized_text": "Provides support for enforcing authorization based on various [access control models](https://en",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L16",
          "evidence": "Casbin is a powerful and efficient open-source access control library for Golang projects. It provides support for enforcing authorization based on various [access control models](https://en.wikipedia.org/wiki/Computer_security_model)."
        },
        {
          "url": "https://github.com/casbin/casbin#L16",
          "evidence": "Casbin is a powerful and efficient open-source access control library for Golang projects. It provides support for enforcing authorization based on various [access control models](https://en.wikipedia.org/wiki/Computer_security_model)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "build auth with fraud prevention, faster",
      "normalized_text": "Build auth with fraud prevention, faster",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L28",
          "evidence": "<a href=\"https://stytch.com/docs?utm_source=oss-sponsorship&utm_medium=paid_sponsorship&utm_campaign=casbin\"><b>Build auth with fraud prevention, faster.</b><br/> Try Stytch for API-first authentication, user & org management, multi-tenant SSO, MFA, device fingerprinting, and more.</a>"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports paths like ``/res/*``, ``/res/:id`` and http methods like ``get``, ``post``, ``put``, ``delete``",
      "normalized_text": "Supports paths like ``/res/*``, ``/res/:id`` and http methods like ``get``, ``post``, ``put``, ``delete``",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L73",
          "evidence": "8. **[RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer)**: supports paths like ``/res/*``, ``/res/:id`` and HTTP methods like ``GET``, ``POST``, ``PUT``, ``DELETE``."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow and deny authorizations are supported, deny overrides the allow",
      "normalized_text": "Allow and deny authorizations are supported, deny overrides the allow",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L74",
          "evidence": "9. **Deny-override**: both allow and deny authorizations are supported, deny overrides the allow."
        },
        {
          "url": "https://github.com/casbin/casbin#L139",
          "evidence": "1. enforce the policy in the classic ``{subject, object, action}`` form or a customized form as you defined, both allow and deny authorizations are supported."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "customize your own access control model by combining the available models",
      "normalized_text": "Customize your own access control model by combining the available models",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L79",
          "evidence": "In Casbin, an access control model is abstracted into a CONF file based on the **PERM metamodel (Policy, Effect, Request, Matchers)**. So switching or upgrading the authorization mechanism for a project is just as simple as modifying a configuration. You can customize your own access control model by combining the available models. For example, you can get RBAC roles and ABAC attributes together inside one model and share one set of policy rules."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support multi-line mode by appending '\\\\' in the end:",
      "normalized_text": "Support multi-line mode by appending '\\\\' in the end:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L114",
          "evidence": "We also support multi-line mode by appending '\\\\'  in the end:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "handle the storage of the access control model and its policy",
      "normalized_text": "Handle the storage of the access control model and its policy",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L140",
          "evidence": "2. handle the storage of the access control model and its policy."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage the role-user mappings and role-role mappings (aka role hierarchy in rbac)",
      "normalized_text": "Manage the role-user mappings and role-role mappings (aka role hierarchy in rbac)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L141",
          "evidence": "3. manage the role-user mappings and role-role mappings (aka role hierarchy in RBAC)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support built-in superuser like ``root`` or ``administrator``",
      "normalized_text": "Support built-in superuser like ``root`` or ``administrator``",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L142",
          "evidence": "4. support built-in superuser like ``root`` or ``administrator``. A superuser can do anything without explicit permissions."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support the rule matching",
      "normalized_text": "Support the rule matching",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L143",
          "evidence": "5. multiple built-in operators to support the rule matching. For example, ``keyMatch`` can map a resource key ``/foo/bar`` to the pattern ``/foo*``."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage the list of users or roles",
      "normalized_text": "Manage the list of users or roles",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L148",
          "evidence": "2. manage the list of users or roles. I believe it's more convenient for the project itself to manage these entities. Users usually have their passwords, and Casbin is not designed as a password container. However, Casbin stores the user-role mapping for the RBAC scenario."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage these entities",
      "normalized_text": "Manage these entities",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L148",
          "evidence": "2. manage the list of users or roles. I believe it's more convenient for the project itself to manage these entities. Users usually have their passwords, and Casbin is not designed as a password container. However, Casbin stores the user-role mapping for the RBAC scenario."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides functionality such as ``syntax highlighting`` and ``code completion``, like an ide for a programming language",
      "normalized_text": "Provides functionality such as ``syntax highlighting`` and ``code completion``, like an ide for a programming language",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L162",
          "evidence": "You can also use the online editor (https://casbin.org/editor/) to write your Casbin model and policy in your web browser. It provides functionality such as ``syntax highlighting`` and ``code completion``, just like an IDE for a programming language."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "performs on the resource",
      "normalized_text": "Performs on the resource",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L183",
          "evidence": "act := \"read\" // the operation that the user performs on the resource."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides api for permission management at run-time",
      "normalized_text": "Provides api for permission management at run-time",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L192",
          "evidence": "3. Besides the static policy file, Casbin also provides API for permission management at run-time. For example, You can get all the roles assigned to a user as below:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides two sets of apis to manage permissions:",
      "normalized_text": "Provides two sets of apis to manage permissions:",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L202",
          "evidence": "Casbin provides two sets of APIs to manage permissions:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage permissions:",
      "normalized_text": "Manage permissions:",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L202",
          "evidence": "Casbin provides two sets of APIs to manage permissions:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides support for casbin policy management",
      "normalized_text": "Provides support for casbin policy management",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L204",
          "evidence": "- [Management API](https://casbin.org/docs/management-api): the primitive API that provides full support for Casbin policy management."
        },
        {
          "url": "https://github.com/casbin/casbin#L204",
          "evidence": "- [Management API](https://casbin.org/docs/management-api): the primitive API that provides full support for Casbin policy management."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "provide a [web-based ui](https://casbin",
      "normalized_text": "Provide a [web-based ui](https://casbin",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L207",
          "evidence": "We also provide a [web-based UI](https://casbin.org/docs/admin-portal) for model management and policy management:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support this project by becoming a sponsor",
      "normalized_text": "Support this project by becoming a sponsor",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L270",
          "evidence": "Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/casbin#sponsor)]"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Supported models",
      "normalized_text": "Supported models",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L46",
          "evidence": "- [Supported models](#supported-models)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Policy management",
      "normalized_text": "Policy management",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L54",
          "evidence": "- [Policy management](#policy-management)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Management API: the primitive API that provides support for Casbin policy management.",
      "normalized_text": "Management api: the primitive api that provides support for casbin policy management.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L204",
          "evidence": "- [Management API](https://casbin.org/docs/management-api): the primitive API that provides full support for Casbin policy management."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "RBAC API: a more friendly API for RBAC. This API is a subset of Management API. The RBAC users could use this API to simplify the code.",
      "normalized_text": "Rbac api: a more friendly api for rbac. this api is a subset of management api. the rbac users could use this api to ...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/casbin/casbin#L205",
          "evidence": "- [RBAC API](https://casbin.org/docs/rbac-api): a more friendly API for RBAC. This API is a subset of Management API. The RBAC users could use this API to simplify the code."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for authorization and authentication with oauth 2",
      "normalized_text": "Support for authorization and authentication with oauth 2",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L9",
          "evidence": "[Node.js][node] client library for using Google APIs. Support for authorization and authentication with OAuth 2.0, API Keys and JWT tokens is included."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support and maintenance",
      "normalized_text": "Support and maintenance",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L46",
          "evidence": "### Support and maintenance"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports the maintenance lts, active lts, and current release of node",
      "normalized_text": "Supports the maintenance lts, active lts, and current release of node",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L49",
          "evidence": "This library supports the maintenance LTS, active LTS, and current release of node.js.  See the [node.js release schedule](https://github.com/nodejs/Release) for more information."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the following command in your terminal:",
      "normalized_text": "Run the following command in your terminal:",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L54",
          "evidence": "This library is distributed on `npm`. In order to add it as a dependency, run the following command in your terminal:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L384",
          "evidence": "To generate the AWS workload identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L500",
          "evidence": "To generate the Azure workload identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L540",
          "evidence": "To generate a file-sourced OIDC configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L569",
          "evidence": "To generate a URL-sourced OIDC workload identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L696",
          "evidence": "To generate an external account authorized user workforce identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L724",
          "evidence": "To generate an executable-sourced workload identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L909",
          "evidence": "To generate a file-sourced OIDC configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L931",
          "evidence": "To generate a file-sourced SAML configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L956",
          "evidence": "To generate a URL-sourced OIDC workforce identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L977",
          "evidence": "To generate a URL-sourced SAML configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1010",
          "evidence": "To generate an executable-sourced workforce identity configuration, run the following command:"
        }
      ],
      "frequency": 12,
      "uniqueness_score": 0.08333333333333333
    },
    {
      "text": "run the following sample command in your terminal, replacing with your preferred api:",
      "normalized_text": "Run the following sample command in your terminal, replacing with your preferred api:",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L60",
          "evidence": "If you need to reduce startup times, you can alternatively install a submodule as its own dependency. We make an effort to publish submodules that are __not__ in this [list](https://github.com/googleapis/google-cloud-node#google-cloud-nodejs-client-libraries). In order to add it as a dependency, run the following sample command in your terminal, replacing with your preferred API:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run [this search](https://www",
      "normalized_text": "Run [this search](https://www",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L66",
          "evidence": "You can run [this search](https://www.npmjs.com/search?q=scope%3A@googleapis) on `npm`, to find a list of the submodules available."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "creates a blogger client and retrieves the details of a blog given the blog id:",
      "normalized_text": "Creates a blogger client and retrieves the details of a blog given the blog id:",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L69",
          "evidence": "This is a very simple example. This creates a Blogger client and retrieves the details of a blog given the blog Id:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support multiple versions",
      "normalized_text": "Support multiple versions",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L74",
          "evidence": "// Each API may support multiple versions. With this sample, we're getting"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support all authentication methods, while others may only support one or two",
      "normalized_text": "Support all authentication methods, while others may only support one or two",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L152",
          "evidence": "There are multiple ways to authenticate to Google APIs. Some services support all authentication methods, while others may only support one or two."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides your application with authorization against a set of scopes",
      "normalized_text": "Provides your application with authorization against a set of scopes",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L154",
          "evidence": "- **OAuth2** - This allows you to make API calls on behalf of a given user.  In this model, the user visits your application, signs in with their Google account, and provides your application with authorization against a set of scopes.  [Learn more](#oauth2-client)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allows you to make api calls on behalf of a given user",
      "normalized_text": "Allows you to make api calls on behalf of a given user",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L154",
          "evidence": "- **OAuth2** - This allows you to make API calls on behalf of a given user.  In this model, the user visits your application, signs in with their Google account, and provides your application with authorization against a set of scopes.  [Learn more](#oauth2-client)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides automatic access to google apis using the [google cloud sdk](https://cloud",
      "normalized_text": "Provides automatic access to google apis using the [google cloud sdk](https://cloud",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L158",
          "evidence": "- **Application default credentials** - Provides automatic access to Google APIs using the [Google Cloud SDK](https://cloud.google.com/sdk/) for local development, or the [GCE Metadata Server](https://cloud.google.com/compute/docs/storing-retrieving-metadata) for applications deployed to Google Cloud Platform. [Learn more](#application-default-credentials)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allows you to retrieve an access token and refreshes the token and retry the request seamlessly if you also provide an `expiry_date` and the token is expired",
      "normalized_text": "Allows you to retrieve an access token and refreshes the token and retry the request seamlessly if you also provide a...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L165",
          "evidence": "This module comes with an [OAuth2][oauth] client that allows you to retrieve an access token, refresh it, and retry the request seamlessly. The basics of Google's OAuth2 implementation is explained on [Google Authorization and Authentication documentation][authdocs]."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L99",
          "evidence": "This library comes with an [OAuth2](https://developers.google.com/identity/protocols/OAuth2) client that allows you to retrieve an access token and refreshes the token and retry the request seamlessly if you also provide an `expiry_date` and the token is expired. The basics of Google's OAuth2 implementation is explained on [Google authorization and Authentication documentation](https://developers.google.com/accounts/docs/OAuth2Login)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "create a new oauth2 client id](https://console",
      "normalized_text": "Create a new oauth2 client id](https://console",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L168",
          "evidence": "- Navigate to the Cloud Console and [Create a new OAuth2 Client Id](https://console.cloud.google.com/apis/credentials/oauthclient)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a consent page url:",
      "normalized_text": "Create a consent page url:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L182",
          "evidence": "To ask for permissions from a user to retrieve an access token, you redirect them to a consent page. To create a consent page URL:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate a url that asks permissions for blogger and google calendar scopes",
      "normalized_text": "Generate a url that asks permissions for blogger and google calendar scopes",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L193",
          "evidence": "// generate a url that asks permissions for Blogger and Google Calendar scopes"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide an object with the access_token and refresh_token",
      "normalized_text": "Provide an object with the access_token and refresh_token",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L222",
          "evidence": "// This will provide an object with the access_token and refresh_token."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "handle the case where a refresh token is no longer working",
      "normalized_text": "Handle the case where a refresh token is no longer working",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L261",
          "evidence": "As a developer, you should write your code to handle the case where a refresh token is no longer working."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create the correct credential type for you, depending upon the environment your code is running under",
      "normalized_text": "Create the correct credential type for you, depending upon the environment your code is running under",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L290",
          "evidence": "Rather than manually creating an OAuth2 client, JWT client, or Compute client, the auth library can create the correct credential type for you, depending upon the environment your code is running under."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L74",
          "evidence": "Rather than manually creating an OAuth2 client, JWT client, or Compute client, the auth library can create the correct credential type for you, depending upon the environment your code is running under."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "allow you to perform server-to-server, app-level authentication using a robot account",
      "normalized_text": "Allow you to perform server-to-server, app-level authentication using a robot account",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L326",
          "evidence": "Service accounts allow you to perform server-to-server, app-level authentication using a robot account. You will create a service account, download a keyfile, and use that to authenticate to Google APIs. To create a service account:"
        },
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L326",
          "evidence": "Service accounts allow you to perform server-to-server, app-level authentication using a robot account. You will create a service account, download a keyfile, and use that to authenticate to Google APIs. To create a service account:"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "create a service account, download a keyfile, and use that to authenticate to google apis",
      "normalized_text": "Create a service account, download a keyfile, and use that to authenticate to google apis",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L326",
          "evidence": "Service accounts allow you to perform server-to-server, app-level authentication using a robot account. You will create a service account, download a keyfile, and use that to authenticate to Google APIs. To create a service account:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a service account:",
      "normalized_text": "Create a service account:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L326",
          "evidence": "Service accounts allow you to perform server-to-server, app-level authentication using a robot account. You will create a service account, download a keyfile, and use that to authenticate to Google APIs. To create a service account:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create service account key page](https://console",
      "normalized_text": "Create service account key page](https://console",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L327",
          "evidence": "- Go to the [Create Service Account Key page](https://console.cloud.google.com/apis/credentials/serviceaccountkey)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process with an environment variable named `google_application_credentials`",
      "normalized_text": "Process with an environment variable named `google_application_credentials`",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L334",
          "evidence": "You can start process with an environment variable named `GOOGLE_APPLICATION_CREDENTIALS`. The value of this env var should be the full path to the service account credential file:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "creates a watcher that posts notifications to a google cloud pub/sub topic when emails are sent to a gmail account:",
      "normalized_text": "Creates a watcher that posts notifications to a google cloud pub/sub topic when emails are sent to a gmail account:",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L394",
          "evidence": "The body of the request is specified in the `requestBody` parameter object of the request. The body is specified as a JavaScript object with key/value pairs. For example, this sample creates a watcher that posts notifications to a Google Cloud Pub/Sub topic when emails are sent to a gmail account:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports multipart media uploads",
      "normalized_text": "Supports multipart media uploads",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L408",
          "evidence": "This client supports multipart media uploads. The resource parameters are specified in the `requestBody` parameter object, and the media itself is specified in the `media.body` parameter with mime-type specified in `media.mimeType`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow you to upload very large files that cannot fit into memory",
      "normalized_text": "Allow you to upload very large files that cannot fit into memory",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L430",
          "evidence": "You can also upload media by specifying `media.body` as a [Readable stream][stream]. This can allow you to upload very large files that cannot fit into memory."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide you with the ability to specify additional options that can be applied directly to the ['gaxios'][gaxios] object used in this library to make network calls to the api",
      "normalized_text": "Provide you with the ability to specify additional options that can be applied directly to the ['gaxios'][gaxios] obj...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L460",
          "evidence": "For more fine-tuned control over how your API calls are made, we provide you with the ability to specify additional options that can be applied directly to the ['gaxios'][gaxios] object used in this library to make network calls to the API."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a new one if you want to specify different options",
      "normalized_text": "Create a new one if you want to specify different options",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L505",
          "evidence": "**Note:** Created clients are **immutable** so you must create a new one if you want to specify different options."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides types out of the box",
      "normalized_text": "Provides types out of the box",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L594",
          "evidence": "This library is written in TypeScript, and provides types out of the box. All classes and interfaces generated for each API are exported under the `${apiName}_${version}` namespace. For example, the Drive v3 API types are all available from the `drive_v3` namespace:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for [http/2](https://developers",
      "normalized_text": "Support for [http/2](https://developers",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L622",
          "evidence": "This library has support for [HTTP/2](https://developers.google.com/web/fundamentals/performance/http2). To enable it, use the `http2` option anywhere request parameters are accepted:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable it, use the `http2` option anywhere request parameters are accepted:",
      "normalized_text": "Enable it, use the `http2` option anywhere request parameters are accepted:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L622",
          "evidence": "This library has support for [HTTP/2](https://developers.google.com/web/fundamentals/performance/http2). To enable it, use the `http2` option anywhere request parameters are accepted:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allows multiplexing of multiple concurrent requests over a single socket",
      "normalized_text": "Allows multiplexing of multiple concurrent requests over a single socket",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L631",
          "evidence": "HTTP/2 is often more performant, as it allows multiplexing of multiple concurrent requests over a single socket. In a traditional HTTP/2 API, the client is directly responsible for opening and closing the sessions made to make requests.  To maintain compatibility with the existing API, this module will automatically re-use existing sessions, which are collected after idling for 500ms.  Much of the performance gains will be visible in batch style workloads, and tight loops."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "* Supported APIs",
      "normalized_text": "* supported apis",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L28",
          "evidence": "* [Supported APIs](#getting-supported-apis)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "OAuth2 - This allows you to make API calls on behalf of a given user. In this model, the user visits your application, signs in with their Google account, and provides your application with authorization against a set of scopes. Learn more.",
      "normalized_text": "Oauth2 - this allows you to make api calls on behalf of a given user. in this model, the user visits your application...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L154",
          "evidence": "- **OAuth2** - This allows you to make API calls on behalf of a given user.  In this model, the user visits your application, signs in with their Google account, and provides your application with authorization against a set of scopes.  [Learn more](#oauth2-client)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Application default credentials - Provides automatic access to Google APIs using the Google Cloud SDK for local development, or the GCE Metadata Server for applications deployed to Google Cloud Platform. Learn more.",
      "normalized_text": "Application default credentials - provides automatic access to google apis using the google cloud sdk for local devel...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L158",
          "evidence": "- **Application default credentials** - Provides automatic access to Google APIs using the [Google Cloud SDK](https://cloud.google.com/sdk/) for local development, or the [GCE Metadata Server](https://cloud.google.com/compute/docs/storing-retrieving-metadata) for applications deployed to Google Cloud Platform. [Learn more](#application-default-credentials)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Navigate to the Cloud Console and Create a new OAuth2 Client Id",
      "normalized_text": "Navigate to the cloud console and create a new oauth2 client id",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L168",
          "evidence": "- Navigate to the Cloud Console and [Create a new OAuth2 Client Id](https://console.cloud.google.com/apis/credentials/oauthclient)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Click `Create`, and `Ok` on the following screen",
      "normalized_text": "Click `create`, and `ok` on the following screen",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L171",
          "evidence": "- Click `Create`, and `Ok` on the following screen"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Click the `Download` icon next to your newly created OAuth2 Client Id",
      "normalized_text": "Click the `download` icon next to your newly created oauth2 client id",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L172",
          "evidence": "- Click the `Download` icon next to your newly created OAuth2 Client Id"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*IMPORTANT NOTE** - The `refresh_token` is only returned on the first authorization. More details here.",
      "normalized_text": "*important note** - the `refresh_token` is only returned on the first authorization. more details here.",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L208",
          "evidence": "**IMPORTANT NOTE** - The `refresh_token` is only returned on the first authorization. More details [here](https://github.com/googleapis/google-api-nodejs-client/issues/750#issuecomment-304521450)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "The application has a status of 'Testing' and the consent screen is configured for an external user type, causing the token to expire in 7 days",
      "normalized_text": "The application has a status of 'testing' and the consent screen is configured for an external user type, causing the...",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L259",
          "evidence": "- The application has a status of 'Testing' and the consent screen is configured for an external user type, causing the token to expire in 7 days"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Go to the Create Service Account Key page",
      "normalized_text": "Go to the create service account key page",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L327",
          "evidence": "- Go to the [Create Service Account Key page](https://console.cloud.google.com/apis/credentials/serviceaccountkey)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Click the `Create` button",
      "normalized_text": "Click the `create` button",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L329",
          "evidence": "- Click the `Create` button"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*Note: Created clients are immutable** so you must create a new one if you want to specify different options.",
      "normalized_text": "*note: created clients are immutable** so you must create a new one if you want to specify different options.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-api-nodejs-client#L505",
          "evidence": "**Note:** Created clients are **immutable** so you must create a new one if you want to specify different options."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support of custom css properties mode",
      "normalized_text": "Support of custom css properties mode",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/akveo/nebular#L5",
          "evidence": "Nebular is a customizable Angular UI Library with a focus on beautiful design and ability to adapt it to your brand easily. It comes with 4 stunning visual themes, a powerful theming engine with runtime theme switching and support of custom css properties mode. Nebular is based on Eva Design System specifications."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process you can [use manual setup guide](https://akveo",
      "normalized_text": "Process you can [use manual setup guide](https://akveo",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/akveo/nebular#L34",
          "evidence": "If you want to have more control over setup process you can [use manual setup guide](https://akveo.github.io/nebular/docs/guides/install-nebular?utm_campaign=nebular%20-%20home%20-%20nebular%20github%20readme&utm_source=nebular&utm_medium=referral&utm_content=install_manually#manually)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports most recent browsers",
      "normalized_text": "Supports most recent browsers",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/akveo/nebular#L38",
          "evidence": "Nebular supports most recent browsers. Browser support list can be found <a href=\"https://angular.io/guide/browser-support\" target=\"_blank\">here</a>."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support list can be found <a href=\"https://angular",
      "normalized_text": "Support list can be found <a href=\"https://angular",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/akveo/nebular#L38",
          "evidence": "Nebular supports most recent browsers. Browser support list can be found <a href=\"https://angular.io/guide/browser-support\" target=\"_blank\">here</a>."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support the developers",
      "normalized_text": "Support the developers",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/akveo/nebular#L60",
          "evidence": "## How can I support the developers?"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create pull requests, submit bugs, suggest new features or documentation updates :wrench:",
      "normalized_text": "Create pull requests, submit bugs, suggest new features or documentation updates :wrench:",
      "category": "Documentation",
      "sources": [
        {
          "url": "https://github.com/akveo/nebular#L63",
          "evidence": "- Create pull requests, submit bugs, suggest new features or documentation updates :wrench:"
        },
        {
          "url": "https://github.com/akveo/nebular#L63",
          "evidence": "- Create pull requests, submit bugs, suggest new features or documentation updates :wrench:"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "SVG Eva Icons support - 480+ general purpose icons",
      "normalized_text": "Svg eva icons support - 480+ general purpose icons",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/akveo/nebular#L16",
          "evidence": "- **SVG Eva Icons support** - 480+ general purpose icons"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "ngx-admin - 20k+ stars application based on Nebular modules with beautiful E-Commerce & IOT components, for boosting your developing process. Live Demo.",
      "normalized_text": "Ngx-admin - 20k+ stars application based on nebular modules with beautiful e-commerce & iot components, for boosting ...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/akveo/nebular#L42",
          "evidence": "- [ngx-admin](http://github.com/akveo/ngx-admin) - 20k+ stars application based on Nebular modules with beautiful E-Commerce & IOT components, for boosting your developing process. [Live Demo](https://www.akveo.com/ngx-admin?utm_campaign=ngx_admin%20-%20demo%20-%20nebular%20github%20readme%20-%20traffic&utm_source=nebular&utm_medium=referral&utm_content=github_readme)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { getironsession } from 'iron-session';",
      "normalized_text": "Import { getironsession } from 'iron-session';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L70",
          "evidence": "import { getIronSession } from 'iron-session';"
        },
        {
          "url": "https://github.com/vvo/iron-session#L87",
          "evidence": "import { getIronSession } from 'iron-session';"
        },
        {
          "url": "https://github.com/vvo/iron-session#L104",
          "evidence": "import { getIronSession } from 'iron-session';"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "export async function post(req, res) {",
      "normalized_text": "Export async function post(req, res) {",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L72",
          "evidence": "export async function get(req, res) {"
        },
        {
          "url": "https://github.com/vvo/iron-session#L77",
          "evidence": "export async function post(req, res) {"
        },
        {
          "url": "https://github.com/vvo/iron-session#L89",
          "evidence": "export async function GET() {"
        },
        {
          "url": "https://github.com/vvo/iron-session#L94",
          "evidence": "export async function POST() {"
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "import { cookies } from 'next/headers';",
      "normalized_text": "Import { cookies } from 'next/headers';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L86",
          "evidence": "import { cookies } from 'next/headers';"
        },
        {
          "url": "https://github.com/vvo/iron-session#L103",
          "evidence": "import { cookies } from 'next/headers';"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "allow for password rotation",
      "normalized_text": "Allow for password rotation",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L130",
          "evidence": "- `password`, **required**: Private key used to encrypt the cookie. It has to be at least 32 characters long. Use <https://1password.com/password-generator/> to generate strong passwords. `password` can be either a `string` or an `object` with incrementing keys like this: `{2: \"...\", 1: \"...\"}` to allow for password rotation.  iron-session will use the highest numbered key for new cookies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate strong passwords",
      "normalized_text": "Generate strong passwords",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L130",
          "evidence": "- `password`, **required**: Private key used to encrypt the cookie. It has to be at least 32 characters long. Use <https://1password.com/password-generator/> to generate strong passwords. `password` can be either a `string` or an `object` with incrementing keys like this: `{2: \"...\", 1: \"...\"}` to allow for password rotation.  iron-session will use the highest numbered key for new cookies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate a seal that contains a user id to login and send it to a route on your website (like `/magic-login`)",
      "normalized_text": "Generate a seal that contains a user id to login and send it to a route on your website (like `/magic-login`)",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L189",
          "evidence": "This is the underlying method and seal mechanism that powers `iron-session`. You can use it to seal any `data` you want and pass it around. One usecase are magic links: you generate a seal that contains a user id to login and send it to a route on your website (like `/magic-login`). Once received, you can safely decode the seal with `unsealData` and log the user in."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow you to decode a seal to get the original data back",
      "normalized_text": "Allow you to decode a seal to get the original data back",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L193",
          "evidence": "This is the opposite of `sealData` and allow you to decode a seal to get the original data back."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a ui to block customers",
      "normalized_text": "Create a ui to block customers",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L205",
          "evidence": "Sessions cannot be instantly invalidated (or \"disconnect this customer\") as there is typically no state stored about sessions on the server by default. However, in most applications, the first step upon receiving an authenticated request is to validate the user and their permissions in the database. So, to easily disconnect customers (or invalidate sessions), you can add an `isBlocked`` state in the database and create a UI to block customers."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage to inspect the seal",
      "normalized_text": "Manage to inspect the seal",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L218",
          "evidence": "- JWT tokens are not encrypted, the payload is visible by customers if they manage to inspect the seal. You would have to use [JWE](https://tools.ietf.org/html/rfc7516) to achieve the same."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`password`, required: Private key used to encrypt the cookie. It has to be at least 32 characters long. Use <https://1password.com/password-generator/> to generate strong passwords. `password` can be either a `string` or an `object` with incrementing keys like this: `{2: \"...\", 1: \"...\"}` to allow for password rotation. iron-session will use the highest numbered key for new cookies.",
      "normalized_text": "`password`, required: private key used to encrypt the cookie. it has to be at least 32 characters long. use <https://...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L130",
          "evidence": "- `password`, **required**: Private key used to encrypt the cookie. It has to be at least 32 characters long. Use <https://1password.com/password-generator/> to generate strong passwords. `password` can be either a `string` or an `object` with incrementing keys like this: `{2: \"...\", 1: \"...\"}` to allow for password rotation.  iron-session will use the highest numbered key for new cookies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`ttl`, _optional_: In seconds. Default to the equivalent of 14 days. You can set this to `0` and iron-session will compute the maximum allowed value by cookies.",
      "normalized_text": "`ttl`, _optional_: in seconds. default to the equivalent of 14 days. you can set this to `0` and iron-session will co...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L132",
          "evidence": "- `ttl`, _optional_: In seconds. Default to the equivalent of 14 days. You can set this to `0` and iron-session will compute the maximum allowed value by cookies."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "JWT tokens are not encrypted, the payload is visible by customers if they manage to inspect the seal. You would have to use JWE to achieve the same.",
      "normalized_text": "Jwt tokens are not encrypted, the payload is visible by customers if they manage to inspect the seal. you would have ...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L218",
          "evidence": "- JWT tokens are not encrypted, the payload is visible by customers if they manage to inspect the seal. You would have to use [JWE](https://tools.ietf.org/html/rfc7516) to achieve the same."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Divyansh Singh for reimplementing `@hapi/iron` as",
      "normalized_text": "Divyansh singh for reimplementing `@hapi/iron` as",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L228",
          "evidence": "- [Divyansh Singh](https://github.com/brc-dd) for reimplementing `@hapi/iron` as"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Hoang Vo for advice and guidance while building",
      "normalized_text": "Hoang vo for advice and guidance while building",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L231",
          "evidence": "- [Hoang Vo](https://github.com/hoangvvo) for advice and guidance while building"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "<https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html>",
      "normalized_text": "<https://cheatsheetseries.owasp.org/cheatsheets/session_management_cheat_sheet.html>",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/vvo/iron-session#L241",
          "evidence": "- <https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html>"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enables both client-side and server-side javascript applications to authenticate users using [azure ad](https://docs",
      "normalized_text": "Enables both client-side and server-side javascript applications to authenticate users using [azure ad](https://docs",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L3",
          "evidence": "The Microsoft Authentication Library for JavaScript enables both client-side and server-side JavaScript applications to authenticate users using [Azure AD](https://docs.microsoft.com/azure/active-directory/develop/v2-overview) for work and school accounts (AAD), Microsoft personal accounts (MSA), and social identity providers like Facebook, Google, LinkedIn, Microsoft accounts, etc. through [Azure AD B2C](https://docs.microsoft.com/azure/active-directory-b2c/active-directory-b2c-overview#identity-providers) service. It also enables your app to get tokens to access [Microsoft Cloud](https://www.microsoft.com/enterprise) services such as [Microsoft Graph](https://graph.microsoft.io)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enables your app to get tokens to access [microsoft cloud](https://www",
      "normalized_text": "Enables your app to get tokens to access [microsoft cloud](https://www",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L3",
          "evidence": "The Microsoft Authentication Library for JavaScript enables both client-side and server-side JavaScript applications to authenticate users using [Azure AD](https://docs.microsoft.com/azure/active-directory/develop/v2-overview) for work and school accounts (AAD), Microsoft personal accounts (MSA), and social identity providers like Facebook, Google, LinkedIn, Microsoft accounts, etc. through [Azure AD B2C](https://docs.microsoft.com/azure/active-directory-b2c/active-directory-b2c-overview#identity-providers) service. It also enables your app to get tokens to access [Microsoft Cloud](https://www.microsoft.com/enterprise) services such as [Microsoft Graph](https://graph.microsoft.io)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enables authentication and token acquisition with the microsoft identity platform in javascript applications",
      "normalized_text": "Enables authentication and token acquisition with the microsoft identity platform in javascript applications",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L11",
          "evidence": "-   [Microsoft Authentication Library for Node.js](lib/msal-node/): A [Node.js](https://nodejs.org/en/) library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the following OAuth 2.0 protocols and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc):"
        },
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L20",
          "evidence": "-   [Microsoft Authentication Library for JavaScript](lib/msal-browser/): A browser-based, framework-agnostic browser library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the OAuth 2.0 [Authorization Code Flow with PKCE](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow), and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "implements the following oauth 2",
      "normalized_text": "Implements the following oauth 2",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L11",
          "evidence": "-   [Microsoft Authentication Library for Node.js](lib/msal-node/): A [Node.js](https://nodejs.org/en/) library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the following OAuth 2.0 protocols and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc):"
        },
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L20",
          "evidence": "-   [Microsoft Authentication Library for JavaScript](lib/msal-browser/): A browser-based, framework-agnostic browser library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the OAuth 2.0 [Authorization Code Flow with PKCE](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow), and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "support for javascript](lib/msal-browser/src/custom_auth/): msal also provides native authentication apis that allow applications to implement a native experience with end-to-end customizable flows in their applications",
      "normalized_text": "Support for javascript](lib/msal-browser/src/custom_auth/): msal also provides native authentication apis that allow ...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides native authentication apis that allow applications to implement a native experience with end-to-end customizable flows in their applications",
      "normalized_text": "Provides native authentication apis that allow applications to implement a native experience with end-to-end customiz...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow applications to implement a native experience with end-to-end customizable flows in their applications",
      "normalized_text": "Allow applications to implement a native experience with end-to-end customizable flows in their applications",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        },
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "implementing or exploring the native authentication feature in the code",
      "normalized_text": "Implementing or exploring the native authentication feature in the code",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L24",
          "evidence": "> **Terminology:** In the codebase, the term \"Custom Auth\" is used instead of \"Native Auth\". You will find classes, interfaces, and configuration options prefixed with `CustomAuth` (e.g., `CustomAuthPublicClientApplication`, `CustomAuthConfiguration`). Please refer to these when implementing or exploring the native authentication feature in the code."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support to the microsoft authentication library for node (msal)",
      "normalized_text": "Support to the microsoft authentication library for node (msal)",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L28",
          "evidence": "-   [Microsoft Authentication Extensions for Node](extensions/msal-node-extensions/): The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence",
      "normalized_text": "Offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L28",
          "evidence": "-   [Microsoft Authentication Extensions for Node](extensions/msal-node-extensions/): The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "perform cross-platform token cache serialization and persistence",
      "normalized_text": "Perform cross-platform token cache serialization and persistence",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L28",
          "evidence": "-   [Microsoft Authentication Extensions for Node](extensions/msal-node-extensions/): The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Microsoft Authentication Library for Node.js: A Node.js library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the following OAuth 2.0 protocols and is OpenID-compliant:",
      "normalized_text": "Microsoft authentication library for node.js: a node.js library that enables authentication and token acquisition wit...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L11",
          "evidence": "-   [Microsoft Authentication Library for Node.js](lib/msal-node/): A [Node.js](https://nodejs.org/en/) library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the following OAuth 2.0 protocols and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc):"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Microsoft Authentication Library for JavaScript: A browser-based, framework-agnostic browser library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the OAuth 2.0 Authorization Code Flow with PKCE, and is OpenID-compliant.",
      "normalized_text": "Microsoft authentication library for javascript: a browser-based, framework-agnostic browser library that enables aut...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L20",
          "evidence": "-   [Microsoft Authentication Library for JavaScript](lib/msal-browser/): A browser-based, framework-agnostic browser library that enables authentication and token acquisition with the Microsoft Identity platform in JavaScript applications. Implements the OAuth 2.0 [Authorization Code Flow with PKCE](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow), and is [OpenID-compliant](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Native Authentication Support for JavaScript: MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on External ID for customers. It is recommended to always use the most up-to-date version of the SDK.",
      "normalized_text": "Native authentication support for javascript: msal also provides native authentication apis that allow applications t...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L22",
          "evidence": "-   [Native Authentication Support for JavaScript](lib/msal-browser/src/custom_auth/): MSAL also provides native authentication APIs that allow applications to implement a native experience with end-to-end customizable flows in their applications. With native authentication, users are guided through a rich, native, sign-up and sign-in journey without leaving the app. The native authentication feature is available for SPAs on [External ID for customers](https://learn.microsoft.com/en-us/entra/identity-platform/concept-native-authentication). It is recommended to always use the most up-to-date version of the SDK."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Microsoft Authentication Extensions for Node: The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL).",
      "normalized_text": "Microsoft authentication extensions for node: the microsoft authentication extensions for node offers secure mechanis...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js#L28",
          "evidence": "-   [Microsoft Authentication Extensions for Node](extensions/msal-node-extensions/): The Microsoft Authentication Extensions for Node offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the Microsoft Authentication Library for Node (MSAL)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "plugin please consider sponsoring",
      "normalized_text": "Plugin please consider sponsoring",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/websanova/vue-auth#L8",
          "evidence": "If you like this plugin please consider sponsoring."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for vue 3 along with one small change with how the plugin is setup",
      "normalized_text": "Support for vue 3 along with one small change with how the plugin is setup",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/websanova/vue-auth#L15",
          "evidence": "The new 4.x version comes with support for Vue 3 along with one small change with how the plugin is setup. Otherwise it is fully backwards compatible and no other changes will be required."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Supports __Embroider__ see our ember-try scenario and test app for guidance.",
      "normalized_text": "Supports __embroider__ see our ember-try scenario and test app for guidance.",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L10",
          "evidence": "- Supports __Embroider__ see our [ember-try scenario](https://github.com/mainmatter/ember-simple-auth/blob/master/packages/test-esa/config/ember-try.js) and [test app](https://github.com/mainmatter/ember-simple-auth/blob/master/packages/test-app/ember-cli-build.js) for guidance."
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L10",
          "evidence": "- Supports __Embroider__ see our [ember-try scenario](https://github.com/mainmatter/ember-simple-auth/blob/master/packages/test-esa/config/ember-try.js) and [test app](https://github.com/mainmatter/ember-simple-auth/blob/master/packages/test-app/ember-cli-build.js) for guidance."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "offer consulting, training, and team augmentation for ember",
      "normalized_text": "Offer consulting, training, and team augmentation for ember",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L14",
          "evidence": "> We offer consulting, training, and team augmentation for Ember.js \u2013 check out our [website](https://mainmatter.com/ember-consulting/) to learn more!"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "* Implementing a custom Authenticator",
      "normalized_text": "* implementing a custom authenticator",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L20",
          "evidence": "Ember Simple Auth is a __lightweight library for implementing authentication/"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L474",
          "evidence": "### Implementing a custom Authenticator"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L44",
          "evidence": "* [Implementing a custom Authenticator](#implementing-a-custom-authenticator)"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "support all kinds of authentication and",
      "normalized_text": "Support all kinds of authentication and",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L23",
          "evidence": "its pluggable strategies it __can support all kinds of authentication and"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implementing a custom authenticator](#implementing-a-custom-authenticator)",
      "normalized_text": "Implementing a custom authenticator](#implementing-a-custom-authenticator)",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L44",
          "evidence": "* [Implementing a custom Authenticator](#implementing-a-custom-authenticator)"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L47",
          "evidence": "* [Implementing a Custom Store](#implementing-a-custom-store)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "building blocks__ - the session, a",
      "normalized_text": "Building blocks__ - the session, a",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L75",
          "evidence": "Ember Simple Auth consists of __3 main building blocks__ - the session, a"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support multiple ways of authentication such as",
      "normalized_text": "Support multiple ways of authentication such as",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L88",
          "evidence": "multiple authenticators to support multiple ways of authentication such as"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implements a auth solution__ including authentication against",
      "normalized_text": "Implements a auth solution__ including authentication against",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L96",
          "evidence": "that implements a complete auth solution__ including authentication against"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build issues for `typescript` and `embroider` users,",
      "normalized_text": "Build issues for `typescript` and `embroider` users,",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L125",
          "evidence": "The 4.1 release introduced a `session#setup` that fixes build issues for `typescript` and `embroider` users,"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides a session service and a default session-store",
      "normalized_text": "Provides a session service and a default session-store",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L132",
          "evidence": "The 7.0 release introduces a **breaking** change, it no longer automatically provides a session service and a default session-store. You have explicitly import these files instead."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import these files instead",
      "normalized_text": "Import these files instead",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L132",
          "evidence": "The 7.0 release introduces a **breaking** change, it no longer automatically provides a session service and a default session-store. You have explicitly import these files instead."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import a session service and a session-store inside your application__",
      "normalized_text": "Import a session service and a session-store inside your application__",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L138",
          "evidence": "Once the library is installed, import a session service and a session-store inside your application__."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import service from 'ember-simple-auth/services/session';",
      "normalized_text": "Import service from 'ember-simple-auth/services/session';",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L142",
          "evidence": "import Service from 'ember-simple-auth/services/session';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L157",
          "evidence": "import Service from 'ember-simple-auth/services/session';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L591",
          "evidence": "import Base from 'ember-simple-auth/session-stores/base';"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "export default class applicationsessionstore extends cookiestore {}",
      "normalized_text": "Export default class applicationsessionstore extends cookiestore {}",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L144",
          "evidence": "export default class SessionService extends Service {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L151",
          "evidence": "export default class SessionStore extends AdaptiveStore {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L166",
          "evidence": "export default class SessionService extends Service<Data> {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L515",
          "evidence": "export default class ApplicationSessionStore extends Cookie {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L593",
          "evidence": "export default class ApplicationSessionStore extends Base {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L614",
          "evidence": "export default class ApplicationSessionStore extends CookieStore {}"
        }
      ],
      "frequency": 6,
      "uniqueness_score": 0.16666666666666666
    },
    {
      "text": "extends service<data> {}",
      "normalized_text": "Extends service<data> {}",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L144",
          "evidence": "export default class SessionService extends Service {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L166",
          "evidence": "export default class SessionService extends Service<Data> {}"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "import adaptivestore from 'ember-simple-auth/session-stores/adaptive';",
      "normalized_text": "Import adaptivestore from 'ember-simple-auth/session-stores/adaptive';",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L149",
          "evidence": "import AdaptiveStore from 'ember-simple-auth/session-stores/adaptive';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L513",
          "evidence": "import Cookie from 'ember-simple-auth/session-stores/cookie';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L570",
          "evidence": "import AdaptiveStore from 'ember-simple-auth/session-stores/adaptive';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L612",
          "evidence": "import CookieStore from 'ember-simple-auth/session-stores/cookie';"
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "extends adaptivestore {}",
      "normalized_text": "Extends adaptivestore {}",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L151",
          "evidence": "export default class SessionStore extends AdaptiveStore {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L572",
          "evidence": "export default class ApplicationSessionStore extends AdaptiveStore {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L614",
          "evidence": "export default class ApplicationSessionStore extends CookieStore {}"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "import controller from '@ember/controller';",
      "normalized_text": "Import controller from '@ember/controller';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L178",
          "evidence": "import Controller from '@ember/controller';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L209",
          "evidence": "import Controller from '@ember/controller';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L260",
          "evidence": "import Controller from '@ember/controller';"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "import { service } from '@ember/service';",
      "normalized_text": "Import { service } from '@ember/service';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L179",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L210",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L261",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L304",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L348",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L381",
          "evidence": "import { service } from '@ember/service';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L675",
          "evidence": "import { service } from '@ember/service';"
        }
      ],
      "frequency": 7,
      "uniqueness_score": 0.14285714285714285
    },
    {
      "text": "export default class applicationsessionstore extends adaptivestore {",
      "normalized_text": "Export default class applicationsessionstore extends adaptivestore {",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L181",
          "evidence": "export default class ApplicationController extends Controller {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L213",
          "evidence": "export default class ApplicationController extends Controller {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L265",
          "evidence": "export default class LoginController extends Controller {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L383",
          "evidence": "export default class ApplicationAdapter extends JSONAPIAdapter {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L572",
          "evidence": "export default class ApplicationSessionStore extends AdaptiveStore {"
        }
      ],
      "frequency": 5,
      "uniqueness_score": 0.2
    },
    {
      "text": "extends controller {",
      "normalized_text": "Extends controller {",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L181",
          "evidence": "export default class ApplicationController extends Controller {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L213",
          "evidence": "export default class ApplicationController extends Controller {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L265",
          "evidence": "export default class LoginController extends Controller {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L515",
          "evidence": "export default class ApplicationSessionStore extends Cookie {}"
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "import { computed } from '@ember/object';",
      "normalized_text": "Import { computed } from '@ember/object';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L211",
          "evidence": "import { action } from \"@ember/object\";"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L262",
          "evidence": "import { action } from \"@ember/object\";"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L380",
          "evidence": "import { computed } from '@ember/object';"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "extend one of the authenticators the",
      "normalized_text": "Extend one of the authenticators the",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L229",
          "evidence": "new file in `app/authenticators`__ and extend one of the authenticators the"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import oauth2passwordgrantauthenticator from 'ember-simple-auth/authenticators/oauth2-password-grant';",
      "normalized_text": "Import oauth2passwordgrantauthenticator from 'ember-simple-auth/authenticators/oauth2-password-grant';",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L234",
          "evidence": "import OAuth2PasswordGrant from 'ember-simple-auth/authenticators/oauth2-password-grant';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L448",
          "evidence": "import OAuth2PasswordGrantAuthenticator from 'ember-simple-auth/authenticators/oauth2-password-grant';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L467",
          "evidence": "import OAuth2PasswordGrantAuthenticator from 'ember-simple-auth/authenticators/oauth2-password-grant';"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "export default class oauth2authenticator extends oauth2passwordgrantauthenticator {}",
      "normalized_text": "Export default class oauth2authenticator extends oauth2passwordgrantauthenticator {}",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L236",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrant {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L450",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrantAuthenticator {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L469",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrantAuthenticator {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L490",
          "evidence": "export default class CustomAuthenticator extends Base {"
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "extends oauth2passwordgrantauthenticator {}",
      "normalized_text": "Extends oauth2passwordgrantauthenticator {}",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L236",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrant {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L450",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrantAuthenticator {}"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L469",
          "evidence": "export default class OAuth2Authenticator extends OAuth2PasswordGrantAuthenticator {"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "import { tracked } from \"@glimmer/tracking\";",
      "normalized_text": "Import { tracked } from \"@glimmer/tracking\";",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L263",
          "evidence": "import { tracked } from \"@glimmer/tracking\";"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import route from '@ember/routing/route';",
      "normalized_text": "Import route from '@ember/routing/route';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L303",
          "evidence": "import Route from '@ember/routing/route';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L347",
          "evidence": "import Route from '@ember/routing/route';"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L674",
          "evidence": "import Route from '@ember/routing/route';"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "export default class authenticatedroute extends route {",
      "normalized_text": "Export default class authenticatedroute extends route {",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L306",
          "evidence": "export default class AuthenticatedRoute extends Route {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L350",
          "evidence": "export default class LoginRoute extends Route {"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L677",
          "evidence": "export default class IndexRoute extends Route {"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "customize those behaviours, these methods can be overridden when the",
      "normalized_text": "Customize those behaviours, these methods can be overridden when the",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L369",
          "evidence": "to customize those behaviours, these methods can be overridden when the"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "extends the one provided by",
      "normalized_text": "Extends the one provided by",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L370",
          "evidence": "application defines its own session service that extends the one provided by"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import jsonapiadapter from '@ember-data/adapter/json-api';",
      "normalized_text": "Import jsonapiadapter from '@ember-data/adapter/json-api';",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L379",
          "evidence": "import JSONAPIAdapter from '@ember-data/adapter/json-api';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "extends jsonapiadapter {",
      "normalized_text": "Extends jsonapiadapter {",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L383",
          "evidence": "export default class ApplicationAdapter extends JSONAPIAdapter {"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implement the concrete steps necessary to authenticate the",
      "normalized_text": "Implement the concrete steps necessary to authenticate the",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L423",
          "evidence": "__Authenticators implement the concrete steps necessary to authenticate the"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implements the _\"resource owner password credentials grant type\"_",
      "normalized_text": "Implements the _\"resource owner password credentials grant type\"_",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L437",
          "evidence": "* [`OAuth2PasswordGrantAuthenticator`](http://ember-simple-auth.com/api/OAuth2PasswordGrantAuthenticator.html): an OAuth 2.0 authenticator that implements the _\"Resource Owner Password Credentials Grant Type\"_"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implements the _\"implicit grant type\"_",
      "normalized_text": "Implements the _\"implicit grant type\"_",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L438",
          "evidence": "* [`OAuth2ImplicitGrantAuthenticator`](https://ember-simple-auth.com/api/module-ember-simple-auth_authenticators_oauth2-implicit-grant-OAuth2ImplicitGrantAuthenticator.html): an OAuth 2.0 authenticator that implements the _\"Implicit Grant Type\"_"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "plugin [devise](https://github",
      "normalized_text": "Plugin [devise](https://github",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L439",
          "evidence": "* [`DeviseAuthenticator`](http://ember-simple-auth.com/api/DeviseAuthenticator.html): an authenticator compatible with the popular Ruby on Rails authentication plugin [devise](https://github.com/plataformatec/devise)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "extend if from the ember simple auth",
      "normalized_text": "Extend if from the ember simple auth",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L443",
          "evidence": "authenticator in `app/authenticators`, extend if from the Ember Simple Auth"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "extending one of the predefined authenticators, an application can also",
      "normalized_text": "Extending one of the predefined authenticators, an application can also",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L476",
          "evidence": "Besides extending one of the predefined authenticators, an application can also"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implement fully custom authenticators",
      "normalized_text": "Implement fully custom authenticators",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L477",
          "evidence": "implement fully custom authenticators. In order to do that, extend the"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L580",
          "evidence": "implement fully custom stores. In order to do that, extend the"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "import base from 'ember-simple-auth/authenticators/base';",
      "normalized_text": "Import base from 'ember-simple-auth/authenticators/base';",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L488",
          "evidence": "import Base from 'ember-simple-auth/authenticators/base';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "customize the adaptive store, define a custom store in",
      "normalized_text": "Customize the adaptive store, define a custom store in",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L520",
          "evidence": "by default. To customize the adaptive store, define a custom store in"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "extends it and overrides the",
      "normalized_text": "Extends it and overrides the",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L521",
          "evidence": "`app/session-stores/application.js` that extends it and overrides the"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support of `sessionstorage` and `localstorage`",
      "normalized_text": "Support of `sessionstorage` and `localstorage`",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L554",
          "evidence": "has up-to-date information on browser support of `sessionStorage` and `localStorage`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "* Implementing a Custom Store",
      "normalized_text": "* implementing a custom store",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L577",
          "evidence": "### Implementing a custom Store"
        },
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L47",
          "evidence": "* [Implementing a Custom Store](#implementing-a-custom-store)"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "enable the cookie store, define it as",
      "normalized_text": "Enable the cookie store, define it as",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L607",
          "evidence": "session store is being used. In order to enable the cookie store, define it as"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import application from '@ember/application';",
      "normalized_text": "Import application from '@ember/application';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L640",
          "evidence": "import Application from '@ember/application';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import loadinitializers from 'ember-load-initializers';",
      "normalized_text": "Import loadinitializers from 'ember-load-initializers';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L641",
          "evidence": "import loadInitializers from 'ember-load-initializers';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "extends application {",
      "normalized_text": "Extends application {",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L643",
          "evidence": "class App extends Application {"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "export default app;",
      "normalized_text": "Export default app;",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L659",
          "evidence": "export default App;"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide the following helpers:",
      "normalized_text": "Provide the following helpers:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L694",
          "evidence": "We provide the following helpers:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide a specific authorization token or user",
      "normalized_text": "Provide a specific authorization token or user",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L698",
          "evidence": "authentication request, to provide a specific authorization token or user"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { module, test } from 'qunit';",
      "normalized_text": "Import { module, test } from 'qunit';",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L705",
          "evidence": "import { module, test } from 'qunit';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { visit, currenturl } from '@ember/test-helpers';",
      "normalized_text": "Import { visit, currenturl } from '@ember/test-helpers';",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L706",
          "evidence": "import { visit, currentURL } from '@ember/test-helpers';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { setupapplicationtest } from 'ember-qunit';",
      "normalized_text": "Import { setupapplicationtest } from 'ember-qunit';",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L707",
          "evidence": "import { setupApplicationTest } from 'ember-qunit';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { currentsession, authenticatesession, invalidatesession } from 'ember-simple-auth/test-support';",
      "normalized_text": "Import { currentsession, authenticatesession, invalidatesession } from 'ember-simple-auth/test-support';",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L708",
          "evidence": "import { currentSession, authenticateSession, invalidateSession } from 'ember-simple-auth/test-support';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Ember Simple Auth __supports all Ember.js versions starting with 3.28.__",
      "normalized_text": "Ember simple auth __supports all ember.js versions starting with 3.28.__",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L7",
          "evidence": "- Ember Simple Auth __supports all Ember.js versions starting with 3.28.__"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "__Doesn't support IE11__",
      "normalized_text": "__doesn't support ie11__",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L8",
          "evidence": "- __Doesn't support IE11__"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`OAuth2PasswordGrantAuthenticator`: an OAuth 2.0 authenticator that implements the _\"Resource Owner Password Credentials Grant Type\"_",
      "normalized_text": "`oauth2passwordgrantauthenticator`: an oauth 2.0 authenticator that implements the _\"resource owner password credenti...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L437",
          "evidence": "* [`OAuth2PasswordGrantAuthenticator`](http://ember-simple-auth.com/api/OAuth2PasswordGrantAuthenticator.html): an OAuth 2.0 authenticator that implements the _\"Resource Owner Password Credentials Grant Type\"_"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`OAuth2ImplicitGrantAuthenticator`: an OAuth 2.0 authenticator that implements the _\"Implicit Grant Type\"_",
      "normalized_text": "`oauth2implicitgrantauthenticator`: an oauth 2.0 authenticator that implements the _\"implicit grant type\"_",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L438",
          "evidence": "* [`OAuth2ImplicitGrantAuthenticator`](https://ember-simple-auth.com/api/module-ember-simple-auth_authenticators_oauth2-implicit-grant-OAuth2ImplicitGrantAuthenticator.html): an OAuth 2.0 authenticator that implements the _\"Implicit Grant Type\"_"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`DeviseAuthenticator`: an authenticator compatible with the popular Ruby on Rails authentication plugin devise",
      "normalized_text": "`deviseauthenticator`: an authenticator compatible with the popular ruby on rails authentication plugin devise",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/mainmatter/ember-simple-auth#L439",
          "evidence": "* [`DeviseAuthenticator`](http://ember-simple-auth.com/api/DeviseAuthenticator.html): an authenticator compatible with the popular Ruby on Rails authentication plugin [devise](https://github.com/plataformatec/devise)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "importing npm package",
      "normalized_text": "Importing npm package",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L45",
          "evidence": "faster versions. (Used by default when importing NPM package.)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports most of the primitives implemented by tweetnacl",
      "normalized_text": "Supports most of the primitives implemented by tweetnacl",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L51",
          "evidence": "Note that [WebCrypto API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API) supports most of the primitives implemented by TweetNaCl.js (`X25519` in `nacl.scalarMult`, `Ed25519` in `nacl.sign.detached`, and `SHA-512` in `nacl.hash`), except for `XSalsa20-Poly1305` authenticated encryption, so you should use it if possible."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide security protocols",
      "normalized_text": "Provide security protocols",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L72",
          "evidence": "that doesn't provide complete security protocols. When designing"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a different signature for the same message that will verify",
      "normalized_text": "Create a different signature for the same message that will verify",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L91",
          "evidence": "to create a different signature for the same message that will verify"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implements *x25519-xsalsa20-poly1305*",
      "normalized_text": "Implements *x25519-xsalsa20-poly1305*",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L150",
          "evidence": "Implements *x25519-xsalsa20-poly1305*."
        },
        {
          "url": "https://github.com/dchest/tweetnacl-js#L221",
          "evidence": "Implements *xsalsa20-poly1305*."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "generates new random key pair for signing and returns it as an object with",
      "normalized_text": "Generates new random key pair for signing and returns it as an object with",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L154",
          "evidence": "Generates a new random key pair for box and returns it as an object with"
        },
        {
          "url": "https://github.com/dchest/tweetnacl-js#L283",
          "evidence": "Generates new random key pair for signing and returns it as an object with"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "implements *sha-512*",
      "normalized_text": "Implements *sha-512*",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L254",
          "evidence": "Implements *x25519*."
        },
        {
          "url": "https://github.com/dchest/tweetnacl-js#L344",
          "evidence": "Implements *SHA-512*."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "implements [ed25519](http://ed25519",
      "normalized_text": "Implements [ed25519](http://ed25519",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L279",
          "evidence": "Implements [ed25519](http://ed25519.cr.yp.to)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate random bytes,",
      "normalized_text": "Generate random bytes,",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L366",
          "evidence": "TweetNaCl.js uses the following methods to generate random bytes,"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide a suitable prng, the following functions,",
      "normalized_text": "Provide a suitable prng, the following functions,",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L373",
          "evidence": "If the platform doesn't provide a suitable PRNG, the following functions,"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implement secure random number",
      "normalized_text": "Implement secure random number",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L382",
          "evidence": "If a platform you are targeting doesn't implement secure random number"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports modern browsers that have a cryptographically secure",
      "normalized_text": "Supports modern browsers that have a cryptographically secure",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L409",
          "evidence": "TweetNaCl.js supports modern browsers that have a cryptographically secure"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "build minified versions:",
      "normalized_text": "Build minified versions:",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L430",
          "evidence": "To build minified versions:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run suite of tests in node",
      "normalized_text": "Run suite of tests in node",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L439",
          "evidence": "To run tests in Node.js:"
        },
        {
          "url": "https://github.com/dchest/tweetnacl-js#L449",
          "evidence": "To run full suite of tests in Node.js, including comparing outputs of"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run test-node-all",
      "normalized_text": "Run test-node-all",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L452",
          "evidence": "$ npm run test-node-all"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run build-test-browser",
      "normalized_text": "Run build-test-browser",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L456",
          "evidence": "$ npm run build-test-browser"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run tests in both node and electron:",
      "normalized_text": "Run tests in both node and electron:",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L461",
          "evidence": "To run tests in both Node and Electron:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run benchmarks in node",
      "normalized_text": "Run benchmarks in node",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L467",
          "evidence": "To run benchmarks in Node.js:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run benchmarks in a browser, open `test/benchmark/bench",
      "normalized_text": "Run benchmarks in a browser, open `test/benchmark/bench",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L472",
          "evidence": "To run benchmarks in a browser, open `test/benchmark/bench.html` (or"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run benchmarks on your devices by clicking on the links at the bottom",
      "normalized_text": "Run benchmarks on your devices by clicking on the links at the bottom",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L495",
          "evidence": "(You can run benchmarks on your devices by clicking on the links at the bottom"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*Implementation note**",
      "normalized_text": "*implementation note**",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L364",
          "evidence": "**Implementation note**"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "forward-secrecy \u2014 Axolotl ratchet implementation",
      "normalized_text": "Forward-secrecy \u2014 axolotl ratchet implementation",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L516",
          "evidence": "* [forward-secrecy](https://github.com/alax/forward-secrecy) \u2014 Axolotl ratchet implementation"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "ristretto255-js \u2014 implementation of the ristretto255 group",
      "normalized_text": "Ristretto255-js \u2014 implementation of the ristretto255 group",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L518",
          "evidence": "* [ristretto255-js](https://github.com/calibra/ristretto255-js) \u2014 implementation of the [ristretto255 group](https://ristretto.group/)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "tweetnacl-auth-js \u2014 implementation of `crypto_auth`",
      "normalized_text": "Tweetnacl-auth-js \u2014 implementation of `crypto_auth`",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/dchest/tweetnacl-js#L519",
          "evidence": "* [tweetnacl-auth-js](https://github.com/dchest/tweetnacl-auth-js) \u2014 implementation of [`crypto_auth`](http://nacl.cr.yp.to/auth.html)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides a variety of ways to authenticate to your google services",
      "normalized_text": "Provides a variety of ways to authenticate to your google services",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L49",
          "evidence": "This library provides a variety of ways to authenticate to your Google services."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports workload identity federation to access google cloud resources from non-google cloud platforms including amazon web services (aws), microsoft azure or any identity provider that supports openid connect (oidc)",
      "normalized_text": "Supports workload identity federation to access google cloud resources from non-google cloud platforms including amaz...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L50",
          "evidence": "- [Application Default Credentials](#choosing-the-correct-credential-type-automatically) - Use Application Default Credentials when you use a single identity for all users in your application. Especially useful for applications running on Google Cloud. Application Default Credentials also support workload identity federation to access Google Cloud resources from non-Google Cloud platforms."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L65",
          "evidence": "Application Default Credentials also supports Workload Identity Federation to access Google Cloud resources from non-Google Cloud platforms including Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC). Workload Identity Federation is recommended for non-Google Cloud environments as it avoids the need to download, manage and store service account private keys locally, see: [Workload Identity Federation](#workload-identity-federation)."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "perform actions on behalf of the end user",
      "normalized_text": "Perform actions on behalf of the end user",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L51",
          "evidence": "- [OAuth 2](#oauth2) - Use OAuth2 when you need to perform actions on behalf of the end user."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports [openid connect (oidc)](https://openid",
      "normalized_text": "Supports [openid connect (oidc)](https://openid",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L54",
          "evidence": "- [Workload Identity Federation](#workload-identity-federation) - Use workload identity federation to access Google Cloud resources from Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC)."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L366",
          "evidence": "Using workload identity federation, your application can access Google Cloud resources from Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC)."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L523",
          "evidence": "In order to access Google Cloud resources from an identity provider that supports [OpenID Connect (OIDC)](https://openid.net/connect/), the following requirements are needed:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L881",
          "evidence": "identity provider (IdP) that supports OpenID Connect (OIDC) or SAML 2.0 such as Azure Active Directory (Azure AD),"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L886",
          "evidence": "In order to access Google Cloud resources from an identity provider that supports [OpenID Connect (OIDC)](https://openid.net/connect/),"
        }
      ],
      "frequency": 5,
      "uniqueness_score": 0.2
    },
    {
      "text": "generate a short-lived credential with downscoped, restricted iam permissions that can use for cloud storage",
      "normalized_text": "Generate a short-lived credential with downscoped, restricted iam permissions that can use for cloud storage",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L57",
          "evidence": "- [Downscoped Client](#downscoped-client) - Use Downscoped Client with Credential Access Boundary to generate a short-lived credential with downscoped, restricted IAM permissions that can use for Cloud Storage."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides an implementation of [application default credentials (adc)](https://cloud",
      "normalized_text": "Provides an implementation of [application default credentials (adc)](https://cloud",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L61",
          "evidence": "This library provides an implementation of [Application Default Credentials (ADC)](https://cloud.google.com/docs/authentication/application-default-credentials) for Node.js. ADC provides a simple way to get credentials for use in calling Google APIs. How you [set up ADC](https://cloud.google.com/docs/authentication/provide-credentials-adc) depends on the environment where your code is running."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides a simple way to get credentials for use in calling google apis",
      "normalized_text": "Provides a simple way to get credentials for use in calling google apis",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L61",
          "evidence": "This library provides an implementation of [Application Default Credentials (ADC)](https://cloud.google.com/docs/authentication/application-default-credentials) for Node.js. ADC provides a simple way to get credentials for use in calling Google APIs. How you [set up ADC](https://cloud.google.com/docs/authentication/provide-credentials-adc) depends on the environment where your code is running."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "building an application that uses google cloud platform",
      "normalized_text": "Building an application that uses google cloud platform",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L63",
          "evidence": "ADC is best suited for cases when the call needs to have the same identity and authorization level for the application independent of the user. This is the recommended approach to authorize calls to Cloud APIs, particularly when you're building an application that uses Google Cloud Platform."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage and store service account private keys locally, see: workload identity federation",
      "normalized_text": "Manage and store service account private keys locally, see: workload identity federation",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L65",
          "evidence": "Application Default Credentials also supports Workload Identity Federation to access Google Cloud resources from non-Google Cloud platforms including Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC). Workload Identity Federation is recommended for non-Google Cloud environments as it avoids the need to download, manage and store service account private keys locally, see: [Workload Identity Federation](#workload-identity-federation)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable the api you want to use",
      "normalized_text": "Enable the api you want to use",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L67",
          "evidence": "#### Enable the API you want to use"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable the apis you'd like to call",
      "normalized_text": "Enable the apis you'd like to call",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L69",
          "evidence": "Before making your API call, you must be sure the API you're calling has been enabled. Go to **APIs & Auth** > **APIs** in the [Google Developers Console](https://console.cloud.google.com/) and enable the APIs you'd like to call. For the example below, you must enable the `DNS API`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable the `dns api`",
      "normalized_text": "Enable the `dns api`",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L69",
          "evidence": "Before making your API call, you must be sure the API you're calling has been enabled. Go to **APIs & Auth** > **APIs** in the [Google Developers Console](https://console.cloud.google.com/) and enable the APIs you'd like to call. For the example below, you must enable the `DNS API`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide an `expiry_date` and the token is expired",
      "normalized_text": "Provide an `expiry_date` and the token is expired",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L99",
          "evidence": "This library comes with an [OAuth2](https://developers.google.com/identity/protocols/OAuth2) client that allows you to retrieve an access token and refreshes the token and retry the request seamlessly if you also provide an `expiry_date` and the token is expired. The basics of Google's OAuth2 implementation is explained on [Google authorization and Authentication documentation](https://developers.google.com/accounts/docs/OAuth2Login)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a new oauth2client, and go through the oauth2 content",
      "normalized_text": "Create a new oauth2client, and go through the oauth2 content",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L140",
          "evidence": "* Create a new OAuth2Client, and go through the OAuth2 content"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L140",
          "evidence": "* Create a new OAuth2Client, and go through the OAuth2 content"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "create an oauth client to authorize the api call",
      "normalized_text": "Create an oauth client to authorize the api call",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L145",
          "evidence": "// create an oAuth client to authorize the API call.  Secrets are kept in a `keys.json` file,"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate the url that will be used for the consent dialog",
      "normalized_text": "Generate the url that will be used for the consent dialog",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L153",
          "evidence": "// Generate the url that will be used for the consent dialog."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L230",
          "evidence": "// Generate the url that will be used for the consent dialog."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "extend from this can utilize this parameter as well, such as `jwt` and `userrefreshclient`",
      "normalized_text": "Extend from this can utilize this parameter as well, such as `jwt` and `userrefreshclient`",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L267",
          "evidence": "Note, classes that extend from this can utilize this parameter as well, such as `JWT` and `UserRefreshClient`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support varies by api",
      "normalized_text": "Support varies by api",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L278",
          "evidence": "API Key support varies by API."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "configure a jwt auth client and authenticate your requests, for example when using a service account",
      "normalized_text": "Configure a jwt auth client and authenticate your requests, for example when using a service account",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L281",
          "evidence": "The Google Developers Console provides a `.json` file that you can use to configure a JWT auth client and authenticate your requests, for example when using a service account."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide them using an environment variable",
      "normalized_text": "Provide them using an environment variable",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L300",
          "evidence": "Instead of loading credentials from a key file, you can also provide them using an environment variable.  This is particularly convenient for systems that deploy directly from source control (Heroku, App Engine, etc)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "exporting your credentials:",
      "normalized_text": "Exporting your credentials:",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L302",
          "evidence": "Start by exporting your credentials:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a new client from the credentials:",
      "normalized_text": "Create a new client from the credentials:",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L318",
          "evidence": "Now you can create a new client from the credentials:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a jwt client",
      "normalized_text": "Create a jwt client",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L330",
          "evidence": "// create a JWT client"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow your workload to impersonate a service account",
      "normalized_text": "Allow your workload to impersonate a service account",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L368",
          "evidence": "Traditionally, applications running outside Google Cloud have used service account keys to access Google Cloud resources. Using identity federation, you can allow your workload to impersonate a service account."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow federation from azure)",
      "normalized_text": "Allow federation from azure)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L375",
          "evidence": "- AWS needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from AWS)."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L413",
          "evidence": "- AWS needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from AWS)."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L490",
          "evidence": "- Azure needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from Azure)."
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "configure workload identity federation from an oidc identity provider",
      "normalized_text": "Configure workload identity federation from an oidc identity provider",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L378",
          "evidence": "Follow the detailed [instructions](https://cloud.google.com/iam/docs/access-resources-aws) on how to configure workload identity federation from AWS."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L416",
          "evidence": "Follow the detailed [instructions](https://cloud.google.com/iam/docs/access-resources-aws) on how to configure workload identity federation from AWS."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L494",
          "evidence": "Follow the detailed [instructions](https://cloud.google.com/iam/docs/access-resources-azure) on how to configure workload identity federation from Microsoft Azure."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L528",
          "evidence": "Follow the detailed [instructions](https://cloud.google.com/iam/docs/access-resources-oidc) on how to configure workload identity federation from an OIDC identity provider."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L892",
          "evidence": "to configure workforce identity federation."
        }
      ],
      "frequency": 5,
      "uniqueness_score": 0.2
    },
    {
      "text": "generate an external account authorized user workforce identity configuration, run the following command:",
      "normalized_text": "Generate an external account authorized user workforce identity configuration, run the following command:",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L384",
          "evidence": "To generate the AWS workload identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L500",
          "evidence": "To generate the Azure workload identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L540",
          "evidence": "To generate a file-sourced OIDC configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L569",
          "evidence": "To generate a URL-sourced OIDC workload identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L696",
          "evidence": "To generate an external account authorized user workforce identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L724",
          "evidence": "To generate an executable-sourced workload identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L909",
          "evidence": "To generate a file-sourced OIDC configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L931",
          "evidence": "To generate a file-sourced SAML configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L956",
          "evidence": "To generate a URL-sourced OIDC workforce identity configuration, run the following command:"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1010",
          "evidence": "To generate an executable-sourced workforce identity configuration, run the following command:"
        }
      ],
      "frequency": 10,
      "uniqueness_score": 0.1
    },
    {
      "text": "generate an azure configuration file",
      "normalized_text": "Generate an azure configuration file",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L387",
          "evidence": "# Generate an AWS configuration file."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L503",
          "evidence": "# Generate an Azure configuration file."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "generate the configuration file in the specified output file",
      "normalized_text": "Generate the configuration file in the specified output file",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L401",
          "evidence": "This will generate the configuration file in the specified output file."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L517",
          "evidence": "This will generate the configuration file in the specified output file."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L563",
          "evidence": "This will generate the configuration file in the specified output file."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L949",
          "evidence": "These commands generate the configuration file in the specified output file."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L990",
          "evidence": "These commands generate the configuration file in the specified output file."
        }
      ],
      "frequency": 5,
      "uniqueness_score": 0.2
    },
    {
      "text": "support this soon",
      "normalized_text": "Support this soon",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L405",
          "evidence": "The gcloud create-cred-config command will be updated to support this soon."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { awsclient, awssecuritycredentials, awssecuritycredentialssupplier, externalaccountsuppliercontext } from 'google-auth-library';",
      "normalized_text": "Import { awsclient, awssecuritycredentials, awssecuritycredentialssupplier, externalaccountsuppliercontext } from 'go...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L429",
          "evidence": "import { AwsClient, AwsSecurityCredentials, AwsSecurityCredentialsSupplier, ExternalAccountSupplierContext } from 'google-auth-library';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { fromnodeproviderchain } from '@aws-sdk/credential-providers';",
      "normalized_text": "Import { fromnodeproviderchain } from '@aws-sdk/credential-providers';",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L430",
          "evidence": "import { fromNodeProviderChain } from '@aws-sdk/credential-providers';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { storage } from '@google-cloud/storage';",
      "normalized_text": "Import { storage } from '@google-cloud/storage';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L431",
          "evidence": "import { Storage } from '@google-cloud/storage';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implements awssecuritycredentialssupplier {",
      "normalized_text": "Implements awssecuritycredentialssupplier {",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L433",
          "evidence": "class AwsSupplier implements AwsSecurityCredentialsSupplier {"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a new auth client and use it to create service client, i",
      "normalized_text": "Create a new auth client and use it to create service client, i",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L470",
          "evidence": "// Create a new Auth client and use it to create service client, i.e. storage."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow federation from the identity provider)",
      "normalized_text": "Allow federation from the identity provider)",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L525",
          "evidence": "- An OIDC identity provider needs to be added in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from the identity provider)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process needs to be continuously refreshing the file location with a new oidc token prior to expiration",
      "normalized_text": "Process needs to be continuously refreshing the file location with a new oidc token prior to expiration",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L537",
          "evidence": "For file-sourced credentials, a background process needs to be continuously refreshing the file location with a new OIDC token prior to expiration."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate an oidc configuration file for file-sourced credentials",
      "normalized_text": "Generate an oidc configuration file for file-sourced credentials",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L543",
          "evidence": "# Generate an OIDC configuration file for file-sourced credentials."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L572",
          "evidence": "# Generate an OIDC configuration file for URL-sourced credentials."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L727",
          "evidence": "# Generate a configuration file for executable-sourced credentials."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L912",
          "evidence": "# Generate an OIDC configuration file for file-sourced credentials."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L934",
          "evidence": "# Generate a SAML configuration file for file-sourced credentials."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L959",
          "evidence": "# Generate an OIDC configuration file for URL-sourced credentials."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L980",
          "evidence": "# Generate a SAML configuration file for file-sourced credentials."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1013",
          "evidence": "# Generate a configuration file for executable-sourced credentials."
        }
      ],
      "frequency": 8,
      "uniqueness_score": 0.125
    },
    {
      "text": "handles the creation of both",
      "normalized_text": "Handles the creation of both",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L599",
          "evidence": "To configure X.509 certificate-sourced credentials, you must generate two separate configuration files: a primary **credential configuration file** and a **certificate configuration file**. The `gcloud iam workload-identity-pools create-cred-config` command handles the creation of both."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate two separate configuration files: a primary credential configuration file and a certificate configuration file",
      "normalized_text": "Generate two separate configuration files: a primary credential configuration file and a certificate configuration file",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L599",
          "evidence": "To configure X.509 certificate-sourced credentials, you must generate two separate configuration files: a primary **credential configuration file** and a **certificate configuration file**. The `gcloud iam workload-identity-pools create-cred-config` command handles the creation of both."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "creates the certificate configuration file at a default, well-known location that client libraries can automatically discover",
      "normalized_text": "Creates the certificate configuration file at a default, well-known location that client libraries can automatically ...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L605",
          "evidence": "If you omit the `--credential-cert-configuration-output-file` flag, gcloud creates the certificate configuration file at a default, well-known location that client libraries can automatically discover. This is the simplest approach for most use cases."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implements subjecttokensupplier {",
      "normalized_text": "Implements subjecttokensupplier {",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L662",
          "evidence": "class CustomSupplier implements SubjectTokenSupplier {"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1078",
          "evidence": "class CustomSupplier implements SubjectTokenSupplier {"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "allow you to sign in with a web browser to an external identity provider account via the",
      "normalized_text": "Allow you to sign in with a web browser to an external identity provider account via the",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L693",
          "evidence": "[External account authorized user credentials](https://cloud.google.com/iam/docs/workforce-obtaining-short-lived-credentials#browser-based-sign-in) allow you to sign in with a web browser to an external identity provider account via the"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a configuration for the auth library to use",
      "normalized_text": "Create a configuration for the auth library to use",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L694",
          "evidence": "gcloud CLI and create a configuration for the auth library to use."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate and refresh",
      "normalized_text": "Generate and refresh",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L708",
          "evidence": "The auth library will then use the provided refresh token from the configuration to generate and refresh"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "handle providing a valid, unexpired oidc id token or saml assertion in json format",
      "normalized_text": "Handle providing a valid, unexpired oidc id token or saml assertion in json format",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L718",
          "evidence": "The executable must handle providing a valid, unexpired OIDC ID token or SAML assertion in JSON format"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1004",
          "evidence": "The executable must handle providing a valid, unexpired OIDC ID token or SAML assertion in JSON format"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run the executable",
      "normalized_text": "Run the executable",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L759",
          "evidence": "response to this file, it improves performance as it avoids the need to run the executable"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1044",
          "evidence": "response to this file, it improves performance as it avoids the need to run the executable"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "handle writing to this file - the auth libraries will only attempt to read from",
      "normalized_text": "Handle writing to this file - the auth libraries will only attempt to read from",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L761",
          "evidence": "handle writing to this file - the auth libraries will only attempt to read from"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1046",
          "evidence": "handle writing to this file - the auth libraries will only attempt to read from"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "include both the `version` and `success` fields",
      "normalized_text": "Include both the `version` and `success` fields",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L819",
          "evidence": "All response types must include both the `version` and `success` fields."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L823",
          "evidence": "* Error responses must include both the `code` and `message` fields."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "include the `token_type` and one of",
      "normalized_text": "Include the `token_type` and one of",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L820",
          "evidence": "* Successful responses must include the `token_type` and one of"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide an optional argument to configure the service account access token lifetime",
      "normalized_text": "Provide an optional argument to configure the service account access token lifetime",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L846",
          "evidence": "When creating a credential configuration with workload identity federation using service account impersonation, you can provide an optional argument to configure the service account access token lifetime."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L846",
          "evidence": "When creating a credential configuration with workload identity federation using service account impersonation, you can provide an optional argument to configure the service account access token lifetime."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "generate the configuration with configurable token lifetime, run the following command (this example uses an aws configuration, but the token lifetime can be configured for all workload identity federation providers):",
      "normalized_text": "Generate the configuration with configurable token lifetime, run the following command (this example uses an aws conf...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L848",
          "evidence": "To generate the configuration with configurable token lifetime, run the following command (this example uses an AWS configuration, but the token lifetime can be configured for all workload identity federation providers):"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the following command (this example uses an aws configuration, but the token lifetime can be configured for all workload identity federation providers):",
      "normalized_text": "Run the following command (this example uses an aws configuration, but the token lifetime can be configured for all w...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L848",
          "evidence": "To generate the configuration with configurable token lifetime, run the following command (this example uses an AWS configuration, but the token lifetime can be configured for all workload identity federation providers):"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate an aws configuration file with configurable token lifetime",
      "normalized_text": "Generate an aws configuration file with configurable token lifetime",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L851",
          "evidence": "# Generate an AWS configuration file with configurable token lifetime."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support syncless, attribute-based single sign on",
      "normalized_text": "Support syncless, attribute-based single sign on",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L878",
          "evidence": "extends Google Cloud's identity capabilities to support syncless, attribute-based single sign on."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "extends google cloud's identity capabilities to support syncless, attribute-based single sign on",
      "normalized_text": "Extends google cloud's identity capabilities to support syncless, attribute-based single sign on",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L878",
          "evidence": "extends Google Cloud's identity capabilities to support syncless, attribute-based single sign on."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process needs to be continuously refreshing the file",
      "normalized_text": "Process needs to be continuously refreshing the file",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L904",
          "evidence": "For file-sourced credentials, a background process needs to be continuously refreshing the file"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate a url-sourced saml configuration, run the following command:",
      "normalized_text": "Generate a url-sourced saml configuration, run the following command:",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L977",
          "evidence": "To generate a URL-sourced SAML configuration, run the following command:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate the json credentials configuration file for your external identity as described above",
      "normalized_text": "Generate the json credentials configuration file for your external identity as described above",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1113",
          "evidence": "In order to use external identities with Application Default Credentials, you need to generate the JSON credentials configuration file for your external identity as described above."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "export google_application_credentials=/path/to/config",
      "normalized_text": "Export google_application_credentials=/path/to/config",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1117",
          "evidence": "export GOOGLE_APPLICATION_CREDENTIALS=/path/to/config.json"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable cloud resource manager api on the project",
      "normalized_text": "Enable cloud resource manager api on the project",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1142",
          "evidence": "// or enable Cloud Resource Manager API on the project."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate with the gcloud cli unless you verify that the url fields point to a googleapis",
      "normalized_text": "Generate with the gcloud cli unless you verify that the url fields point to a googleapis",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1162",
          "evidence": "Note that this library does not perform any validation on the token_url, token_info_url, or service_account_impersonation_url fields of the credential configuration. It is not recommended to use a credential configuration that you did not generate with the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "perform any validation on the token_url, token_info_url, or service_account_impersonation_url fields of the credential configuration",
      "normalized_text": "Perform any validation on the token_url, token_info_url, or service_account_impersonation_url fields of the credentia...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1162",
          "evidence": "Note that this library does not perform any validation on the token_url, token_info_url, or service_account_impersonation_url fields of the credential configuration. It is not recommended to use a credential configuration that you did not generate with the gcloud CLI unless you verify that the URL fields point to a googleapis.com domain."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run or cloud functions, or using cloud identity-aware",
      "normalized_text": "Run or cloud functions, or using cloud identity-aware",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1166",
          "evidence": "If your application is running on Cloud Run or Cloud Functions, or using Cloud Identity-Aware"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run services, your service account will need the",
      "normalized_text": "Run services, your service account will need the",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1170",
          "evidence": "For invoking Cloud Run services, your service account will need the"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run invoker`](https://cloud",
      "normalized_text": "Run invoker`](https://cloud",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1171",
          "evidence": "[`Cloud Run Invoker`](https://cloud.google.com/run/docs/authenticating/service-to-service)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides authentication for applications where local credentials impersonates a remote service account using [iam credentials api](https://cloud",
      "normalized_text": "Provides authentication for applications where local credentials impersonates a remote service account using [iam cre...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1239",
          "evidence": "Provides authentication for applications where local credentials impersonates a remote service account using [IAM Credentials API](https://cloud.google.com/iam/docs/reference/credentials/rest)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports credential access boundaries for now",
      "normalized_text": "Supports credential access boundaries for now",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1310",
          "evidence": "> Notice: Only Cloud Storage supports Credential Access Boundaries for now."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate and use credentials generated from",
      "normalized_text": "Generate and use credentials generated from",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1313",
          "evidence": "There are two entities needed to generate and use credentials generated from"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate downscoped tokens",
      "normalized_text": "Generate downscoped tokens",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1316",
          "evidence": "- Token broker: This is the entity with elevated permissions. This entity has the permissions needed to generate downscoped tokens. The common pattern of usage is to have a token broker with elevated access generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to Google Cloud Storage resources."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to google cloud storage resources",
      "normalized_text": "Generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived acces...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1316",
          "evidence": "- Token broker: This is the entity with elevated permissions. This entity has the permissions needed to generate downscoped tokens. The common pattern of usage is to have a token broker with elevated access generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to Google Cloud Storage resources."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a downscopedclient",
      "normalized_text": "Create a downscopedclient",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1346",
          "evidence": "// Use the client to create a DownscopedClient."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate short lived downscoped access tokens which will be passed to the token consumer",
      "normalized_text": "Generate short lived downscoped access tokens which will be passed to the token consumer",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1360",
          "evidence": "The broker will instantiate downscoped credentials instances that can be used to generate short lived downscoped access tokens which will be passed to the token consumer."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide it with downscoped tokens to run operations on gcs buckets",
      "normalized_text": "Provide it with downscoped tokens to run operations on gcs buckets",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1362",
          "evidence": "- Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on gcs buckets",
      "normalized_text": "Generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations ...",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1362",
          "evidence": "- Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run operations on gcs buckets",
      "normalized_text": "Run operations on gcs buckets",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1362",
          "evidence": "- Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create the oauth credentials (the consumer)",
      "normalized_text": "Create the oauth credentials (the consumer)",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1368",
          "evidence": "// Create the OAuth credentials (the consumer)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow the consumer to obtain new downscoped tokens on",
      "normalized_text": "Allow the consumer to obtain new downscoped tokens on",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1372",
          "evidence": "// This will allow the consumer to obtain new downscoped tokens on"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create a gcs object",
      "normalized_text": "Create a gcs object",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1386",
          "evidence": "// Use the consumer client to define storageOptions and create a GCS object."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support legacy versions of node",
      "normalized_text": "Support legacy versions of node",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1449",
          "evidence": "Google's client libraries support legacy versions of Node.js runtimes on a"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Application Default Credentials - Use Application Default Credentials when you use a single identity for all users in your application. Especially useful for applications running on Google Cloud. Application Default Credentials also support workload identity federation to access Google Cloud resources from non-Google Cloud platforms.",
      "normalized_text": "Application default credentials - use application default credentials when you use a single identity for all users in...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L50",
          "evidence": "- [Application Default Credentials](#choosing-the-correct-credential-type-automatically) - Use Application Default Credentials when you use a single identity for all users in your application. Especially useful for applications running on Google Cloud. Application Default Credentials also support workload identity federation to access Google Cloud resources from non-Google Cloud platforms."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "OAuth 2 - Use OAuth2 when you need to perform actions on behalf of the end user.",
      "normalized_text": "Oauth 2 - use oauth2 when you need to perform actions on behalf of the end user.",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L51",
          "evidence": "- [OAuth 2](#oauth2) - Use OAuth2 when you need to perform actions on behalf of the end user."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Workload Identity Federation - Use workload identity federation to access Google Cloud resources from Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC).",
      "normalized_text": "Workload identity federation - use workload identity federation to access google cloud resources from amazon web serv...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L54",
          "evidence": "- [Workload Identity Federation](#workload-identity-federation) - Use workload identity federation to access Google Cloud resources from Amazon Web Services (AWS), Microsoft Azure or any identity provider that supports OpenID Connect (OIDC)."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L55",
          "evidence": "- [Workforce Identity Federation](#workforce-identity-federation) - Use workforce identity federation to access Google Cloud resources using an external identity provider (IdP) to authenticate and authorize a workforce\u2014a group of users, such as employees, partners, and contractors\u2014using IAM, so that the users can access Google Cloud services."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "Downscoped Client - Use Downscoped Client with Credential Access Boundary to generate a short-lived credential with downscoped, restricted IAM permissions that can use for Cloud Storage.",
      "normalized_text": "Downscoped client - use downscoped client with credential access boundary to generate a short-lived credential with d...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L57",
          "evidence": "- [Downscoped Client](#downscoped-client) - Use Downscoped Client with Credential Access Boundary to generate a short-lived credential with downscoped, restricted IAM permissions that can use for Cloud Storage."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*Important**: If you accept a credential configuration (credential JSON/File/Stream) from an external source for authentication to Google Cloud, you must validate it before providing it to any Google API or library. Providing an unvalidated credential configuration to Google APIs can compromise the security of your systems and data. For more information, refer to Validate credential configurations from external sources.",
      "normalized_text": "*important**: if you accept a credential configuration (credential json/file/stream) from an external source for auth...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L341",
          "evidence": "**Important**: If you accept a credential configuration (credential JSON/File/Stream) from an external source for authentication to Google Cloud, you must validate it before providing it to any Google API or library. Providing an unvalidated credential configuration to Google APIs can compromise the security of your systems and data. For more information, refer to [Validate credential configurations from external sources](https://cloud.google.com/docs/authentication/external/externally-sourced-credentials)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "A workforce identity pool needs to be created.",
      "normalized_text": "A workforce identity pool needs to be created.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L374",
          "evidence": "- A workload identity pool needs to be created."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L412",
          "evidence": "- A workload identity pool needs to be created."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L489",
          "evidence": "- A workload identity pool needs to be created."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L524",
          "evidence": "- A workload identity pool needs to be created."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L888",
          "evidence": "- A workforce identity pool needs to be created."
        }
      ],
      "frequency": 5,
      "uniqueness_score": 0.2
    },
    {
      "text": "AWS needs to be added as an identity provider in the workload identity pool (The Google organization policy needs to allow federation from AWS).",
      "normalized_text": "Aws needs to be added as an identity provider in the workload identity pool (the google organization policy needs to ...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L375",
          "evidence": "- AWS needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from AWS)."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L413",
          "evidence": "- AWS needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from AWS)."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L490",
          "evidence": "- Azure needs to be added as an identity provider in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from Azure)."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L525",
          "evidence": "- An OIDC identity provider needs to be added in the workload identity pool (The Google [organization policy](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#restrict) needs to allow federation from the identity provider)."
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "--output-file /path/to/generated/config.json \\",
      "normalized_text": "--output-file /path/to/generated/config.json \\",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L392",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L508",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L553",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L583",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L740",
          "evidence": "--output-file /path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L856",
          "evidence": "--output-file /path/to/generated/config.json \\"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L923",
          "evidence": "--output-file=/path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L940",
          "evidence": "--output-file=/path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L966",
          "evidence": "--output-file=/path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L987",
          "evidence": "--output-file=/path/to/generated/config.json"
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1026",
          "evidence": "--output-file /path/to/generated/config.json"
        }
      ],
      "frequency": 11,
      "uniqueness_score": 0.09090909090909091
    },
    {
      "text": "`$PROVIDER_ID`: The OIDC or SAML provider ID.",
      "normalized_text": "`$provider_id`: the oidc or saml provider id.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L398",
          "evidence": "- `$AWS_PROVIDER_ID`: The AWS provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L481",
          "evidence": "* `$PROVIDER_ID`: The provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L514",
          "evidence": "- `$AZURE_PROVIDER_ID`: The Azure provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L559",
          "evidence": "- `$OIDC_PROVIDER_ID`: The OIDC provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L589",
          "evidence": "- `$OIDC_PROVIDER_ID`: The OIDC provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L620",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L687",
          "evidence": "* `$PROVIDER_ID`: The provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L745",
          "evidence": "- `$PROVIDER_ID`: The OIDC or SAML provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L863",
          "evidence": "- `$AWS_PROVIDER_ID`: The AWS provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L927",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L945",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L971",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L994",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1030",
          "evidence": "- `$PROVIDER_ID`: The provider ID."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1102",
          "evidence": "* `$PROVIDER_ID`: The provider ID."
        }
      ],
      "frequency": 15,
      "uniqueness_score": 0.06666666666666667
    },
    {
      "text": "The Azure tenant needs to be configured for identity federation.",
      "normalized_text": "The azure tenant needs to be configured for identity federation.",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L491",
          "evidence": "- The Azure tenant needs to be configured for identity federation."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`$PATH_TO_TRUST_CHAIN`: Points to the file path of the X.509 certificate trust chain file, containing any intermediate certificates required to the trust chain between the leaf certificate and the trust store configured in the Workload Identity Federation pool.",
      "normalized_text": "`$path_to_trust_chain`: points to the file path of the x.509 certificate trust chain file, containing any intermediat...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L624",
          "evidence": "- `$PATH_TO_TRUST_CHAIN`: Points to the file path of the X.509 certificate trust chain file, containing any intermediate certificates required to complete the trust chain between the leaf certificate and the trust store configured in the Workload Identity Federation pool."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`/path/to/config.json`: Created at the path you specified. This file will contain `\"use_default_certificate_config\": true` to instruct clients to look for the certificate configuration at the default path.",
      "normalized_text": "`/path/to/config.json`: created at the path you specified. this file will contain `\"use_default_certificate_config\": ...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L627",
          "evidence": "- `/path/to/config.json`: Created at the path you specified. This file will contain   `\"use_default_certificate_config\": true` to instruct clients to look for the certificate configuration at the default path."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L650",
          "evidence": "- `/path/to/config.json`: Created at the path you specified. This file will contain a `\"certificate_config_location\"` field that points to your custom path."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "`certificate_config.json`: Created at the default gcloud configuration path, which is typically `~/.config/gcloud/certificate_config.json` on Linux and macOS, or `%APPDATA%\\gcloud\\certificate_config.json` on Windows.",
      "normalized_text": "`certificate_config.json`: created at the default gcloud configuration path, which is typically `~/.config/gcloud/cer...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L628",
          "evidence": "- `certificate_config.json`: Created at the default gcloud configuration path, which is typically `~/.config/gcloud/certificate_config.json` on Linux and macOS, or `%APPDATA%\\gcloud\\certificate_config.json` on Windows."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`cert_config.json`: Created at `/custom/path/cert_config.json`, as specified by the flag.",
      "normalized_text": "`cert_config.json`: created at `/custom/path/cert_config.json`, as specified by the flag.",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L651",
          "evidence": "- `cert_config.json`: Created at `/custom/path/cert_config.json`, as specified by the flag."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`$LOGIN_CONFIG`: The login config file generated with the cloud console or",
      "normalized_text": "`$login_config`: the login config file generated with the cloud console or",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L703",
          "evidence": "- `$LOGIN_CONFIG`: The login config file generated with the cloud console or"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "`$EXECUTABLE_COMMAND`: The command to run, including arguments. Must be an absolute path to the program.",
      "normalized_text": "`$executable_command`: the command to run, including arguments. must be an absolute path to the program.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L748",
          "evidence": "- `$EXECUTABLE_COMMAND`: The full command to run, including arguments. Must be an absolute path to the program."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1032",
          "evidence": "- `$EXECUTABLE_COMMAND`: The full command to run, including arguments. Must be an absolute path to the program."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "`version`: The version of the JSON output. Currently, only version 1 is supported.",
      "normalized_text": "`version`: the version of the json output. currently, only version 1 is supported.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L806",
          "evidence": "* `version`: The version of the JSON output. Currently, only version 1 is supported."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Successful responses must include the `token_type` and one of",
      "normalized_text": "Successful responses must include the `token_type` and one of",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L820",
          "evidence": "* Successful responses must include the `token_type` and one of"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Error responses must include both the `code` and `message` fields.",
      "normalized_text": "Error responses must include both the `code` and `message` fields.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L823",
          "evidence": "* Error responses must include both the `code` and `message` fields."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Access to the script should be restricted as it will be displaying credentials to stdout. This ensures that rogue processes do not gain access to the script.",
      "normalized_text": "Access to the script should be restricted as it will be displaying credentials to stdout. this ensures that rogue pro...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L835",
          "evidence": "* Access to the script should be restricted as it will be displaying credentials to stdout. This ensures that rogue processes do not gain  access to the script."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1059",
          "evidence": "* Access to the script should be restricted as it will be displaying credentials to stdout. This ensures that rogue processes do not gain access to the script."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "The configuration file should not be modifiable. Write access should be restricted to avoid processes modifying the executable command portion.",
      "normalized_text": "The configuration file should not be modifiable. write access should be restricted to avoid processes modifying the e...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L836",
          "evidence": "* The configuration file should not be modifiable. Write access should be restricted to avoid processes modifying the executable command portion."
        },
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1060",
          "evidence": "* The configuration file should not be modifiable. Write access should be restricted to avoid processes modifying the executable command portion."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "An OIDC or SAML 2.0 identity provider needs to be added in the workforce pool.",
      "normalized_text": "An oidc or saml 2.0 identity provider needs to be added in the workforce pool.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L889",
          "evidence": "- An OIDC or SAML 2.0 identity provider needs to be added in the workforce pool."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Token broker: This is the entity with elevated permissions. This entity has the permissions needed to generate downscoped tokens. The common pattern of usage is to have a token broker with elevated access generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to Google Cloud Storage resources.",
      "normalized_text": "Token broker: this is the entity with elevated permissions. this entity has the permissions needed to generate downsc...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1316",
          "evidence": "- Token broker: This is the entity with elevated permissions. This entity has the permissions needed to generate downscoped tokens. The common pattern of usage is to have a token broker with elevated access generate these downscoped credentials from higher access source credentials and pass the downscoped short-lived access tokens to a token consumer via some secure authenticated channel for limited access to Google Cloud Storage resources."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker.",
      "normalized_text": "Token consumer: this is the consumer of the downscoped tokens. this entity does not have the direct ability to genera...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/googleapis/google-auth-library-nodejs#L1362",
          "evidence": "- Token consumer: This is the consumer of the downscoped tokens. This entity does not have the direct ability to generate access tokens and instead relies on the token broker to provide it with downscoped tokens to run operations on GCS buckets. It is assumed that the downscoped token consumer may have its own mechanism to authenticate itself with the token broker."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { bearer } from 'permit'",
      "normalized_text": "Import { bearer } from 'permit'",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ianstormtaylor/permit#L44",
          "evidence": "import { Bearer } from 'permit'"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run into any of these problems before while adding authentication to a node",
      "normalized_text": "Run into any of these problems before while adding authentication to a node",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/ianstormtaylor/permit#L93",
          "evidence": "Don't get me wrong, Passport works great for working with OAuth providers. But if you've run into any of these problems before while adding authentication to a Node.js API, you might like Permit."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "handle complex oauth integrations with facebook, google, etc",
      "normalized_text": "Handle complex oauth integrations with facebook, google, etc",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ianstormtaylor/permit#L101",
          "evidence": "1. **API first.** Permit was designed with authenticating APIs in mind, so it's able to be _much_ leaner than others, since it doesn't need to handle complex OAuth integrations with Facebook, Google, etc."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allowing it to be used for a variety of use cases depending on your server framework, your feelings about orms, your use of promises, etc",
      "normalized_text": "Allowing it to be used for a variety of use cases depending on your server framework, your feelings about orms, your ...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ianstormtaylor/permit#L113",
          "evidence": "Permit's API is very flexible, allowing it to be used for a variety of use cases depending on your server framework, your feelings about ORMs, your use of promises, etc. Here are a few examples of common patterns..."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Other middleware are tightly-coupled to it. Passport stores state on the `req` object, so all your other middleware (even other third-party middleware) become tightly coupled to its implementation, making your codebase brittle.",
      "normalized_text": "Other middleware are tightly-coupled to it. passport stores state on the `req` object, so all your other middleware (...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ianstormtaylor/permit#L87",
          "evidence": "* **Other middleware are tightly-coupled to it.** Passport stores state on the `req` object, so all your other middleware (even other third-party middleware) become tightly coupled to its implementation, making your codebase brittle."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "It's not very actively maintained. Passport's focus on OAuth providers means that it takes on a _huge_ amount of scope, across a lot of repositories, many of which are not actively maintained anymore.",
      "normalized_text": "It's not very actively maintained. passport's focus on oauth providers means that it takes on a _huge_ amount of scop...",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/ianstormtaylor/permit#L91",
          "evidence": "* **It's not very actively maintained.** Passport's focus on OAuth providers means that it takes on a _huge_ amount of scope, across a lot of repositories, many of which are not actively maintained anymore."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implementing in real world",
      "normalized_text": "Implementing in real world",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L10",
          "evidence": "**WARNING**: The author in no way guarantees that the code is secure. The library is only meant for educational purposes and the code should not be used for implementing in real world. All the example scripts in the library are *trivial* implementations."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create this library",
      "normalized_text": "Create this library",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L13",
          "evidence": "* _Motivation_- What motivated me to create this library"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide a platform for learning attacks in crypto and for experienced ctf players to practice challenges systematically divided into attacks associated with different sub-domains in crypto",
      "normalized_text": "Provide a platform for learning attacks in crypto and for experienced ctf players to practice challenges systematical...",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L22",
          "evidence": "Help CTF players and individuals interested in the field of Cryptography provide a platform for learning attacks in crypto and for experienced CTF players to practice challenges systematically divided into attacks associated with different sub-domains in crypto. Also, illustrate through various attack explanations how proper implementation of protocols is crucial."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate a valid authentication tag of message m1 \\|\\| m2 (concatenation) given mac(m1) | <ul><li>- [x] [\\[link\\]](https://github",
      "normalized_text": "Generate a valid authentication tag of message m1 \\|\\| m2 (concatenation) given mac(m1) | <ul><li>- [x] [\\[link\\]](ht...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L83",
          "evidence": "| 3     | [Length Extension Attack on CBC-MAC](https://github.com/ashutosh1206/Crypton/tree/master/Message-Authentication-Code/Attack-Length-Extension-CBC-MAC)- generate a valid authentication tag of message M1 \\|\\| M2 (concatenation) given MAC(M1) | <ul><li>- [x] [\\[link\\]](https://github.com/ashutosh1206/Crypton/blob/master/Message-Authentication-Code/Attack-Length-Extension-CBC-MAC/README.md)</li></ul> | <ul><li>- [x] [\\[link\\]](https://github.com/ashutosh1206/Crypton/blob/master/Message-Authentication-Code/Attack-Length-Extension-CBC-MAC/CBC-Length-Extension.py) </li></ul>| <ul><li>- [ ] </li></ul> |"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "implementing ae with macs: encrypt and mac, mac then encrypt and encrypt then mac| <ul><li>- [x] [\\[link\\]](https://github",
      "normalized_text": "Implementing ae with macs: encrypt and mac, mac then encrypt and encrypt then mac| <ul><li>- [x] [\\[link\\]](https://g...",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L113",
          "evidence": "| 2     | [AE with MACs](https://github.com/ashutosh1206/Crypton/tree/master/Authenticated-Encryption/AE-with-MACs)- different techniques of implementing AE with MACs: Encrypt and MAC, MAC then encrypt and encrypt then MAC| <ul><li>- [x] [\\[link\\]](https://github.com/ashutosh1206/Crypton/tree/master/Authenticated-Encryption#authenticated-encryption-using-macs)</li></ul> | <ul><li>- [ ] </li></ul>| <ul><li>- [ ] </li></ul> |"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*WARNING**: The author in no way guarantees that the code is secure. The library is only meant for educational purposes and the code should not be used for implementing in real world. All the example scripts in the library are *trivial* implementations.",
      "normalized_text": "*warning**: the author in no way guarantees that the code is secure. the library is only meant for educational purpos...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L10",
          "evidence": "**WARNING**: The author in no way guarantees that the code is secure. The library is only meant for educational purposes and the code should not be used for implementing in real world. All the example scripts in the library are *trivial* implementations."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "_Motivation_- What motivated me to create this library",
      "normalized_text": "_motivation_- what motivated me to create this library",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L13",
          "evidence": "* _Motivation_- What motivated me to create this library"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "_Future Plans/TODO_- Attacks/concepts that are to be included soon",
      "normalized_text": "_future plans/todo_- attacks/concepts that are to be included soon",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L16",
          "evidence": "* _Future Plans/TODO_- Attacks/concepts that are to be included soon"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "+ Implementation of HBA on padded messages",
      "normalized_text": "+ implementation of hba on padded messages",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/ashutosh1206/Crypton#L165",
          "evidence": "+ Implementation of HBA on padded messages"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support for apple authentication on ios and android, including support for all `applebutton` variants",
      "normalized_text": "Support for apple authentication on ios and android, including support for all `applebutton` variants",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L18",
          "evidence": "A well typed React Native library providing support for Apple Authentication on iOS and Android, including support for all `AppleButton` variants."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow you to develop using ios version `13` and higher, when the apis for sign in with apple became available",
      "normalized_text": "Allow you to develop using ios version `13` and higher, when the apis for sign in with apple became available",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L30",
          "evidence": "- (iOS only) You are using Xcode version `11` or higher. This will allow you to develop using iOS version `13` and higher, when the APIs for Sign In with Apple became available."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support and introduced a few breaking changes with how methods are accessed",
      "normalized_text": "Support and introduced a few breaking changes with how methods are accessed",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L35",
          "evidence": "Version 2 added Android support and introduced a few breaking changes with how methods are accessed. Please see the [Migration Guide](docs/MIGRATION.md)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports react native auto-linking",
      "normalized_text": "Supports react native auto-linking",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L45",
          "evidence": "You will not have to manually link this module as it supports React Native auto-linking."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable the sign in with apple capability in your app, set the ios",
      "normalized_text": "Enable the sign in with apple capability in your app, set the ios",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L49",
          "evidence": "To enable the Sign In with Apple capability in your app, set the ios.usesAppleSignIn property to true in your project's app config:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run `npx expo prebuild`",
      "normalized_text": "Run `npx expo prebuild`",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L60",
          "evidence": "You may also need to run `npx expo prebuild`."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import the `appleauth` ([api documentation](docs/interfaces/_lib_index_d_",
      "normalized_text": "Import the `appleauth` ([api documentation](docs/interfaces/_lib_index_d_",
      "category": "Documentation",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L78",
          "evidence": "Import the `appleAuth` ([API documentation](docs/interfaces/_lib_index_d_.md#66)) module and the `AppleButton` ([API documentation](docs/interfaces/_lib_index_d_.applebuttonprops.md)) exported member element from the `@invertase/react-native-apple-authentication` library. Setup an event handler (`onPress`) to kick start the authentication request."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import react, { useeffect } from 'react';",
      "normalized_text": "Import react, { useeffect } from 'react';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L83",
          "evidence": "import React from 'react';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L140",
          "evidence": "import React, { useEffect } from 'react';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L173",
          "evidence": "import React from 'react';"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "import { view } from 'react-native';",
      "normalized_text": "Import { view } from 'react-native';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L84",
          "evidence": "import { View } from 'react-native';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L141",
          "evidence": "import { View } from 'react-native';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L174",
          "evidence": "import { View } from 'react-native';"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "import { appleauthandroid, applebutton } from '@invertase/react-native-apple-authentication';",
      "normalized_text": "Import { appleauthandroid, applebutton } from '@invertase/react-native-apple-authentication';",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L85",
          "evidence": "import { AppleButton } from '@invertase/react-native-apple-authentication';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L112",
          "evidence": "import { appleAuth } from '@invertase/react-native-apple-authentication';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L142",
          "evidence": "import { appleAuth, AppleButton } from '@invertase/react-native-apple-authentication';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L175",
          "evidence": "import { appleAuthAndroid, AppleButton } from '@invertase/react-native-apple-authentication';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L200",
          "evidence": "import { appleAuthAndroid } from '@invertase/react-native-apple-authentication';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L348",
          "evidence": "import { appleAuth } from '@invertase/react-native-apple-authentication';"
        }
      ],
      "frequency": 6,
      "uniqueness_score": 0.16666666666666666
    },
    {
      "text": "implement the login process on web",
      "normalized_text": "Implement the login process on web",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L108",
          "evidence": "#### 2. Implement the login process"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L160",
          "evidence": "#### 4. Implement the logout process"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L196",
          "evidence": "#### 2. Implement the login process"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L250",
          "evidence": "#### 2. Implement the login process on web"
        }
      ],
      "frequency": 4,
      "uniqueness_score": 0.25
    },
    {
      "text": "performs login request",
      "normalized_text": "Performs login request",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L115",
          "evidence": "// performs login request"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "allow for proper authentication on android",
      "normalized_text": "Allow for proper authentication on android",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L169",
          "evidence": "Make sure to correctly configure your Apple developer account to allow for proper authentication on Android. You can checkout [our guide](docs/ANDROID_EXTRA.md) for more info."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "configure your apple developer account to allow for proper authentication on android",
      "normalized_text": "Configure your apple developer account to allow for proper authentication on android",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L169",
          "evidence": "Make sure to correctly configure your Apple developer account to allow for proper authentication on Android. You can checkout [our guide](docs/ANDROID_EXTRA.md) for more info."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import 'react-native-get-random-values';",
      "normalized_text": "Import 'react-native-get-random-values';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L201",
          "evidence": "import 'react-native-get-random-values';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import { v4 as uuid } from 'uuid'",
      "normalized_text": "Import { v4 as uuid } from 'uuid'",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L202",
          "evidence": "import { v4 as uuid } from 'uuid'"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate secure, random values for state and nonce",
      "normalized_text": "Generate secure, random values for state and nonce",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L205",
          "evidence": "// Generate secure, random values for state and nonce"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "configure the request",
      "normalized_text": "Configure the request",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L209",
          "evidence": "// Configure the request"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import applesignin from 'react-apple-signin-auth';",
      "normalized_text": "Import applesignin from 'react-apple-signin-auth';",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L252",
          "evidence": "import AppleSignin from 'react-apple-signin-auth';"
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L308",
          "evidence": "import appleSigninAuth from 'apple-signin-auth';"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "export default myapplesigninbutton;",
      "normalized_text": "Export default myapplesigninbutton;",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L288",
          "evidence": "export default MyAppleSigninButton;"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import crypto from 'crypto';",
      "normalized_text": "Import crypto from 'crypto';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L307",
          "evidence": "import crypto from 'crypto';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "- For supporting multi language, you can add CFBundleAllowMixedLocalizations key to Info.plist.",
      "normalized_text": "- for supporting multi language, you can add cfbundleallowmixedlocalizations key to info.plist.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L340",
          "evidence": "- For supporting multi language, you can add CFBundleAllowMixedLocalizations key to Info.plist."
        },
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L340",
          "evidence": "- For supporting multi language, you can add CFBundleAllowMixedLocalizations key to Info.plist."
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "import { jwtdecode } from 'jwt-decode';",
      "normalized_text": "Import { jwtdecode } from 'jwt-decode';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L349",
          "evidence": "import { jwtDecode } from 'jwt-decode';"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "manage apple account](https://appleid",
      "normalized_text": "Manage apple account](https://appleid",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L375",
          "evidence": "If you are using a simulator, go to [Manage Apple Account](https://appleid.apple.com/account/manage)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "(iOS only) You are using Xcode version `11` or higher. This will allow you to develop using iOS version `13` and higher, when the APIs for Sign In with Apple became available.",
      "normalized_text": "(ios only) you are using xcode version `11` or higher. this will allow you to develop using ios version `13` and high...",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L30",
          "evidence": "- (iOS only) You are using Xcode version `11` or higher. This will allow you to develop using iOS version `13` and higher, when the APIs for Sign In with Apple became available."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Auth0 Implementation",
      "normalized_text": "Auth0 implementation",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L69",
          "evidence": "- [Auth0 Implementation](docs/Auth0.md)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "For Android support, a couple extra steps are required on your Apple developer account. Checkout our guide for more info.",
      "normalized_text": "For android support, a couple extra steps are required on your apple developer account. checkout our guide for more i...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L71",
          "evidence": "- For Android support, a couple extra steps are required on your Apple developer account. Checkout [our guide](docs/ANDROID_EXTRA.md) for more info."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Based on the Firebase implementation guidelines the nonce provided to `appleAuth.performRequest` (iOS) and `appleAuthAndroid.configure` (Android) is automatically SHA256-hashed.",
      "normalized_text": "Based on the firebase implementation guidelines the nonce provided to `appleauth.performrequest` (ios) and `appleauth...",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/invertase/react-native-apple-authentication#L300",
          "evidence": "- Based on the [Firebase implementation guidelines](https://firebase.google.com/docs/auth/ios/apple#sign_in_with_apple_and_authenticate_with_firebase) the nonce provided to `appleAuth.performRequest` (iOS) and `appleAuthAndroid.configure` (Android) is automatically SHA256-hashed."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "supports [azure ad b2c](https://azure",
      "normalized_text": "Supports [azure ad b2c](https://azure",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L3",
          "evidence": "The MSAL library for .NET is part of the [Microsoft identity platform for developers](https://aka.ms/aaddevv2) (formerly named Azure AD) v2.0. It enables you to acquire security tokens to call protected APIs. It uses industry standard OAuth2 and OpenID Connect. The library also supports [Azure AD B2C](https://azure.microsoft.com/services/active-directory-b2c/)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enables you to acquire security tokens to call protected apis",
      "normalized_text": "Enables you to acquire security tokens to call protected apis",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L3",
          "evidence": "The MSAL library for .NET is part of the [Microsoft identity platform for developers](https://aka.ms/aaddevv2) (formerly named Azure AD) v2.0. It enables you to acquire security tokens to call protected APIs. It uses industry standard OAuth2 and OpenID Connect. The library also supports [Azure AD B2C](https://azure.microsoft.com/services/active-directory-b2c/)."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support policy](",
      "normalized_text": "Support policy](",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L16",
          "evidence": "See [Long Term Support policy](./supportPolicy.md) for details."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "support phase|end of support |",
      "normalized_text": "Support phase|end of support |",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L20",
          "evidence": "| Major Version | Last Release | Patch Release Date  | Support Phase|End of Support |"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "include bug fixes or features with non-breaking (additive) api changes",
      "normalized_text": "Include bug fixes or features with non-breaking (additive) api changes",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L38",
          "evidence": "> Minor versions include bug fixes or features with non-breaking (additive) API changes. It is expected that applications using the library can upgrade through the IDE or CLI with no friction. We will not patch old minor versions of the library. When opening new issues, please confirm that you are using the latest minor version."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable you and microsoft to collect data from users of your applications",
      "normalized_text": "Enable you and microsoft to collect data from users of your applications",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L72",
          "evidence": "The software may collect information about you and your use of the software and send it to Microsoft. Microsoft may use this information to provide services and improve our products and services. You may turn off the telemetry as described in the repository. There are also some features in the software that may enable you and Microsoft to collect data from users of your applications. If you use these features, you must comply with applicable law, including providing appropriate notices to users of your applications together with a copy of Microsoft's privacy statement. Our privacy statement is located at https://go.microsoft.com/fwlink/?LinkID=824704. You can learn more about data collection and use in the help documentation and our privacy statement. Your use of the software operates as your consent to these practices."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide services and improve our products and services",
      "normalized_text": "Provide services and improve our products and services",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L72",
          "evidence": "The software may collect information about you and your use of the software and send it to Microsoft. Microsoft may use this information to provide services and improve our products and services. You may turn off the telemetry as described in the repository. There are also some features in the software that may enable you and Microsoft to collect data from users of your applications. If you use these features, you must comply with applicable law, including providing appropriate notices to users of your applications together with a copy of Microsoft's privacy statement. Our privacy statement is located at https://go.microsoft.com/fwlink/?LinkID=824704. You can learn more about data collection and use in the help documentation and our privacy statement. Your use of the software operates as your consent to these practices."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Major versions are supported for twelve months after the release of the next major version.",
      "normalized_text": "Major versions are supported for twelve months after the release of the next major version.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L34",
          "evidence": "- Major versions are supported for twelve months after the release of the next major version."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "Minor versions older than N-1 are not supported.",
      "normalized_text": "Minor versions older than n-1 are not supported.",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/AzureAD/microsoft-authentication-library-for-dotnet#L35",
          "evidence": "- Minor versions older than N-1 are not supported."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process of rewrite and will be released soon",
      "normalized_text": "Process of rewrite and will be released soon",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L1",
          "evidence": "[**WARNING**]: README file is currently in process of rewrite and will be released soon."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provides local login/registration as well as social login using github, facebook, google and other oauth providers",
      "normalized_text": "Provides local login/registration as well as social login using github, facebook, google and other oauth providers",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L7",
          "evidence": "**vue-authenticate** is easily configurable solution for [Vue.js](https://vuejs.org/) that provides local login/registration as well as Social login using Github, Facebook, Google and other OAuth providers."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import vueaxios from 'vue-axios'",
      "normalized_text": "Import vueaxios from 'vue-axios'",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L37",
          "evidence": "import Vue from 'vue'"
        },
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L38",
          "evidence": "import VueAxios from 'vue-axios'"
        },
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L106",
          "evidence": "import Vue from 'vue'"
        },
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L107",
          "evidence": "import Vuex from 'vuex'"
        },
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L108",
          "evidence": "import VueAxios from 'vue-axios'"
        }
      ],
      "frequency": 5,
      "uniqueness_score": 0.2
    },
    {
      "text": "import { vueauthenticate } from 'vue-authenticate'",
      "normalized_text": "Import { vueauthenticate } from 'vue-authenticate'",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L39",
          "evidence": "import VueAuthenticate from 'vue-authenticate'"
        },
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L109",
          "evidence": "import { VueAuthenticate } from 'vue-authenticate'"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "import axios from 'axios';",
      "normalized_text": "Import axios from 'axios';",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L40",
          "evidence": "import axios from 'axios';"
        },
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L110",
          "evidence": "import axios from 'axios';"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "execute application logic after successful social authentication",
      "normalized_text": "Execute application logic after successful social authentication",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L61",
          "evidence": "// Execute application logic after successful login"
        },
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L67",
          "evidence": "// Execute application logic after successful registration"
        },
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L86",
          "evidence": "// Execute application logic after successful social authentication"
        }
      ],
      "frequency": 3,
      "uniqueness_score": 0.3333333333333333
    },
    {
      "text": "import and initialize all required libraries",
      "normalized_text": "Import and initialize all required libraries",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L102",
          "evidence": "#### Import and initialize all required libraries"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "export default new vuex",
      "normalized_text": "Export default new vuex",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L140",
          "evidence": "export default new Vuex.Store({"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "perform vueauthenticate login using vuex actions",
      "normalized_text": "Perform vueauthenticate login using vuex actions",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L163",
          "evidence": "// Perform VueAuthenticate login using Vuex actions"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "import store from '",
      "normalized_text": "Import store from '",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L181",
          "evidence": "import store from './store.js'"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*vue-authenticate** is configurable solution for Vue.js that provides local login/registration as well as Social login using Github, Facebook, Google and other OAuth providers.",
      "normalized_text": "*vue-authenticate** is configurable solution for vue.js that provides local login/registration as well as social logi...",
      "category": "Configuration",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L7",
          "evidence": "**vue-authenticate** is easily configurable solution for [Vue.js](https://vuejs.org/) that provides local login/registration as well as Social login using Github, Facebook, Google and other OAuth providers."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*WARNING:** From version 1.3.0 default request library is `axios` using `vue-axios` wrapper plugin.",
      "normalized_text": "*warning:** from version 1.3.0 default request library is `axios` using `vue-axios` wrapper plugin.",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L15",
          "evidence": "**WARNING:** From version 1.3.0 default request library is `axios` using `vue-axios` wrapper plugin."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*Important**: You must set both `request` and `response` interceptors at all times.",
      "normalized_text": "*important**: you must set both `request` and `response` interceptors at all times.",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/dgrubelic/vue-authenticate#L204",
          "evidence": "**Important**: You must set both `request` and `response` interceptors at all times."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "offers coverage for all owasp top 10 and hackerone top 10 categories including bola, authentication, ssrf, xss, security configurations, etc",
      "normalized_text": "Offers coverage for all owasp top 10 and hackerone top 10 categories including bola, authentication, ssrf, xss, secur...",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L58",
          "evidence": "Akto is an instant, open source API security platform that takes only 60 secs to get started. Akto is used by security teams to maintain a continuous inventory of APIs, test APIs for vulnerabilities and find runtime issues. Akto offers coverage for all OWASP top 10 and HackerOne Top 10 categories including BOLA, authentication, SSRF, XSS, security configurations, etc. Akto's powerful testing engine runs variety of business logic tests by reading traffic data to understand API traffic pattern leading to reduced false positives. Akto can integrate with multiple traffic sources - burpsuite, AWS, postman, GCP, gateways, etc. Here is our [public roadmap](https://github.com/orgs/akto-api-security/projects/8) for this quarter."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "integrate with multiple traffic sources - burpsuite, aws, postman, gcp, gateways, etc",
      "normalized_text": "Integrate with multiple traffic sources - burpsuite, aws, postman, gcp, gateways, etc",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L58",
          "evidence": "Akto is an instant, open source API security platform that takes only 60 secs to get started. Akto is used by security teams to maintain a continuous inventory of APIs, test APIs for vulnerabilities and find runtime issues. Akto offers coverage for all OWASP top 10 and HackerOne Top 10 categories including BOLA, authentication, SSRF, XSS, security configurations, etc. Akto's powerful testing engine runs variety of business logic tests by reading traffic data to understand API traffic pattern leading to reduced false positives. Akto can integrate with multiple traffic sources - burpsuite, AWS, postman, GCP, gateways, etc. Here is our [public roadmap](https://github.com/orgs/akto-api-security/projects/8) for this quarter."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "runs variety of business logic tests by reading traffic data to understand api traffic pattern leading to reduced false positives",
      "normalized_text": "Runs variety of business logic tests by reading traffic data to understand api traffic pattern leading to reduced fal...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L58",
          "evidence": "Akto is an instant, open source API security platform that takes only 60 secs to get started. Akto is used by security teams to maintain a continuous inventory of APIs, test APIs for vulnerabilities and find runtime issues. Akto offers coverage for all OWASP top 10 and HackerOne Top 10 categories including BOLA, authentication, SSRF, XSS, security configurations, etc. Akto's powerful testing engine runs variety of business logic tests by reading traffic data to understand API traffic pattern leading to reduced false positives. Akto can integrate with multiple traffic sources - burpsuite, AWS, postman, GCP, gateways, etc. Here is our [public roadmap](https://github.com/orgs/akto-api-security/projects/8) for this quarter."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enables security and engineering teams to secure their apis by doing three things:",
      "normalized_text": "Enables security and engineering teams to secure their apis by doing three things:",
      "category": "Security & Privacy",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L61",
          "evidence": "Akto enables security and engineering teams to secure their APIs by doing three things:"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run business logic tests in ci/cd](https://docs",
      "normalized_text": "Run business logic tests in ci/cd](https://docs",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L64",
          "evidence": "2. [Run business logic tests in CI/CD](https://docs.akto.io/testing/run-test)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "create inventory",
      "normalized_text": "Create inventory",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L72",
          "evidence": "Step 1: Create inventory"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the following command to run testing cli tool",
      "normalized_text": "Run the following command to run testing cli tool",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L83",
          "evidence": "Run the following commands to install Akto. You'll need to have curl and Docker installed in order to run the container.."
        },
        {
          "url": "https://github.com/akto-api-security/akto#L199",
          "evidence": "Run the following command to run testing CLI tool"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "run the container",
      "normalized_text": "Run the container",
      "category": "Automation & AI",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L83",
          "evidence": "Run the following commands to install Akto. You'll need to have curl and Docker installed in order to run the container.."
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run `docker-compose up -d`",
      "normalized_text": "Run `docker-compose up -d`",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L86",
          "evidence": "3. Run `docker-compose up -d`"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "provide your application's mirrored traffic (0 performance impact)",
      "normalized_text": "Provide your application's mirrored traffic (0 performance impact)",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L104",
          "evidence": "Akto is really powerful in Cloud deployment if you can provide your application's mirrored traffic (0 performance impact). You would also be able to schedule tests in CI/CD and invite more team members on the dashboard. For that, you should install Akto Enterprise edition available [here](https://stairway.akto.io). Read more about it [here](https://www.akto.io/pricing)"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "export akto_mongo_conn=\"mongodb://localhost:27017\"`",
      "normalized_text": "Export akto_mongo_conn=\"mongodb://localhost:27017\"`",
      "category": "Uncategorized",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L182",
          "evidence": "3. `export AKTO_MONGO_CONN=\"mongodb://localhost:27017\"`"
        },
        {
          "url": "https://github.com/akto-api-security/akto#L192",
          "evidence": "4. `export AKTO_MONGO_CONN=\"mongodb://localhost:27017\"`"
        }
      ],
      "frequency": 2,
      "uniqueness_score": 0.5
    },
    {
      "text": "export dashboard_mode=\"local_deploy\"`",
      "normalized_text": "Export dashboard_mode=\"local_deploy\"`",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L183",
          "evidence": "4. `export DASHBOARD_MODE=\"local_deploy\"`"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "generate test report on host machine",
      "normalized_text": "Generate test report on host machine",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L202",
          "evidence": "docker run -v ./:/out  \\ # needed to generate test report on host machine"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run the following before running web server -",
      "normalized_text": "Run the following before running web server -",
      "category": "User Interface",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L220",
          "evidence": "2. To debug backend, run the following before running web server -"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "enable debugging on your java process",
      "normalized_text": "Enable debugging on your java process",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L221",
          "evidence": "a. Set MAVEN_OPTS variable to enable debugging on your Java process"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "export maven_opts=\"-xdebug -xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8081, -dcom",
      "normalized_text": "Export maven_opts=\"-xdebug -xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8081, -dcom",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L223",
          "evidence": "export MAVEN_OPTS=\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8081, -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false\""
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process by id\u201d and save the file",
      "normalized_text": "Process by id\u201d and save the file",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L227",
          "evidence": "c.  Attach the Java debugger from Run and Debug mode. If you are doing this for the first time, click on \u201cCreate launch.json file\u201d and then \u201cAdd configuration\u201d. Choose \u201cJava: Attach process by ID\u201d and save the file. <br/>"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "run and debug mode",
      "normalized_text": "Run and debug mode",
      "category": "Developer Tools",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L227",
          "evidence": "c.  Attach the Java debugger from Run and Debug mode. If you are doing this for the first time, click on \u201cCreate launch.json file\u201d and then \u201cAdd configuration\u201d. Choose \u201cJava: Attach process by ID\u201d and save the file. <br/>"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "process to attach the debugger",
      "normalized_text": "Process to attach the debugger",
      "category": "Core Functionality",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L229",
          "evidence": "d. A list of running Java processes with show up. Select the web server process to attach the debugger"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "*Note**: If using Docker Desktop, consider changing the memory allocation to 8 GB for better performance",
      "normalized_text": "*note**: if using docker desktop, consider changing the memory allocation to 8 gb for better performance",
      "category": "Performance",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L129",
          "evidence": "**Note**: If using Docker Desktop, consider changing the memory allocation to 8 GB for better performance"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "-e API_COLLECTION_ID='123' \\ # api collection id on which you want to run tests",
      "normalized_text": "-e api_collection_id='123' \\ # api collection id on which you want to run tests",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L206",
          "evidence": "-e API_COLLECTION_ID='123' \\ # api collection id on which you want to run tests"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    },
    {
      "text": "-e TEST_APIS='https://demo.com/api/books https://demo.com/api/cars' \\ # space separated apis from the api collection on which you want to run tests. If not present, all apis in the collection will be tested. [optional]",
      "normalized_text": "-e test_apis='https://demo.com/api/books https://demo.com/api/cars' \\ # space separated apis from the api collection ...",
      "category": "Integration & APIs",
      "sources": [
        {
          "url": "https://github.com/akto-api-security/akto#L207",
          "evidence": "-e TEST_APIS='https://demo.com/api/books https://demo.com/api/cars' \\ # space separated apis from the api collection on which you want to run tests. If not present, all apis in the collection will be tested. [optional]"
        }
      ],
      "frequency": 1,
      "uniqueness_score": 1.0
    }
  ],
  "categories": {
    "Security & Privacy": 69,
    "User Interface": 29,
    "Uncategorized": 148,
    "Automation & AI": 23,
    "Integration & APIs": 52,
    "Core Functionality": 13,
    "Configuration": 28,
    "Developer Tools": 15,
    "Performance": 5,
    "Documentation": 2
  }
}